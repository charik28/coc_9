<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<!--
HS 코드 관리
@Author : Shin-Hyun Woo
-->
<mapper namespace="alpass.ipt.clr.trm.hsm.mapper.ClrHsmHsCdMapper">
    <sql id="sqlSearchQuery">
        <if test="hsCd != null and hsCd != ''">
            AND		HS_CD LIKE #{hsCd} || '%'
        </if>
        <if test="hsDesc != null and hsDesc != ''">
            AND		HS_DESC LIKE '%' || #{hsDesc} || '%'
        </if>
        <if test="hsClsfCd != null and hsClsfCd != ''">
            AND		HS_CLSF_CD = #{hsClsfCd}
        </if>
        <if test="hsAplyStrtDt != null and hsAplyStrtDt != ''">
            AND TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') BETWEEN HS_APLY_STRT_DT AND HS_APLY_END_DT
        </if>
        <if test="basedDt != null and basedDt != ''">
            AND		TO_CHAR(TO_DATE(#{basedDt}, 'DD/MM/YYYY'), 'YYYYMMDD') BETWEEN HS_APLY_STRT_DT AND HS_APLY_END_DT
        </if>
        <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(hsAplyStrtDtFrom)">
            AND HS_APLY_STRT_DT  = TO_CHAR(TO_DATE(#{hsAplyStrtDtFrom}, 'DD/MM/YYYY'), 'YYYYMMDD')
        </if>
        <if test="mrktPrcCd != null and mrktPrcCd != ''">
            AND		MRKT_PRC_CD = #{mrktPrcCd}
        </if>
        <if test='hsTaxYn.equals("Y")'>
            AND		LENGTH(HS_CD) = 10
        </if>
        <if test="taxCd != null and taxCd != ''">
            AND	EXISTS (
            SELECT 1 FROM TB_CLRI_PDLS_TFRT B, TB_CLRI_TAX_CD C
            WHERE B.TAX_CD = C.TAX_CD
            AND A.HS_CD = B.HS_CD
            AND B.DEL_YN ='N'
            AND C.DEL_YN ='N'
            AND B.TFRT_CTGY_CD = 'GL'
            AND B.TAX_CD = #{taxCd}
            )
        </if>
        <if test="trftAplyStrtDt != null and trftAplyStrtDt != ''">
            AND EXISTS (
            SELECT 1 FROM TB_CLRI_PDLS_TFRT B
            WHERE  A.HS_CD = B.HS_CD
            AND B.DEL_YN = 'N'
            AND B.APLY_STRT_DT = TO_CHAR(TO_DATE(#{trftAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
            )
        </if>
        <if test="prvlCd != null and prvlCd != ''">
            AND EXISTS (
            SELECT 1 FROM TB_CLRI_PDLS_TFRT B
            WHERE A.HS_CD = B.HS_CD
            AND B.DEL_YN = 'N'
            AND B.PRVL_CD = #{prvlCd}
            )
        </if>
    </sql>

    <sql id="sqlSelectQuery">
        SELECT
            ROW_NUMBER() OVER(PARTITION BY HS_CD ORDER BY HS_APLY_STRT_DT DESC) RN
             , HS_CD
             , HS_APLY_STRT_DT
             , HS_APLY_END_DT
             , HS_CLSF_CD
             , LENGTH(HS_CD) HS_CD_LENGTH
             , UPR_HS_CD
             , UPR_HS_APLY_STRT_DT
             , HS_DESC
             , BRND_NM_WRTE_YN
             , INGR_WRTE_YN
             , MRKT_PRC_CD
             , DPRC_RT
             , HS_ERR_PVNT_VAL
             , REQ_CFRM_TRGT_YN
             , RMRK_CN
             , HS_USE_GRP_CD
             , HS_CHG_RSN_CD
             , LAST_YN
             , DEL_YN
             , FRST_REGST_ID
             , FRST_RGSR_DTTM
             , LAST_CHPR_ID
             , LAST_CHG_DTTM
             , NOTE_CN
             , QTY_UT_CD
             , ADIT_TX_QTY_UT_CD
        FROM		TB_CLRI_HS_CD A
        WHERE		DEL_YN = 'N'
    </sql>

    <update id="updateHsCdNote" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        UPDATE TB_CLRI_HS_CD SET
            NOTE_CN = #{noteCn:CLOB}
                               ,  LAST_CHPR_ID = #{lastChprId}
                               ,  LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE		HS_CD = #{hsCd}
          AND			HS_APLY_STRT_DT  = NVL2(#{hsAplyStrtDt}, TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMMDD'))
    </update>

    <select id="selectHsCd" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** selectHsCd : HS코드 상세정보 조회 **/
        SELECT
        RN
        , A.HS_CD
        , TO_CHAR(TO_DATE(A.HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_STRT_DT
        , TO_CHAR(TO_DATE(A.HS_APLY_END_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_END_DT
        , A.HS_CLSF_CD
        , A.UPR_HS_CD
        , A.HS_CD_LENGTH
        , TO_CHAR(TO_DATE(A.UPR_HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') UPR_HS_APLY_STRT_DT
        , A.HS_DESC
        , A.BRND_NM_WRTE_YN
        , A.INGR_WRTE_YN
        , A.MRKT_PRC_CD
        , A.DPRC_RT
        , A.HS_ERR_PVNT_VAL
        , A.REQ_CFRM_TRGT_YN
        , A.HS_USE_GRP_CD
        , A.HS_CHG_RSN_CD
        , A.RMRK_CN
        , A.LAST_YN
        , A.DEL_YN
        , A.FRST_REGST_ID
        , A.FRST_RGSR_DTTM
        , A.LAST_CHPR_ID
        , A.LAST_CHG_DTTM
        , A.NOTE_CN
        , A.QTY_UT_CD UQN
        , A.ADIT_TX_QTY_UT_CD
        FROM (
        <include refid="sqlSelectQuery"/>
        ) A
        WHERE A.HS_CD = #{hsCd}
          <choose>
              <when test="hsAplyStrtDt != null and hsAplyStrtDt != ''">
                  AND HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
              </when>
              <otherwise>
                  AND RN = 1
              </otherwise>
          </choose>
    </select>

    <select id="selectExcelHsCd" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** selectExcelHsCd : HS코드 EXCEL 상세정보 조회 **/
        SELECT
        A.RN
        , A.HS_CD
        , TO_CHAR(TO_DATE(A.HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_STRT_DT
        , TO_CHAR(TO_DATE(A.HS_APLY_END_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_END_DT
        , A.HS_CLSF_CD
        , A.UPR_HS_CD
        , A.HS_CD_LENGTH
        , TO_CHAR(TO_DATE(A.UPR_HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') UPR_HS_APLY_STRT_DT
        , A.HS_DESC
        , A.BRND_NM_WRTE_YN
        , A.INGR_WRTE_YN
        , A.MRKT_PRC_CD
        , A.DPRC_RT
        , A.HS_ERR_PVNT_VAL
        , A.REQ_CFRM_TRGT_YN
        , A.RMRK_CN
        , A.LAST_YN
        , A.HS_USE_GRP_CD
        , A.HS_CHG_RSN_CD
        , A.DEL_YN
        , A.FRST_REGST_ID
        , A.FRST_RGSR_DTTM
        , A.LAST_CHPR_ID
        , A.LAST_CHG_DTTM
        , A.NOTE_CN
        , A.QTY_UT_CD UQN
        , A.ADIT_TX_QTY_UT_CD
        FROM (
        <include refid="sqlSelectQuery"/>
        ) A
        WHERE A.HS_CD = #{hsCd}
        <if test="@org.apache.commons.lang3.StringUtils@isBlank(hsAplyStrtDt) and  @org.apache.commons.lang3.StringUtils@isBlank(hsAplyEndDt)">
         AND TO_CHAR(CURRENT_DATE,'YYYYMMDD') >= HS_APLY_STRT_DT
        </if>
        AND RN = 1
    </select>


    <select id="selectHsCdList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** selectHsCdList : HS코드 목록 조회 **/
        <include refid="pagination.header" />
        SELECT
        A.HS_CD
        , TO_CHAR(TO_DATE(A.HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_STRT_DT
        , TO_CHAR(TO_DATE(A.HS_APLY_END_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_END_DT
        , A.HS_CLSF_CD
        , A.HS_CD_LENGTH
        , A.UPR_HS_CD
        , TO_CHAR(TO_DATE(A.UPR_HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') UPR_HS_APLY_STRT_DT
        , A.HS_DESC
        , A.BRND_NM_WRTE_YN
        , A.INGR_WRTE_YN
        , A.MRKT_PRC_CD
        , A.DPRC_RT
        , A.HS_ERR_PVNT_VAL
        , A.REQ_CFRM_TRGT_YN
        , A.RMRK_CN
        , A.HS_USE_GRP_CD
        , A.HS_CHG_RSN_CD
        , A.LAST_YN
        , A.DEL_YN
        , A.FRST_REGST_ID
        , A.FRST_RGSR_DTTM
        , A.LAST_CHPR_ID
        , A.LAST_CHG_DTTM
        , A.NOTE_CN
        , A.QTY_UT_CD  UQN
        , A.ADIT_TX_QTY_UT_CD
        FROM (
        <include refid="sqlSelectQuery" />
        <include refid="sqlSearchQuery" />
        ORDER BY  HS_CD, HS_CLSF_CD
        ) A WHERE 1=1
        <if test='hsTaxYn.equals("Y")'>
            AND	RN =1
        </if>
        <include refid="pagination.footer" />
    </select>

    <select id="selectHsQtyUtCdList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsQtyUtCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsQtyUtCdVo">
        SELECT
        RN
        ,HS_CD
        ,HS_APLY_STRT_DT
        ,CLUS_SRNO
        ,QTY_UT_CD
        ,USE_YN
        ,DEL_YN
        ,CASE WHEN HS_APLY_STRT_DT  > TO_CHAR(CURRENT_DATE,'YYYYMMDD') THEN 'Y' ELSE 'N' END MODIFY_FIX_YN
        FROM
        (SELECT
        RANK() OVER(PARTITION BY  A.HS_CD ORDER BY HS_APLY_STRT_DT  DESC) AS RN
        ,A.HS_CD
        ,A.HS_APLY_STRT_DT
        ,A.CLUS_SRNO
        ,A.QTY_UT_CD
        ,A.USE_YN
        ,A.DEL_YN
        ,A.FRST_REGST_ID
        ,A.FRST_RGSR_DTTM
        ,A.LAST_CHPR_ID
        ,A.LAST_CHG_DTTM
        FROM TB_CLRI_HS_QTY_UT_CD A
        WHERE 1=1
        AND DEL_YN ='N'
        <if test="hsCd != null and hsCd != ''">
            AND		A.HS_CD = #{hsCd}
        </if>
        <if test="hsAplyStrtDt != null and hsAplyStrtDt != ''">
            AND	NVL2(#{hsAplyStrtDt}, TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMMDD')) = A.HS_APLY_STRT_DT
        </if>
        <if test="taxCd != null and taxCd != ''">
            AND	EXISTS (
            SELECT 1 FROM TB_CLRI_PDLS_TFRT B, TB_CLRI_TAX_CD C
            WHERE B.TAX_CD = C.TAX_CD
            AND A.HS_CD = B.HS_CD
            AND B.DEL_YN ='N'
            AND C.DEL_YN ='N'
            AND B.TAX_CD = #{taxCd}
            )
        </if>
        <if test="trftAplyStrtDt != null and trftAplyStrtDt != ''">
            AND EXISTS (
            SELECT 1 FROM TB_CLRI_PDLS_TFRT B
            WHERE  A.HS_CD = B.HS_CD
            AND B.DEL_YN = 'N'
            AND B.APLY_STRT_DT = TO_CHAR(TO_DATE(#{trftAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
            )
        </if>
        <if test="prvlCd != null and prvlCd != ''">
            AND EXISTS (
            SELECT 1 FROM TB_CLRI_PDLS_TFRT B
            WHERE A.HS_CD = B.HS_CD
            AND B.DEL_YN = 'N'
            AND B.PRVL_CD = #{prvlCd}
            )
        </if>
        )WHERE RN=1
    </select>

    <select id="selectExcpMtrCdCdList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsExcpMtrCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsExcpMtrCdVo">
        SELECT
              HS_CD
            , TO_CHAR(TO_DATE(HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS HS_APLY_STRT_DT
            , HS_EXCP_MTR_CD
            , HS_EXCP_MTR_NM
            , APLY_SCP_CD
            , FN_GET_CD_VDVAL_NM('CLR_0071', APLY_SCP_CD, #{langCd}) AS APLY_SCP_NM
            , APLY_CD
            , SLCT_CLUS_SRNO
            , TO_CHAR(TO_DATE(APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS APLY_STRT_DT
            , TO_CHAR(TO_DATE(APLY_END_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS APLY_END_DT
            , USE_YN
            , 'N' FIX_YN
            , CASE WHEN APLY_STRT_DT > TO_CHAR(CURRENT_DATE,'YYYYMMDD') THEN 'Y' ELSE 'N' END MODIFY_FIX_YN
            , CASE WHEN APLY_STRT_DT > TO_CHAR(CURRENT_DATE,'YYYYMMDD') THEN 'Y'
                   WHEN APLY_END_DT >= TO_CHAR(CURRENT_DATE,'YYYYMMDD') AND TO_CHAR(CURRENT_DATE,'YYYYMMDD')  >= APLY_STRT_DT THEN 'Y'
                   ELSE 'N' END APLY_END_FIX_YN
        FROM
        (SELECT
              RANK() OVER(PARTITION BY A.HS_CD ORDER BY HS_APLY_STRT_DT DESC) AS RN
            , A.HS_CD
            , A.HS_APLY_STRT_DT
            , A.HS_EXCP_MTR_CD
            , A.HS_EXCP_MTR_NM
            , A.APLY_SCP_CD
            , A.APLY_CD
            , A.SLCT_CLUS_SRNO
            , A.APLY_STRT_DT
            , A.APLY_END_DT
            , A.DEL_YN
            , A.USE_YN
            , A.FRST_REGST_ID
            , A.FRST_RGSR_DTTM
            , A.LAST_CHPR_ID
            , A.LAST_CHG_DTTM
        FROM TB_CLRI_HS_EXCP_MTR_CD_MGMT A
        WHERE 1=1
        AND A.DEL_YN = 'N'
        <if test="hsCd != null and hsCd != ''">
            AND A.HS_CD = #{hsCd}
        </if>
        <if test="hsAplyStrtDt != null and hsAplyStrtDt != ''">
            AND NVL2(#{hsAplyStrtDt}, TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(SYSDATE,'YYYYMMDD')) = A.HS_APLY_STRT_DT
        </if>
        <if test="trftAplyStrtDt != null and trftAplyStrtDt != ''">
            AND EXISTS (
            SELECT 1 FROM TB_CLRI_PDLS_TFRT B
            WHERE  A.HS_CD = B.HS_CD
            AND B.DEL_YN = 'N'
            AND B.APLY_STRT_DT = TO_CHAR(TO_DATE(#{trftAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
            )
        </if>
        <if test="prvlCd != null and prvlCd != ''">
            AND EXISTS (
            SELECT 1 FROM TB_CLRI_PDLS_TFRT B
            WHERE A.HS_CD = B.HS_CD
            AND B.DEL_YN = 'N'
            AND B.PRVL_CD = #{prvlCd}
            )
        </if>
        )WHERE RN =1
    </select>

    <select id="selectAplyHsCdCnt" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="Integer">
        /** selectAplyHsCdCnt : HS코드 적용일자 중복 데이터 조회 **/
		<![CDATA[
        SELECT
            COUNT(*)
        FROM		TB_CLRI_HS_CD
        WHERE		DEL_YN = 'N'
          AND			HS_CD = #{hsCd}
          AND (( TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') BETWEEN   HS_APLY_STRT_DT AND  HS_APLY_END_DT
           OR TO_CHAR(TO_DATE(#{hsAplyEndDt}, 'DD/MM/YYYY'), 'YYYYMMDD') BETWEEN   HS_APLY_STRT_DT AND  HS_APLY_END_DT)
           OR ( TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') <= HS_APLY_STRT_DT
          AND TO_CHAR(TO_DATE(#{hsAplyEndDt}, 'DD/MM/YYYY'), 'YYYYMMDD') >= HS_APLY_END_DT))
        ]]>
    </select>

    <select id="selectUprHsAplyStrtDtChk" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="int">
        /** selectUprHsAplyStrtDtChk : 상위 HS 적용시작 일자 유무 및 유효기간 체크**/
        SELECT
        COUNT(*)
        FROM		TB_CLRI_HS_CD
        WHERE		DEL_YN = 'N'
        AND			HS_CD = #{uprHsCd}
        AND			HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{uprHsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
        <if test="searchTpCd == 1">
            AND			TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') BETWEEN HS_APLY_STRT_DT AND HS_APLY_END_DT
            AND			TO_CHAR(TO_DATE(#{hsAplyEndDt}, 'DD/MM/YYYY'), 'YYYYMMDD') BETWEEN HS_APLY_STRT_DT AND HS_APLY_END_DT
        </if>
    </select>

    <insert id="insertClrHsCd" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** insertClrHsCd : HS코드 정보 등록 **/
        INSERT INTO TB_CLRI_HS_CD (
                                    HS_CD
                                  , HS_APLY_STRT_DT
                                  , HS_APLY_END_DT
                                  , HS_CLSF_CD
                                  , UPR_HS_CD
                                  , UPR_HS_APLY_STRT_DT
                                  , HS_DESC
                                  , BRND_NM_WRTE_YN
                                  , INGR_WRTE_YN
                                  , MRKT_PRC_CD
                                  , DPRC_RT
                                  , LAST_YN
                                  , DEL_YN
                                  , HS_ERR_PVNT_VAL
                                  , REQ_CFRM_TRGT_YN
                                  , RMRK_CN
                                  , HS_USE_GRP_CD
                                  , HS_CHG_RSN_CD
                                  , QTY_UT_CD
                                  , ADIT_TX_QTY_UT_CD
                                  , FRST_REGST_ID
                                  , FRST_RGSR_DTTM
                                  , LAST_CHPR_ID
                                  , LAST_CHG_DTTM
        ) VALUES (
                   #{hsCd}
                 , TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
                 , TO_CHAR(TO_DATE(#{hsAplyEndDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
                 , #{hsClsfCd}
                 , #{uprHsCd}
                 , TO_CHAR(TO_DATE(#{uprHsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
                 , #{hsDesc}
                 , NVL(#{brndNmWrteYn},'N')
                 , NVL(#{ingrWrteYn},'N')
                 , #{mrktPrcCd}
                 , #{dprcRt}
                 , NVL(#{lastYn},'Y')
                 , 'N'
                 , #{hsErrPvntVal}
                 , NVL(#{reqCfrmTrgtYn},'N')
                 , #{rmrkCn}
                 , #{hsUseGrpCd}
                 , #{hsChgRsnCd}
                 , #{uqn}
                 , #{aditTxQtyUtCd}
                 , #{frstRegstId}
                 , SYSTIMESTAMP
                 , #{lastChprId}
                 , SYSTIMESTAMP
                 )
    </insert>
    <delete id="deleteHsQtyUtCdList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** deleteHsQtyUtCdList : HS 수량단위 정보 등록전 삭제 **/
        UPDATE TB_CLRI_HS_QTY_UT_CD SET DEL_YN ='Y', LAST_CHPR_ID =#{lastChprId}, LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE		HS_CD = #{hsCd}
        AND			HS_APLY_STRT_DT  = NVL2(#{hsAplyStrtDt}, TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMMDD'))
    </delete>

    <delete id="deleteHsExcpMtrCdList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** deleteHsExcpMtrCdList : HS 예외사항코드 정보 등록전 삭제 **/
        UPDATE TB_CLRI_HS_EXCP_MTR_CD_MGMT SET DEL_YN ='Y', LAST_CHPR_ID =#{lastChprId}, LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE  HS_CD = #{hsCd}
        AND	   HS_APLY_STRT_DT = NVL2(#{hsAplyStrtDt}, TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMMDD'))
    </delete>

    <insert id="insertHsQtyUtCd" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsQtyUtCdVo">
        /** insertHsQtyUtCd : HS 수량단위 정보 등록 **/
        WITH upset AS (
        UPDATE TB_CLRI_HS_QTY_UT_CD SET DEL_YN ='N'
            ,USE_YN = NVL(#{useYn},'Y')
            ,LAST_CHPR_ID = 'SYSTEM'                         /** Id Du Modificateur Final !== 최종변경자ID ==! */
            ,LAST_CHG_DTTM = SYSTIMESTAMP                               /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
        WHERE  HS_CD = #{hsCd}
          AND  HS_APLY_STRT_DT = NVL2(#{hsAplyStrtDt}, TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMMDD'))
          AND  QTY_UT_CD =#{qtyUtCd}
          RETURNING *
        )
        INSERT INTO TB_CLRI_HS_QTY_UT_CD ( HS_CD
                                         , HS_APLY_STRT_DT
                                         , CLUS_SRNO
                                         , QTY_UT_CD
                                         , USE_YN
                                         , DEL_YN
                                         , FRST_REGST_ID
                                         , FRST_RGSR_DTTM
                                         , LAST_CHPR_ID
                                         , LAST_CHG_DTTM
        )
        SELECT
                   #{hsCd}
               , TO_CHAR(TO_DATE(#{hsAplyStrtDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
               , #{clusSrno}
               , #{qtyUtCd}
               , NVL(#{useYn},'Y')
               , 'N'
               , #{frstRegstId}
               , SYSTIMESTAMP
               , #{lastChprId}
               , SYSTIMESTAMP
         WHERE NOT EXISTS(SELECT * FROM upset)


    </insert>

    <insert id="insertHsExcpMtrCd" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsExcpMtrCdVo">
        /** insertHsExcpMtrCd : HS 얘외코드 정보 등록 **/
        <selectKey keyProperty="hsExcpMtrCd" resultType="String" order="BEFORE">
            SELECT LPAD(CAST(COALESCE(MAX(CAST(HS_EXCP_MTR_CD AS INTEGER)), 0) + 1 AS VARCHAR), 4, '0')
            FROM TB_CLRI_HS_EXCP_MTR_CD_MGMT
            WHERE HS_CD = #{hsCd}
            AND HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{hsAplyStrtDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            AND HS_EXCP_MTR_CD !~ '[a-zA-Z]'
        </selectKey>
        INSERT INTO TB_CLRI_HS_EXCP_MTR_CD_MGMT
            ( HS_CD
            , HS_APLY_STRT_DT
            , HS_EXCP_MTR_CD
            , APLY_SCP_CD
            , SLCT_CLUS_SRNO
            , APLY_CD
            , HS_EXCP_MTR_NM
            , APLY_STRT_DT
            , APLY_END_DT
            , USE_YN
            , DEL_YN
            , FRST_REGST_ID
            , FRST_RGSR_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
            )
        VALUES
            (
              #{hsCd}
            , TO_CHAR(TO_DATE(#{hsAplyStrtDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , #{hsExcpMtrCd}
            , #{aplyScpCd}
            , (SELECT NVL(MAX(SLCT_CLUS_SRNO), 0) + 1 FROM TB_CLRI_HS_EXCP_MTR_CD_MGMT WHERE HS_CD = #{hsCd} AND HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') )
            , #{aplyCd}
            , #{hsExcpMtrNm}
            , #{aplyStrtDt}
            , #{aplyEndDt}
            , #{useYn}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
            )
    </insert>

    <update id="updateHsExcpMtrCd" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsExcpMtrCdVo">
        /*updateHsExcpMtrCd : HS 예외사항코드 수정*/
        UPDATE TB_CLRI_HS_EXCP_MTR_CD_MGMT
        SET
        <trim prefixOverrides="," >
              HS_EXCP_MTR_NM = #{hsExcpMtrNm}
            , APLY_SCP_CD = #{aplyScpCd}
            , APLY_CD = #{aplyCd}
            , APLY_STRT_DT = #{aplyStrtDt}
            , APLY_END_DT = #{aplyEndDt}
            , DEL_YN = 'N'                                /** Suppression ON !== 삭제여부 ==! */
            , LAST_CHPR_ID = #{lastChprId}                /** ID du modificateur final !==최종변경자ID==! */
            , LAST_CHG_DTTM = SYSTIMESTAMP                /** Date et heure de modification finale !==최종변경일시==! */
        </trim>
        WHERE HS_CD = #{hsCd}                           /** Code APC !== APC코드 ==! */
        AND   HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{hsAplyStrtDt} , 'DD/MM/YYYY'), 'YYYYMMDD')           /** Code des extraits de APC !== APC예외사항코드 ==! */
        AND   HS_EXCP_MTR_CD = #{hsExcpMtrCd}           /** Code des extraits de APC !== APC예외사항코드 ==! */
    </update>

    <delete id="deleteHsExcpMtrCd" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsExcpMtrCdVo">
        /** deleteHsExcpMtrCd : HS 예외사항코드 삭제 **/
        UPDATE TB_CLRI_HS_EXCP_MTR_CD_MGMT SET
              DEL_YN = 'Y'
            , LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE HS_CD = #{hsCd}
        AND	  HS_APLY_STRT_DT = NVL2(#{hsAplyStrtDt}, TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMMDD'))
        AND	  HS_EXCP_MTR_CD = #{hsExcpMtrCd}
    </delete>

    <select id="selectBfHsCdChk" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** selectBfHsCdChk : HS코드 등록시 동일한 HS코드이면서  HS적용종료일자 - 1일에 해당하는 HS적용시작일자를 갖는 데이터가 존재하는지 확인 **/
        SELECT
               HS_CD HS_CD
             , HS_APLY_STRT_DT AS BF_HS_APLY_STRT_DT
             , HS_APLY_END_DT AS BF_HS_APLY_END_DT
             , UPR_HS_CD UPR_HS_CD
             , UPR_HS_APLY_STRT_DT
        FROM (
                    SELECT
                        HS_CD
                        , HS_APLY_STRT_DT
                        , HS_APLY_END_DT
                        , UPR_HS_CD
                        , UPR_HS_APLY_STRT_DT
                    FROM TB_CLRI_HS_CD
                    START WITH UPR_HS_CD = #{uprHsCd}               /* 수정대상 상위HS코드 */
                    AND UPR_HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{uprHsAplyStrtDt} , 'DD/MM/YYYY'), 'YYYYMMDD')   /* 수정대상 상위HS코드시작일자 */
                    AND HS_CD = #{hsCd}                        /* 수정대상 HS코드 */
                    AND HS_APLY_END_DT = TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY')-1, 'YYYYMMDD')
                    AND DEL_YN = 'N'
                    CONNECT BY PRIOR HS_CD = UPR_HS_CD
             ) WHERE HS_CD <![CDATA[ <> ]]> #{hsCd}

    </select>

    <insert id="insertBfLwprHsCdList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** insertBfLwprHsCdList : 등록하려는 HS코드의 이전 HS코드가 존재하는 경우, 적용종료일자 당겨진  하위 HS코드들을 일괄로 인서트**/
        INSERT INTO TB_CLRI_HS_CD
        (
            HS_CD
        , HS_APLY_STRT_DT
        , HS_APLY_END_DT
        , HS_CLSF_CD
        , UPR_HS_CD
        , UPR_HS_APLY_STRT_DT
        , HS_DESC
        , BRND_NM_WRTE_YN
        , INGR_WRTE_YN
        , MRKT_PRC_CD
        , DPRC_RT
        , LAST_YN
        , REQ_CFRM_TRGT_YN
        , RMRK_CN
        , HS_ERR_PVNT_VAL
        , DEL_YN
        , FRST_REGST_ID
        , FRST_RGSR_DTTM
        , LAST_CHPR_ID
        , LAST_CHG_DTTM
        , NOTE_CN
        , HS_USE_GRP_CD
        , HS_CHG_RSN_CD
        , QTY_UT_CD
        , ADIT_TX_QTY_UT_CD
        )
        SELECT
            HS_CD
             , TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') AS HS_APLY_STRT_DT
             , TO_CHAR(TO_DATE(#{hsAplyEndDt}, 'DD/MM/YYYY'), 'YYYYMMDD') AS HS_APLY_END_DT
             , HS_CLSF_CD
             , UPR_HS_CD
             , UPR_HS_APLY_STRT_DT
             , HS_DESC
             , BRND_NM_WRTE_YN
             , INGR_WRTE_YN
             , MRKT_PRC_CD
             , DPRC_RT
             , LAST_YN
             , REQ_CFRM_TRGT_YN
             , RMRK_CN
             , HS_ERR_PVNT_VAL
             , 'N'
             , #{frstRegstId}
             , SYSTIMESTAMP
             , #{lastChprId}
             , SYSTIMESTAMP
             , NOTE_CN
             , HS_USE_GRP_CD
             , HS_CHG_RSN_CD
             , QTY_UT_CD
             , ADIT_TX_QTY_UT_CD
        FROM (
                 SELECT
                     HS_CD
                      , HS_APLY_STRT_DT
                      , HS_APLY_END_DT
                      , HS_CLSF_CD
                      , UPR_HS_CD
                      , UPR_HS_APLY_STRT_DT
                      , HS_DESC
                      , BRND_NM_WRTE_YN
                      , INGR_WRTE_YN
                      , MRKT_PRC_CD
                      , DPRC_RT
                      , LAST_YN
                      , REQ_CFRM_TRGT_YN
                      , RMRK_CN
                      , HS_ERR_PVNT_VAL
                      , NOTE_CN
                      , HS_USE_GRP_CD
                      , HS_CHG_RSN_CD
                      , QTY_UT_CD
                      , ADIT_TX_QTY_UT_CD
                 FROM TB_CLRI_HS_CD
                 WHERE UPR_HS_CD = #{uprHsCd}                   /* 등록하려는 HS코드의 이전 HS코드, 상위HS코드 */
                     AND UPR_HS_APLY_STRT_DT = #{uprHsAplyStrtDt}     /* 등록하려는 HS코드의 이전 HS코드, 상위HS코드시작일자 */
                     AND HS_CD = #{hsCd}                              /* 등록하려는 HS코드 */
                     AND HS_APLY_STRT_DT = #{bfHsAplyStrtDt}          /* 등록하려는 HS코드의 이전 HS코드, HS적용시작일자 */
                     AND DEL_YN = 'N'
             )
    </insert>

    <insert id="insertBfLwprHsQtyUtCdList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsQtyUtCdVo">
        /** insertBfLwprHsQtyUtCdList : 등록하려는 HS코드의 이전 HS코드가 존재하는 경우, 적용종료일자 당겨진  하위 HS코드들의 측정수량단위를 일괄로 인서트**/
        INSERT INTO TB_CLRI_HS_QTY_UT_CD
        (
            HS_CD
        , HS_APLY_STRT_DT
        , CLUS_SRNO
        , QTY_UT_CD
        , USE_YN
        , DEL_YN
        , FRST_REGST_ID
        , FRST_RGSR_DTTM
        , LAST_CHPR_ID
        , LAST_CHG_DTTM
        )
        SELECT
            HS_CD
             , TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') AS HS_APLY_STRT_DT
             , CLUS_SRNO
             , QTY_UT_CD
             , USE_YN
             , DEL_YN
             , #{frstRegstId}
             , SYSTIMESTAMP
             , #{lastChprId}
             , SYSTIMESTAMP
        FROM (
                 SELECT
                     A.HS_CD
                      , A.HS_APLY_STRT_DT
                      , B.CLUS_SRNO
                      , B.QTY_UT_CD
                      , B.USE_YN
                      , B.DEL_YN
                      , A.HS_APLY_END_DT
                 FROM TB_CLRI_HS_CD A
                          LEFT OUTER JOIN TB_CLRI_HS_QTY_UT_CD B
                                          ON(A.HS_CD = B.HS_CD AND A.HS_APLY_STRT_DT = B.HS_APLY_STRT_DT)
                     WHERE A.UPR_HS_CD = #{uprHsCd}                   /* 등록하려는 HS코드의 이전 HS코드, 상위HS코드 */
                     AND A.UPR_HS_APLY_STRT_DT = #{uprHsAplyStrtDt}     /* 등록하려는 HS코드의 이전 HS코드, 상위HS코드시작일자 */
                     AND A.HS_CD = #{hsCd}                              /* 등록하려는 HS코드 */
                     AND A.HS_APLY_STRT_DT = #{bfHsAplyStrtDt}          /* 등록하려는 HS코드의 이전 HS코드, HS적용시작일자 */
                     AND A.DEL_YN = 'N'
             )
    </insert>

    <insert id="insertBfLwprHsExcpMtrCdList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsExcpMtrCdVo">
        /** insertBfLwprHsExcpMtrCdList : 등록하려는 HS코드의 이전 HS코드가 존재하는 경우, 적용종료일자 당겨진  하위 HS코드들의 예외사항코드를 일괄로 인서트**/
        INSERT INTO TB_CLRI_HS_EXCP_MTR_CD_MGMT
        (
          HS_CD
        , HS_APLY_STRT_DT
        , HS_EXCP_MTR_CD
        , USE_YN
        , DEL_YN
        , FRST_REGST_ID
        , FRST_RGSR_DTTM
        , LAST_CHPR_ID
        , LAST_CHG_DTTM
        )
        SELECT
            HS_CD
             , TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') AS HS_APLY_STRT_DT
             , HS_EXCP_MTR_CD
             , USE_YN
             , DEL_YN
             , #{frstRegstId}
             , SYSTIMESTAMP
             , #{lastChprId}
             , SYSTIMESTAMP
        FROM (
                 SELECT
                     A.HS_CD
                      , A.HS_APLY_STRT_DT
                      , B.HS_EXCP_MTR_CD
                      , B.USE_YN
                      , B.DEL_YN
                      , A.HS_APLY_END_DT
                 FROM TB_CLRI_HS_CD A
                          LEFT OUTER JOIN TB_CLRI_HS_EXCP_MTR_CD_MGMT B
                                          ON(A.HS_CD = B.HS_CD AND A.HS_APLY_STRT_DT = B.HS_APLY_STRT_DT)
                     WHERE A.UPR_HS_CD = #{uprHsCd}                   /* 등록하려는 HS코드의 이전 HS코드, 상위HS코드 */
                     AND A.UPR_HS_APLY_STRT_DT = #{uprHsAplyStrtDt}     /* 등록하려는 HS코드의 이전 HS코드, 상위HS코드시작일자 */
                     AND A.HS_CD = #{hsCd}                              /* 등록하려는 HS코드 */
                     AND A.HS_APLY_STRT_DT = #{bfHsAplyStrtDt}          /* 등록하려는 HS코드의 이전 HS코드, HS적용시작일자 */
                     AND A.DEL_YN = 'N'
             )
    </insert>

    <update id="updateClrHsCd" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** updateClrHsCd : HS코드 정보 수정 **/
        UPDATE		TB_CLRI_HS_CD SET
        <trim prefixOverrides="," >
            HS_APLY_END_DT = TO_CHAR(TO_DATE(#{hsAplyEndDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')
            , LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
            , HS_CHG_RSN_CD = #{hsChgRsnCd}
            <if test='@org.apache.commons.lang3.StringUtils@isNotBlank(hsAplyStrtDt) and  compareNowDate == "Y"'>
                ,HS_CLSF_CD = #{hsClsfCd}
                ,UPR_HS_CD = #{uprHsCd}
                ,HS_ERR_PVNT_VAL = #{hsErrPvntVal}
                ,UPR_HS_APLY_STRT_DT =TO_CHAR(TO_DATE(#{uprHsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')
                ,MRKT_PRC_CD = #{mrktPrcCd}
                ,DPRC_RT = #{dprcRt}
                ,REQ_CFRM_TRGT_YN =#{reqCfrmTrgtYn}
                ,RMRK_CN =#{rmrkCn}
                ,HS_USE_GRP_CD = #{hsUseGrpCd}
                <if test="hsCd.length == 10 ">
                    ,QTY_UT_CD = #{uqn}
                    ,ADIT_TX_QTY_UT_CD = #{aditTxQtyUtCd}
                </if>
            </if>
        </trim>
        WHERE		DEL_YN = 'N'
        AND			HS_CD = #{hsCd}
        AND			HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{hsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')
    </update>

    <select id="selectLwprHsApridChk" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /* selectLwprHsApridChk : 수정하려는 HS코드의 적용기간을 벗어나는 하위 HS코드가 존재하는지 확인*/
        SELECT
            A.HS_CD
             , TO_CHAR(TO_DATE(A.HS_APLY_STRT_DT  , 'YYYYMMDD'), 'DD/MM/YYYY') AS HS_APLY_STRT_DT
        FROM (
                 SELECT
                     HS_CD
                      , HS_APLY_STRT_DT
                      , HS_APLY_END_DT
                      , HS_CLSF_CD
                      , UPR_HS_CD
                      , UPR_HS_APLY_STRT_DT
                 FROM TB_CLRI_HS_CD
                     START WITH UPR_HS_CD = #{uprHsCd}                /* 수정대상 상위HS코드 */
                     AND UPR_HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{uprHsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')   /* 수정대상 상위HS코드시작일자 */
                     AND HS_CD = #{hsCd}                            /* 수정대상 HS코드 */
                     AND HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{hsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')          /* 수정대상 HS적용시작일자 */
                     AND DEL_YN = 'N'
                 CONNECT BY PRIOR HS_CD = UPR_HS_CD
             ) A
        WHERE A.HS_APLY_STRT_DT > TO_CHAR(TO_DATE(#{hsAplyEndDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')              /* 수정하려는 HS적용종료일자 */
    </select>

    <select id="selectLwprHsList" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /* selectLwprHsList : 수정하려는 HS코드의 하위 HS코드 조회*/
        SELECT
            A.HS_CD
             , TO_CHAR(TO_DATE(A.HS_APLY_STRT_DT  , 'YYYYMMDD'), 'DD/MM/YYYY') AS HS_APLY_STRT_DT
             , TO_CHAR(TO_DATE(A.HS_APLY_END_DT  , 'YYYYMMDD'), 'DD/MM/YYYY') AS HS_APLY_END_DT
             , A.HS_CLSF_CD
             , A.UPR_HS_CD
             , A.UPR_HS_APLY_STRT_DT
        FROM (
                 SELECT
                     HS_CD
                      , HS_APLY_STRT_DT
                      , HS_APLY_END_DT
                      , HS_CLSF_CD
                      , UPR_HS_CD
                      , UPR_HS_APLY_STRT_DT
                 FROM TB_CLRI_HS_CD
                     START WITH UPR_HS_CD = #{uprHsCd}                /* 수정대상 상위HS코드 */
                     AND UPR_HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{uprHsAplyStrtDt} , 'DD/MM/YYYY'), 'YYYYMMDD')   /* 수정대상 상위HS코드시작일자 */
                     AND HS_CD = #{hsCd}                            /* 수정대상 HS코드 */
                     AND HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{hsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')         /* 수정대상 HS적용시작일자 */
                     AND DEL_YN = 'N'
                 CONNECT BY PRIOR HS_CD = UPR_HS_CD
             ) A
        WHERE HS_CD != #{hsCd}             /* 수정대상 HS코드 */
          AND HS_APLY_STRT_DT BETWEEN TO_CHAR(TO_DATE(#{hsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD') AND TO_CHAR(TO_DATE(#{hsAplyEndDt}  , 'DD/MM/YYYY'), 'YYYYMMDD') /* 수정대상 HS적용시작일자, 수정대상 HS적용종료일자 */
          <if test='hsChgRsnCd != null and !hsChgRsnCd.equals("B")'>
          AND HS_APLY_END_DT > TO_CHAR(TO_DATE(#{hsAplyEndDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')           /* 수정대상 HS적용종료일자 */
          </if>
    </select>

    <select id="selectClrUprHsCdCnt"  parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /** selectClrUprHsCdCnt : 상위 HS_CD가 존재하는지 체크*/
        SELECT
            HS_CD,
            TO_CHAR(TO_DATE(HS_APLY_STRT_DT  , 'YYYYMMDD'), 'DD/MM/YYYY') AS HS_APLY_STRT_DT,
            (SELECT UPR_HS_CD FROM TB_CLRI_HS_CD WHERE HS_CD = #{hsCd} AND DEL_YN ='N' ORDER BY HS_APLY_STRT_DT DESC LIMIT 1 )UPR_HS_CD
        FROM TB_CLRI_HS_CD
        WHERE DEL_YN = 'N'
          AND HS_CLSF_CD IN ('2','4','6','10')
          AND HS_CD = #{uprHsCd}
          AND LENGTH(HS_CD) != 10
          AND TO_CHAR(SYSTIMESTAMP,'YYYYMMDD') BETWEEN HS_APLY_STRT_DT AND HS_APLY_END_DT
    </select>

    <delete id="deleteClrHsCd"  parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        DELETE FROM TB_CLRI_HS_CD WHERE HS_CD = #{hsCd} AND HS_APLY_STRT_DT  = NVL2(#{hsAplyStrtDt}, TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD'), TO_CHAR(SYSDATE, 'YYYYMMDD'))
    </delete>

    <select id="selectClrPriHsCdTree" parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo" resultType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        /* selectClrPriHscdTree !== HS코드 트리 조회 ==!*/
        SELECT A.*, LEVEL FROM (
                                   SELECT
                                       REGEXP_REPLACE(A.HS_CD,'([[:digit:]]{6})([[:digit:]]{2})([[:digit:]]{4})','\1.\2.\3') AS HS_CD    /** Code SH !== HS코드 ==! */
                                        , A.UPR_HS_CD                  /** Code SH superieur !== 상위HS코드 ==! */
                                        , A.HS_DESC                    /** Description du SH !== HS설명 ==! */
                                        , A.HS_ERR_PVNT_VAL            /** Clé */
                                        , NVL(A.REQ_CFRM_TRGT_YN,'N')  REQ_CFRM_TRGT_YN          /** Soumis à la FAP */
                                        , A.BRND_NM_WRTE_YN            /** Nom de la marque ecrit ON !== 브랜드명기재여부 ==! */
                                        , A.INGR_WRTE_YN               /** Composant ecrit ON !== 성분기재여부 ==! */
                                        , A.MRKT_PRC_CD                /** Code de valeur boursière !== 시장가격코드 ==! */
                                        , A.DPRC_RT                    /** Taux d'amortissement !== 감가상각율 ==! */
                                        , A.HS_USE_GRP_CD
                                        , A.NOTE_CN NOTE_CN
                                        , TO_CHAR(TO_DATE(A.HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_STRT_DT            /** Date de depart de l'application du SH !== HS적용시작일자 ==! */
                                        , TO_CHAR(TO_DATE(A.HS_APLY_END_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_END_DT             /** Date de fin de l'application du SH !== HS적용종료일자 ==! */
                                        , QTY_UT_CD UQN
                                   FROM  TB_CLRI_HS_CD A
                                   WHERE  A.DEL_YN = 'N'                                /** Suppression ON !== 삭제여부 ==! */
                                     AND  TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE(HS_APLY_STRT_DT, 'YYYYMMDD') AND TO_DATE(HS_APLY_END_DT, 'YYYYMMDD')
                                     AND  A.UPR_HS_CD = '*'
                                   UNION ALL
                                   SELECT
                                       REGEXP_REPLACE(A.HS_CD,'([[:digit:]]{6})([[:digit:]]{2})([[:digit:]]{4})','\1.\2.\3') AS HS_CD    /** Code SH !== HS코드 ==! */
                                        , A.UPR_HS_CD                  /** Code SH superieur !== 상위HS코드 ==! */
                                        , A.HS_DESC                    /** Description du SH !== HS설명 ==! */
                                        , A.HS_ERR_PVNT_VAL            /** Clé */
                                        , NVL(A.REQ_CFRM_TRGT_YN,'N') REQ_CFRM_TRGT_YN         /** Soumis à la FAP */
                                        , A.BRND_NM_WRTE_YN            /** Nom de la marque ecrit ON !== 브랜드명기재여부 ==! */
                                        , A.INGR_WRTE_YN               /** Composant ecrit ON !== 성분기재여부 ==! */
                                        , A.MRKT_PRC_CD                /** Code de valeur boursière !== 시장가격코드 ==! */
                                        , A.DPRC_RT                    /** Taux d'amortissement !== 감가상각율 ==! */
                                        , A.HS_USE_GRP_CD
                                        , A.NOTE_CN NOTE_CN
                                        , TO_CHAR(TO_DATE(A.HS_APLY_STRT_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_STRT_DT            /** Date de depart de l'application du SH !== HS적용시작일자 ==! */
                                        , TO_CHAR(TO_DATE(A.HS_APLY_END_DT, 'YYYYMMDD'), 'DD/MM/YYYY') HS_APLY_END_DT             /** Date de fin de l'application du SH !== HS적용종료일자 ==! */
                                        , QTY_UT_CD UQN
                                   FROM   TB_CLRI_HS_CD A
                                   WHERE  DEL_YN = 'N'                                /** Suppression ON !== 삭제여부 ==! */
                                     AND  TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') BETWEEN TO_DATE(HS_APLY_STRT_DT, 'YYYYMMDD') AND TO_DATE(HS_APLY_END_DT, 'YYYYMMDD')
                                       START WITH UPR_HS_CD = #{hsCd}
                                   CONNECT BY PRIOR HS_CD = UPR_HS_CD
                               ) A
            START WITH UPR_HS_CD = '*'
        CONNECT BY PRIOR HS_CD = UPR_HS_CD
        ORDER SIBLINGS BY HS_CD
    </select>

    <insert id="selectInsertHsQtyUtCd"  parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        INSERT INTO TB_CLRI_HS_QTY_UT_CD
        (
            HS_CD,
            HS_APLY_STRT_DT,
            CLUS_SRNO,
            QTY_UT_CD,
            USE_YN,
            DEL_YN,
            FRST_REGST_ID,
            FRST_RGSR_DTTM,
            LAST_CHPR_ID,
            LAST_CHG_DTTM
        )
        SELECT
            HS_CD,
            TO_CHAR(TO_DATE(#{hsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD') HS_APLY_STRT_DT,
            CLUS_SRNO,
            QTY_UT_CD,
            USE_YN,
            DEL_YN,
            #{frstRegstId} FRST_REGST_ID,
            SYSTIMESTAMP FRST_RGSR_DTTM,
            #{lastChprId} LAST_CHPR_ID,
            SYSTIMESTAMP LAST_CHG_DTTM
        FROM TB_CLRI_HS_QTY_UT_CD
        WHERE HS_CD = #{hsCd}
        AND HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{befHsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')
        AND DEL_YN ='N'
    </insert>

    <insert id="selectInsertHsExcpMtrCd"  parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        INSERT INTO TB_CLRI_HS_EXCP_MTR_CD_MGMT
        (
            HS_CD,
            HS_APLY_STRT_DT,
            HS_EXCP_MTR_CD,
            APLY_SCP_CD,
            SLCT_CLUS_SRNO,
            APLY_CD,
            HS_EXCP_MTR_NM,
            APLY_STRT_DT,
            APLY_END_DT,
            USE_YN,
            DEL_YN,
            FRST_REGST_ID,
            FRST_RGSR_DTTM,
            LAST_CHPR_ID,
            LAST_CHG_DTTM
        )
        SELECT
            HS_CD,
            TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') HS_APLY_STRT_DT,
            HS_EXCP_MTR_CD,
            APLY_SCP_CD,
            SLCT_CLUS_SRNO,
            APLY_CD,
            HS_EXCP_MTR_NM,
            TO_CHAR(TO_DATE(#{hsAplyStrtDt}, 'DD/MM/YYYY'), 'YYYYMMDD') APLY_STRT_DT,
            TO_CHAR(TO_DATE(#{hsAplyEndDt}, 'DD/MM/YYYY'), 'YYYYMMDD') APLY_END_DT,
            USE_YN,
            DEL_YN,
            #{frstRegstId} FRST_REGST_ID,
            SYSTIMESTAMP FRST_RGSR_DTTM,
            #{lastChprId} LAST_CHPR_ID,
            SYSTIMESTAMP LAST_CHG_DTTM
        FROM TB_CLRI_HS_EXCP_MTR_CD_MGMT
        WHERE HS_CD = #{hsCd}
          AND HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{befHsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')
          AND DEL_YN ='N'
    </insert>

    <update  id="beforHsExcpMtrCdUpdate"  parameterType="alpass.ipt.clr.trm.hsm.vo.ClrTrmHsmHsCdVo">
        UPDATE TB_CLRI_HS_EXCP_MTR_CD_MGMT
        SET APLY_END_DT = TO_CHAR(TO_DATE(#{hsAplyEndDt}, 'DD/MM/YYYY'), 'YYYYMMDD')
        ,LAST_CHPR_ID = #{lastChprId}
        ,LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE HS_CD = #{hsCd}
        AND HS_APLY_STRT_DT = TO_CHAR(TO_DATE(#{befHsAplyStrtDt}  , 'DD/MM/YYYY'), 'YYYYMMDD')
        AND DEL_YN ='N'
    </update>

</mapper>
