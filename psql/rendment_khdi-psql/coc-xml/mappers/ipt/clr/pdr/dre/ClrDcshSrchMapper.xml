<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="alpass.ipt.clr.pdr.dre.mapper.ClrDcshSrchMapper">

    <resultMap id="ClrDedPdlsResultMap" type="alpass.ipt.clr.pdr.dre.vo.ClrDedPdlsDcshVo">
        <id property="dtlDcshNo" column="dtl_dcsh_no"></id>
        <id property="pdlsNo" column="pdls_no"></id>
        <result property="uprPdlsNo" column="upr_pdls_no"></result>
        <result property="hsCd" column="hs_cd"></result>
        <result property="cmdtClsfSpelCd" column="cmdt_clsf_spel_cd"></result>
        <result property="pdlsNm" column="pdls_nm"></result>
        <result property="dlngPdlsNm" column="dlng_pdls_nm"></result>
        <result property="nwprScarCmdtCd" column="nwpr_scar_cmdt_cd"></result>
        <result property="pckgShmrMarkNo" column="pckg_shmr_mark_no"></result>
        <result property="pckgDesc" column="pckg_desc"></result>
        <result property="orcyCntyCd" column="orcy_cnty_cd"></result>
        <result property="apcCd" column="apc_cd"></result>
        <result property="prvlCd" column="prvl_cd"></result>
        <result property="qtaApreNo" column="qta_apre_no"></result>
        <result property="mgDscnApreNo" column="mg_dscn_apre_no"></result>
        <result property="prcDtrmMeanCd" column="prc_dtrm_mean_cd"></result>
        <result property="brndNm" column="brnd_nm"></result>
        <result property="frstDclrDt" column="frst_dclr_dt"></result>
        <result property="bfDtlDcshNo" column="bf_dtl_dcsh_no"></result>
        <result property="bfDtlDcshDt" column="bf_dtl_dcsh_dt"></result>
        <result property="bfPdlsNo" column="bf_pdls_no"></result>
        <result property="divdFfmnTpCd" column="divd_ffmn_tp_cd"></result>
        <result property="qty" column="qty"></result>
        <result property="qtyUtCd" column="qty_ut_cd"></result>
        <result property="trifBaseVal" column="trif_base_val"></result>
        <result property="pdlsTtwg" column="pdls_ttwg"></result>
        <result property="pdlsNtwg" column="pdls_ntwg"></result>
        <result property="pdlsPckgGcnt" column="pdls_pckg_gcnt"></result>
        <result property="pdlsPckgUtCd" column="pdls_pckg_ut_cd"></result>
        <result property="oilTankNo" column="oil_tank_no"></result>
        <result property="vhclYn" column="vhcl_yn"></result>
        <result property="pdlsPsmgtTrgtYn" column="pdls_psmgt_trgt_yn"></result>
        <result property="pdlsPsmgtFfmnCmplYn" column="pdls_psmgt_ffmn_cmpl_yn"></result>
        <result property="pdlsPsmgtFfmnCmplDt" column="pdls_psmgt_ffmn_cmpl_dt"></result>
        <result property="pdlsPsmgtConcRsnCd" column="pdls_psmgt_conc_rsn_cd"></result>
        <result property="delYn" column="del_yn"></result>
        <result property="frstRegstId" column="frst_regst_id"></result>
        <result property="frstRgsrDttm" column="frst_rgsr_dttm"></result>
        <result property="lastChprId" column="last_chpr_id"></result>
        <result property="lastChgDttm" column="last_chg_dttm"></result>
        <result property="hsErrPvntVal" column="hs_err_pvnt_val"></result>
        <result property="hsErrPvnt" column="hs_err_pvnt"></result>
        <result property="regmRqstCd" column="regm_rqst_cd"></result>
        <result property="regmPn" column="regm_pn"></result>
        <result property="aprsRqstNo" column="aprs_rqst_no"></result>
        <result property="aprsRqstTpNm" column="aprs_rqst_tp_nm"></result>
        <result property="aprsPrcsSttsCd" column="APRS_PRCS_STTS_CD"></result>
        <result property="rqstTpCd" column="rqst_tp_cd"></result>
        <result property="prhbCmdtCd" column="prhb_cmdt_cd"></result>
        <result property="hsExcpMtrCd" column="hs_excp_mtr_cd"></result>
        <result property="hsExcpMtrNm" column="hs_excp_mtr_nm"></result>
        <result property="apcExcpMtrCd" column="apc_excp_mtr_cd"></result>
        <result property="apcExcpMtrNm" column="apc_excp_mtr_nm"></result>
        <result property="apcDtlCd" column="APC_DTL_CD"></result>
        <result property="apcDtlNm" column="APC_DTL_NM"></result>
        <result property="prvlExcpMtrCd" column="prvl_excp_mtr_cd"></result>
        <result property="prvlExcpMtrNm" column="prvl_excp_mtr_nm"></result>
        <result property="aditTxQty" column="adit_tx_qty"/>
        <result property="aditTxQtyUtCd" column="adit_tx_qty_ut_cd"/>
        <result property="pdlsClsfBfhnJdgnPn" column="PDLS_CLSF_BFHN_JDGN_PN"/>
        <result property="apcAtpmStrtDt" column="apc_atpm_strt_dt"/>
        <result property="apcAtpmEndDt" column="apc_atpm_end_dt"/>
        <result property="psmgtFfmnXpirPrid" column="psmgt_ffmn_xpir_prid"/>
        <association property="dedVlutPdlsVo" resultMap="ClrDedVlutPdlsResultMap" columnPrefix="VLUT_"/>
        <collection property="mdlStszList" resultMap="ClrDedMdlStszResultMap" columnPrefix="STSZ_"/>
        <collection property="rwmsList" resultMap="ClrDedRwmsResultMap" columnPrefix="RWMS_"/>


    </resultMap>

    <resultMap id="ClrDedVhclResultMap" type="alpass.ipt.clr.pdr.dre.vo.ClrDedVhclVo">
        <id property="pdlsNo" column="pdls_no"></id>
        <id property="dtlDcshNo" column="dtl_dcsh_no"></id>
        <id property="mdlStszNo" column="mdl_stsz_no"></id>
        <result property="chssNo" column="chss_no"></result>
        <result property="impPtNm" column="imp_pt_nm"></result>
        <result property="vhclMnurCd" column="vhcl_mnur_cd"></result>
        <result property="vhclMnurNm" column="vhcl_mnur_nm"></result>
        <result property="clrNm" column="clr_nm"></result>
        <result property="vhclMdlCd" column="vhcl_mdl_cd"></result>
        <result property="vhclMdlNm" column="vhcl_mdl_nm"></result>
        <result property="drvrNm" column="drvr_nm"></result>
        <result property="trsfNnprYn" column="trsf_nnpr_yn"></result>
        <result property="trsfUnblTpCd" column="trsf_unbl_tp_cd"></result>
        <result property="impCrppNo" column="imp_crpp_no"></result>
        <result property="impCrppDt" column="imp_crpp_dt"></result>
        <result property="impCrppPrid" column="imp_crpp_prid"></result>
        <result property="vhclCsclMgmtNo" column="vhcl_cscl_mgmt_no"></result>
        <result property="drvrPostNo" column="drvr_post_no"></result>
        <result property="drvrAddr" column="drvr_addr"></result>
        <result property="carRgsrNo" column="car_rgsr_no"></result>
        <result property="vhclReleDt" column="vhcl_rele_dt"></result>
        <result property="mkngYy" column="mkng_yy"></result>
        <result property="vhclWghtCn" column="vhcl_wght_cn"></result>
        <result property="loadWghtCn" column="load_wght_cn"></result>
        <result property="otptCn" column="otpt_cn"></result>
        <result property="dpcmtCn" column="dpcmt_cn"></result>
        <result property="flKndNm" column="fl_knd_nm"></result>
        <result property="vhclKndNm" column="vhcl_knd_nm"></result>
        <result property="caboNm" column="cabo_nm"></result>
        <result property="frstOpraDt" column="frst_opra_dt"></result>
        <result property="stcnt" column="stcnt"></result>
        <result property="delYn" column="del_yn"></result>
        <result property="frstRegstId" column="frst_regst_id"></result>
        <result property="frstRgsrDttm" column="frst_rgsr_dttm"></result>
        <result property="lastChprId" column="last_chpr_id"></result>
        <result property="lastChgDttm" column="last_chg_dttm"></result>
        <result property="trsfNnprStrtDt" column="trsf_nnpr_strt_dt"></result>
        <result property="trsfNnprEndDt" column="trsf_nnpr_end_dt"></result>
        <result property="vhclKndCd" column="vhcl_knd_cd"></result>
        <result property="tpdMgmtNo" column="tpd_mgmt_no"></result> <!-- PSC_MODIFY_20240315 -->
    </resultMap>

    <resultMap id="ClrDedMdlStszResultMap" type="alpass.ipt.clr.pdr.dre.vo.ClrDedMdlStszDcshVo">
        <id property="dtlDcshNo" column="dtl_dcsh_no"></id>
        <id property="pdlsNo" column="pdls_no"></id>
        <id property="mdlStszNo" column="mdl_stsz_no"></id>
        <result property="mdlStszNm" column="mdl_stsz_nm"></result>
        <result property="ingrNm" column="ingr_nm"></result>
        <result property="qty" column="qty"></result>
        <result property="qtyUtCd" column="qty_ut_cd"></result>
        <result property="utPrc" column="ut_prc"></result>
        <result property="invcAmt" column="invc_amt"></result>
        <result property="delYn" column="del_yn"></result>
        <result property="frstRegstId" column="frst_regst_id"></result>
        <result property="frstRgsrDttm" column="frst_rgsr_dttm"></result>
        <result property="lastChprId" column="last_chpr_id"></result>
        <result property="lastChgDttm" column="last_chg_dttm"></result>
        <result property="bfPdlsNo" column="bf_pdls_no"></result>
        <result property="bfMdlStszNo" column="bf_mdl_stsz_no"></result>
        <association property="vhclVo" resultMap="ClrDedVhclResultMap" columnPrefix="VHCL_"/>
    </resultMap>

    <resultMap id="ClrDedRwmsResultMap" type="alpass.ipt.clr.pdr.dre.vo.ClrDedRwmsVo">
        <id property="dtlDcshNo" column="dtl_dcsh_no"></id>
        <id property="pdlsNo" column="pdls_no"></id>
        <id property="rwmsSrno" column="rwms_srno"></id>
        <result property="frstDclrDt" column="frst_dclr_dt"></result>
        <result property="bfDtlDcshNo" column="bf_dtl_dcsh_no"></result>
        <result property="bfPdlsNo" column="bf_pdls_no"></result>
        <result property="bfHsCd" column="bf_hs_cd"></result>
        <result property="bfCmdtClsfSpelCd" column="bf_cmdt_clsf_spel_cd"></result>
        <result property="divdFfmnTpCd" column="divd_ffmn_tp_cd"></result>
        <result property="qty" column="qty"></result>
        <result property="qtyUtCd" column="qty_ut_cd"></result>
        <result property="ntwg" column="ntwg"></result>
        <result property="delYn" column="del_yn"></result>
        <result property="frstRegstId" column="frst_regst_id"></result>
        <result property="frstRgsrDttm" column="frst_rgsr_dttm"></result>
        <result property="lastChprId" column="last_chpr_id"></result>
        <result property="lastChgDttm" column="last_chg_dttm"></result>
    </resultMap>

    <resultMap id="ClrDedVlutPdlsResultMap" type="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutPdlsVo">
        <id property="dtlDcshNo" column="dtl_dcsh_no"></id>
        <id property="pdlsNo" column="pdls_no"></id>
        <result property="pdlsInvcAmt" column="pdls_invc_amt"></result>
        <result property="pdlsInvcFxrt" column="pdls_invc_fxrt"></result>
        <result property="pdlsInvcNcyAmt" column="pdls_invc_ncy_amt"></result>
        <result property="pdlsInvcUsdAmt" column="pdls_invc_usd_amt"></result>
        <result property="pdlsCachAmt" column="pdls_cach_amt"></result>
        <result property="pdlsCachCurrCd" column="pdls_cach_curr_cd"></result>
        <result property="pdlsCachFxrt" column="pdls_cach_fxrt"></result>
        <result property="pdlsCachNcyAmt" column="pdls_cach_ncy_amt"></result>
        <result property="pdlsInfeeAmt" column="pdls_infee_amt"></result>
        <result property="pdlsInfeeCurrCd" column="pdls_infee_curr_cd"></result>
        <result property="pdlsInfeeFxrt" column="pdls_infee_fxrt"></result>
        <result property="pdlsInfeeNcyAmt" column="pdls_infee_ncy_amt"></result>
        <result property="pdlsOtcstAmt" column="pdls_otcst_amt"></result>
        <result property="pdlsOtcstCurrCd" column="pdls_otcst_curr_cd"></result>
        <result property="pdlsOtcstFxrt" column="pdls_otcst_fxrt"></result>
        <result property="pdlsOtcstNcyAmt" column="pdls_otcst_ncy_amt"></result>
        <result property="pdlsDdctAmt" column="pdls_ddct_amt"></result>
        <result property="pdlsDdctCurrCd" column="pdls_ddct_curr_cd"></result>
        <result property="pdlsDdctFxrt" column="pdls_ddct_fxrt"></result>
        <result property="pdlsDdctNcyAmt" column="pdls_ddct_ncy_amt"></result>
        <result property="pdlsTxbsNcyAmt" column="pdls_txbs_ncy_amt"></result>
        <result property="pdlsTxbsUsdAmt" column="pdls_txbs_usd_amt"></result>
        <result property="pdlsVlutNcyAmt" column="pdls_vlut_ncy_amt"></result>
        <result property="pdlsVlutUsdAmt" column="pdls_vlut_usd_amt"></result>
        <result property="pdlsMprcBaseVal" column="pdls_mprc_base_val"></result>
        <result property="pdlsMprcUtAmt" column="pdls_mprc_ut_amt"></result>
        <result property="pdlsMprcNcyAmt" column="pdls_mprc_ncy_amt"></result>
        <result property="delYn" column="del_yn"></result>
        <result property="frstRegstId" column="frst_regst_id"></result>
        <result property="frstRgsrDttm" column="frst_rgsr_dttm"></result>
        <result property="lastChprId" column="last_chpr_id"></result>
        <result property="lastChgDttm" column="last_chg_dttm"></result>
        <result property="pdlsInvcCurrCd" column="pdls_invc_curr_cd"></result>
    </resultMap>

    <!-- Liste des déclaration DED !== DED 공통 조회 ==!  -->
    <select id="selectDedComnInfo" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedComnDcshVo">
        /* ClrDcshSrchMapper.selectDedComnInfo */
        SELECT
        A.dtl_dcsh_no
        , NVL((SELECT BRKD.prcs_dtrm_dttm FROM tb_clri_ded_prcs_brkd BRKD WHERE BRKD.dtl_dcsh_no = A.dtl_dcsh_no AND BRKD.prcs_stts_cd = 'A04'), A.frst_rgsr_dttm) AS RCPN_DTTM
        , TO_CHAR(TO_DATE(A.dclr_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS dclr_dt
        , A.reff_no
        , A.mdfy_dgcnt
        , TO_CHAR(TO_DATE(A.rqst_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS rqst_dt
        , A.dclr_pt_cd
        , A.epc_cd
        , A.cscl_pln_cd
        , A.dcsh_fm_cd
        , A.pdls_gcnt
        , A.pckg_tgcnt
        , A.cntr_cag_yn
        , A.al_ttwg
        , A.al_ntwg
        , A.exppn_idfy_no_tp_cd
        , A.imppn_idfy_no_tp_cd
        , A.csm_cnty_cd
        , A.trde_dlng_cnty_cd
        , A.exp_cnty_cd
        , A.dstn_cnty_cd
        , A.dstn_regn_cd
        , A.trnp_meth_knd_cd
        , A.trnp_meth_idfy_no
        , A.trnp_meth_nat_cd
        , A.ship_nm
        , A.bl_no
        , TO_CHAR(TO_DATE(A.arvl_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS arvl_dt
        , A.divd_cscl_tp_cd
        , A.ldnp_cd
        , A.cntr_gcnt
        , A.dispr_cd
        , TO_CHAR(TO_DATE(A.ldun_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS ldun_dt
        , A.psmgt_ffmn_xpir_prid
        , A.dcrd_yn
        , A.dlvr_cond_cd
        , A.dlvr_plc_cd
        , A.invc_no
        , TO_CHAR(TO_DATE(A.invc_pbls_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS invc_pbls_dt
        , A.pymn_mean_cd
        , A.pymn_ac_no
        , A.dlng_cond1_cd
        , A.dlng_cond2_cd
        , (CASE WHEN A.epc_cd = '40XX' THEN 'Y' ELSE 'N' END) AS prc_dcsh_wrte_yn
        , A.owhs_prc_ev_yn
        , A.dcer_wrte_cn
        , A.mdfy_rsn_cd
        , A.mdfy_rsn_cn
        , A.prcs_stts_cd
        , A.insc_emp_id
        , A.selc_rslt_cd
        , A.insc_plc_tp_cd
        , A.psmgt_trgt_yn
        , A.psmgt_ffmn_cmpl_yn
        , TO_CHAR(TO_DATE(A.psmgt_ffmn_cmpl_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS psmgt_ffmn_cmpl_dt
        , A.ador_hnot_prcs_yn
        , A.ador_hnot_opin_cn
        , A.hist_srno
        , TO_CHAR(TO_DATE(A.exp_ffmn_cmpl_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS exp_ffmn_cmpl_dt
        , TO_CHAR(TO_DATE(A.exp_ffmn_xpir_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS exp_ffmn_xpir_dt
        , TO_CHAR(TO_DATE(A.asmt_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS asmt_dt
        , A.acpt_yn
        , TO_CHAR(TO_DATE(A.acpt_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS acpt_dt
        , A.rlse_yn
        , TO_CHAR(TO_DATE(A.rlse_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS rlse_dt
        , A.atr_dclr_rcpn_yn
        , A.cncl_dclr_rcpn_yn
        , A.cscl_pstp_yn
        , A.dput_yn
        , A.prvi_dclr_apre_yn
        , A.new_sys_yn
        , A.del_yn
        , A.frst_regst_id
        , TO_CHAR(A.frst_rgsr_dttm, 'DD/MM/YYYY') AS FRST_RGSR_DTTM
        , A.last_chpr_id
        , TO_CHAR(A.LAST_CHG_DTTM, 'DD/MM/YYYY') AS LAST_CHG_DTTM
        , A.wkng_pt_cd
        , A.exppn_cmrc_regs_no
        , A.imppn_cmrc_regs_no
        , A.txpr_cmrc_regs_no
        , A.imppn_idfy_no
        , A.exppn_idfy_no
        , A.txpr_idfy_no
        , A.cag_mgmt_no
        , A.audt_emp_id
        , A.bf_bnbn_cmdt_wrhs_cd
        , (SELECT X.ibobz_nm FROM tb_cari_ibobz X WHERE X.DEL_YN = 'N' AND X.ibobz_cd = A.BF_BNBN_CMDT_WRHS_CD AND
        ROWNUM = 1) AS BF_BNBN_WRHS_NM
        , (SELECT X.ibobz_nm FROM tb_cari_ibobz X WHERE X.DEL_YN = 'N' AND X.ibobz_cd = A.BNBN_CMDT_WRHS_CD AND ROWNUM =
        1 ) AS BNBN_WRHS_NM
        , A.bnbn_cmdt_wrhs_cd
        , A.cmdt_stge_loct_cd
        , A.dcer_cd
        , (SELECT NIF FROM TB_COM_CO_DCLR_CD WHERE CO_DCLR_CD = A.DCER_CD AND CO_DCLR_TP_CD = 'H' AND ROWNUM = 1) AS
        DCER_NIF
        , A.dclr_cstm_cd
        , A.dept_cd
        , A.AUDT_DEPT_CD
        , (SELECT A.DEPT_CD||' | '||ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.DEPT_CD AND ROWNUM=1) AS DEPT_NM
        , (SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.AUDT_DEPT_CD AND ROWNUM=1) AS AUDT_DEPT_NM
        , A.pymn_bnk_brnh_cd
        , A.pymn_bnk_cd
        , A.rlbr_cstm_cd
        , A.csor_aprv_rsof_yn
        , A.dphd_aprv_rsof_yn
        , A.dept_hnot_prcs_yn
        , A.dept_hnot_opin_cn
        , TO_CHAR(TO_DATE(A.prmsnt_dt, 'YYYYMMDD'), 'DD/MM/YYYY') AS prmsnt_dt
        , NVL(a.sys_use_ss, 1) as sys_use_ss
        , A.exp_cmdt_brng_rqno
        , A.exp_cmdt_loct_nm
        , A.bf_dtl_dcsh_no
        , TO_CHAR(TO_DATE(A.frst_dclr_dt, 'YYYYMMDD'), 'DD/MM/YYYY') AS frst_dclr_dt
        , A.bfhn_no
        , A.pad_bfhn_no
        , A.prvi_bfhn_no
        , A.bfcy_idfy_no            /** NIF du bénéficiaire */
        , A.bfcy_cmrc_regs_no       /** Registre de commerce du bénéficiaire */
        , A.PRMSNT_STTS_CD
        , TO_CHAR(TO_DATE(A.bl_dt, 'YYYYMMDD'), 'DD/MM/YYYY') AS bl_dt
        , A.DLNG_PYMN_MEAN_CD
        , FN_GET_CD_VDVAL_NM('CLR_0137', A.DLNG_PYMN_MEAN_CD, #{langCd}) AS DLNG_PYMN_MEAN_NM
        , ( SELECT 'Y' FROM TB_COLI_NTFC WHERE REFF_NO = A.DTL_DCSH_NO AND DEL_YN = 'N' AND CNCL_YN = 'N' LIMIT 1) AS
        NTFC_EXST_YN
        , ( SELECT REFF_NO_PT_CD FROM TB_COLI_NTFC WHERE REFF_NO = A.DTL_DCSH_NO AND DEL_YN = 'N' AND CNCL_YN = 'N'
        LIMIT 1) AS REFF_NO_PT_CD
        , ( SELECT NTFC_NO FROM TB_COLI_NTFC WHERE REFF_NO = A.DTL_DCSH_NO AND DEL_YN = 'N' AND CNCL_YN = 'N' LIMIT 1)
        AS NTFC_NO
        , ( SELECT RCVE_NO FROM TB_COLI_NTFC B, TB_COLI_RCVE C WHERE B.REFF_NO = A.DTL_DCSH_NO AND C.NTFC_NO = B.NTFC_NO
        AND C.DEL_YN = 'N' AND B.CNCL_YN = 'N' LIMIT 1) AS RCVE_NO
        , ( SELECT REGST_ID FROM TB_COLI_NTFC B, TB_COLI_RCVE C WHERE B.REFF_NO = A.DTL_DCSH_NO AND C.NTFC_NO =
        B.NTFC_NO AND C.DEL_YN = 'N' AND B.CNCL_YN = 'N' LIMIT 1) AS REGST_ID
        , (CASE WHEN EXISTS(
        SELECT B.FINE_LVY_RQST_NO
        FROM TB_COLI_FINE_RQST B
        WHERE B.REFF_NO_PT_CD = '002'
        AND B.REFF_NO = A.DTL_DCSH_NO
        AND B.DEL_YN = 'N'
        MINUS
        SELECT C.FINE_LVY_RQST_NO
        FROM TB_COLI_FINE C
        WHERE C.REFF_NO_PT_CD = '002'
        AND C.REFF_NO = A.DTL_DCSH_NO
        AND C.DEL_YN = 'N'
        )
        THEN 'Y'
        ELSE 'N'
        END
        ) AS FINE_LVY_PRGS_YN
        , (
        SELECT CASE WHEN COUNT(*) = 0 THEN 'L_NTFC_WTOT'
        ELSE
        CASE WHEN SUM(DECODE(B.RCVE_YN, 'N', 1, 0)) > 0 AND SUM(DECODE(B.DLPY_YN, 'Y', 1, 0)) > 0 THEN
        'L_RCVE_WTNG_DLPY_EXST'
        WHEN SUM(DECODE(B.RCVE_YN, 'N', 1, 0)) > 0 AND SUM(DECODE(B.DLPY_YN, 'Y', 1, 0)) = 0 THEN 'L_RCVE_WTNG'
        WHEN COUNT(*) = SUM(DECODE(B.RCVE_YN, 'Y', 1, 0)) THEN 'L_RCVE_CMPL'
        END
        END
        FROM TB_COLI_NTFC B
        WHERE B.REFF_NO = A.DTL_DCSH_NO
        AND B.CNCL_YN = 'N'
        AND B.DEL_YN = 'N'
        ) AS NTFC_STTS_LBL_ID
        , (
        CASE WHEN CSCL_PLN_CD = 'PAD' AND CAG_MGMT_NO IS NULL THEN 'L_TRNP_INFO_RCPN_WTNG'
        WHEN CSCL_PLN_CD = 'PAD' AND CAG_MGMT_NO IS NOT NULL THEN 'L_TRNP_INFO_RCPN_CMPL'
        WHEN CSCL_PLN_CD = 'BMD' AND DCRD_YN = 'N' AND CMDT_STGE_LOCT_CD IS NULL THEN 'L_LDUN_CMPL_WTNG'
        WHEN CSCL_PLN_CD = 'BMD' AND DCRD_YN = 'N' AND CMDT_STGE_LOCT_CD IS NOT NULL THEN 'L_LDUN_CMPL'
        END
        ) AS CSCL_PLN_STTS_ID
        , (SELECT B.NIF
        FROM TB_COM_CO_DCLR_CD B
        WHERE B.CO_DCLR_CD = A.DCER_CD
        AND B.CO_DCLR_TP_CD = 'H'
        AND B.DEL_YN = 'N'
        AND ROWNUM = 1
        ) AS DCER_IDFY_NO,
        NVL((SELECT SUM(TAMT) FROM TB_COLI_NTFC WHERE REFF_NO = A.DTL_DCSH_NO AND DEL_YN ='N' AND NTFC_PT_CD IN ('G','C') AND RCVE_YN ='Y' ),0) PAY_TAX_TAMT
        , (SELECT CAG_CHRC_CD FROM ALPASSINT.tb_cari_cag_dcsh_bl WHERE CAG_MGMT_NO = A.CAG_MGMT_NO LIMIT 1) AS CAG_CHRC_CD
        , (SELECT NEW_SYS_YN FROM (SELECT LEVEL LVL, NVL(NEW_SYS_YN,'Y')  NEW_SYS_YN FROM TB_CLRI_DED_COMN T1  START WITH DTL_DCSH_NO = A.BF_DTL_DCSH_NO CONNECT BY PRIOR   T1.BF_DTL_DCSH_NO = T1.DTL_DCSH_NO) ORDER BY LVL DESC LIMIT 1) BF_NEW_SYS_YN
        FROM TB_CLRI_DED_COMN A
        WHERE del_yn = 'N'
        AND A.dtl_dcsh_no = #{dtlDcshNo}
        <choose>
            <when test='userRoleTp != null and userRoleTp =="CHPN"'>
                <if test="userId != null and userId != ''">
                    AND A.AUDT_EMP_ID = #{userId}
                </if>
            </when>
            <otherwise>
                <choose>
                    <when test='userRoleTp != null and userRoleTp =="SRVC"'>
                        AND A.DCLR_CSTM_CD = #{userCstmCd}
                        AND A.DEPT_CD = #{userDeptCd}
                    </when>
                    <when test='userRoleTp != null and userRoleTp =="CSTM"'>
                        AND A.DCLR_CSTM_CD = #{userCstmCd}
                    </when>
                </choose>
            </otherwise>
        </choose>
    </select>

    <!-- Liste des déclaration DED !== DED 공통 조회 ==!   -->
    <select id="selectDedComnInfo2" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedComnDcshVo">
        /* selectDedComnInfo2 */
        SELECT
        A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        , TO_CHAR(TO_DATE(A.dclr_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS dclr_dt /** Date de déclaration !== 신고일자 ==! */
        , A.reff_no /** N° De Référence !== 참조번호 ==! */
        , A.mdfy_dgcnt /** Fréquence de rectification !== 정정차수 ==! */
        , TO_CHAR(TO_DATE(A.rqst_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS rqst_dt /** Date De Demande !== 신청일자 ==! */
        , A.dclr_pt_cd /** Code De Type De Déclaration !== 신고유형코드 ==! */
        , A.epc_cd /** Code EPC !== EPC코드 ==! */
        , A.cscl_pln_cd /** Code De Plan De Dédouanement !== 통관계획코드 ==! */
        , A.dcsh_fm_cd /** Code De Formulaire De La Déclaration !== 신고서양식코드 ==! */
        , A.pdls_gcnt /** Nombre D'Articles !== 품목개수 ==! */
        , A.pckg_tgcnt /** Nombre Total De Colis !== 포장총개수 ==! */
        , A.cntr_cag_yn /** Cargaison Conteneurisée On !== 컨테이너화물여부 ==! */
        , A.al_ttwg /** Poids Brut Total !== 전체총중량 ==! */
        , A.al_ntwg /** Poids Net Total !== 전체순중량 ==! */
        , A.exppn_idfy_no_tp_cd /** Code De Type De N° D'Identification De L'Exportateur !== 수출자식별번호구분코드 ==! */
        , A.imppn_idfy_no_tp_cd /** Code De Type Du N° D'Identification De L'Importateur !== 수입자식별번호구분코드 ==! */
        , A.csm_cnty_cd /** Code De Pays D'Expédition !== 탁송국가코드 ==! */
        , A.trde_dlng_cnty_cd /** Code De Pays De Transaction !== 무역거래국가코드 ==! */
        , A.exp_cnty_cd /** Code De Pays Exportateur !== 수출국가코드 ==! */
        , A.dstn_cnty_cd /** Code De Pays Destinataire !== 목적지국가코드 ==! */
        , A.dstn_regn_cd /** Code De Région Destinataire !== 목적지지역코드 ==! */
        , A.trnp_meth_knd_cd /** Code De Type Du Moyen De Transport !== 운송수단종류코드 ==! */
        , A.trnp_meth_idfy_no /** N° D'Identification Du Moyen De Transport !== 운송수단식별번호 ==! */
        , A.trnp_meth_nat_cd /** Code de nationalité du moyen de transport !== 운송수단국적코드 ==! */
        , A.ship_nm /** Nom Du Navire !== 선박명 ==! */
        , A.bl_no /** N° De Bl !== BL번호 ==! */
        , TO_CHAR(TO_DATE(A.arvl_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS arvl_dt /** Date D'Arrivée !== 도착일자 ==! */
        , A.divd_cscl_tp_cd /** Code De Type De Dédouanement Partiel !== 분할통관구분코드 ==! */
        , A.ldnp_cd /** Code De Lieu De Chargement !== 선적지코드 ==! */
        , A.cntr_gcnt /** Nombre De Conteneurs !== 컨테이너개수 ==! */
        , A.dispr_cd /** Code De Lieu De Déchargement !== 하역지코드 ==! */
        , TO_CHAR(TO_DATE(A.ldun_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS ldun_dt /** Date De Déchargement !== 하역일자 ==! */
        , A.psmgt_ffmn_xpir_prid /** Période d'échéance de l'apurement de la gestion et suivi !== 사후관리이행만료기간 ==! */
        , A.dcrd_yn /** Enlèvement En Véhicule On !== 차상반출여부 ==! */
        , A.dlvr_cond_cd /** Code De La Condition De Livraison !== 인도조건코드 ==! */
        , A.dlvr_plc_cd /** Code Du Lieu De Livraison !== 인도장소코드 ==! */
        , A.invc_no /** N° De Facture !== 송장번호 ==! */
        , TO_CHAR(TO_DATE(A.invc_pbls_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS invc_pbls_dt /** Date D'Émission De La Facture
        !== 송장발행일자 ==! */
        , A.pymn_mean_cd /** Code De Mode De Paiement !== 지불방법코드 ==! */
        , A.pymn_ac_no /** N° De Compte De Paiement !== 지불계좌번호 ==! */
        , A.dlng_cond1_cd /** Code De Condition De Transaction 1 !== 거래조건1코드 ==! */
        , A.dlng_cond2_cd /** Code De Condition De Transaction 2 !== 거래조건2코드 ==! */
        , A.prc_dcsh_wrte_yn /** Déclaration De La Valeur Saisie On !== 가격신고서기재여부 ==! */
        , A.owhs_prc_ev_yn /** Auto-Liquidation On !== 자가가격평가여부 ==! */
        , A.dcer_wrte_cn /** Texte Libre Réservé Au Déclarant !== 신고인기재내용 ==! */
        , A.mdfy_rsn_cd /** Code De Motif De La Modification !== 정정사유코드 ==! */
        , A.mdfy_rsn_cn /** Motif de rectification !== 정정사유내용 ==! */
        , A.prcs_stts_cd /** Code De Statut De Traitement !== 처리상태코드 ==! */
        , A.insc_emp_id /** ID de l'vérificateur !== 검사직원ID ==! */
        , A.selc_rslt_cd /** Code De Résultat De Ciblage !== 선별결과코드 ==! */
        , A.insc_plc_tp_cd /** Code De Type De Lieu De Visite !== 검사장소구분코드 ==! */
        , A.psmgt_trgt_yn /** Cible de gestion et suivi ON !== 사후관리대상여부 ==! */
        , A.psmgt_ffmn_cmpl_yn /** Gestion et suivi apurée ON !== 사후관리이행완료여부 ==! */
        , TO_CHAR(TO_DATE(A.psmgt_ffmn_cmpl_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS psmgt_ffmn_cmpl_dt /** Date d'apurement de
        gestion et suivi !== 사후관리이행완료일자 ==! */
        , A.ador_hnot_prcs_yn /** Traitement de la cotation d'inspecteurs ON !== 심사자배부처리여부 ==! */
        , A.ador_hnot_opin_cn /** Contenu de l'opinion pour la cotation d'inspecteurs !== 심사자배부의견내용 ==! */
        , A.hist_srno /** N° de sequence de l'historique !== 이력일련번호 ==! */
        , TO_CHAR(TO_DATE(A.exp_ffmn_cmpl_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS exp_ffmn_cmpl_dt /** Date D'Accomplissement
        De L'Apurement D'Exportation !== 수출이행완료일자 ==! */
        , TO_CHAR(TO_DATE(A.exp_ffmn_xpir_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS exp_ffmn_xpir_dt /** Date D'Échéance De
        L'Apurement D'Exportation !== 수출이행만료일자 ==! */
        , TO_CHAR(TO_DATE(A.asmt_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS asmt_dt /** Date De Liquidation !== 가격평가심사일자 ==! */
        , A.acpt_yn /** Validation ON !== 수리여부 ==! */
        , TO_CHAR(TO_DATE(A.acpt_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS acpt_dt /** Date de la validation !== 수리일자 ==! */
        , A.rlse_yn /** Enlevé On !== 반출여부 ==! */
        , TO_CHAR(TO_DATE(A.rlse_dt , 'YYYYMMDD'),'DD/MM/YYYY') AS rlse_dt /** Date D'Enlèvement !== 반출일자 ==! */
        , A.atr_dclr_rcpn_yn /** Déclaration Modifiée Reçue On !== 수정신고수신여부 ==! */
        , A.cncl_dclr_rcpn_yn /** Déclaration De L'Annulation Reçue On !== 취소신고수신여부 ==! */
        , A.cscl_pstp_yn /** Dédouanement Suspendu On !== 통관보류여부 ==! */
        , A.dput_yn /** Contentieux On !== 쟁송여부 ==! */
        , A.prvi_dclr_apre_yn /** Déclaration Provisoire Autorisée On !== 잠정신고승인여부 ==! */
        , A.new_sys_yn /** Nouveau Système On !== 신규시스템여부 ==! */
        , A.del_yn /** Suppression On !== 삭제여부 ==! */
        , A.frst_regst_id /** Id Du Premier Enregistrant !== 최초등록자ID ==! */
        , TO_CHAR(A.frst_rgsr_dttm, 'DD/MM/YYYY') AS FRST_RGSR_DTTM /** Date Et Heure De Premier Enregistrement !==
        최초등록일시 ==! */
        , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
        , TO_CHAR(A.LAST_CHG_DTTM, 'DD/MM/YYYY') AS LAST_CHG_DTTM /** Date Et Heure De Modification Finale !== 최종변경일시
        ==! */
        , A.wkng_pt_cd /** Type D'Opération !== 작업유형코드 ==! */
        , A.exppn_cmrc_regs_no /** Numéro de registre de commerce de l’exportateur !== 수출자상업등기번호 ==! */
        , A.imppn_cmrc_regs_no /** Numéro de registre de commerce de l’importateur !==수입자상업등기번호 ==! */
        , A.txpr_cmrc_regs_no /** Numéro de registre de commerce du redevable !==납세자상업등기번호 ==! */
        , A.imppn_idfy_no /** N° D'Identification De L'Importateur !== ==! */
        , A.exppn_idfy_no /** N° D'Identification De L'Exportateur !== ==! */
        , A.txpr_idfy_no /** NIF !== ==! */
        , A.cag_mgmt_no /** N° Demande De La Création De Crn !== ==! */
        , A.audt_emp_id /** ID de l'insepcteur !== 심사직원ID ==! */
        , A.bf_bnbn_cmdt_wrhs_cd /** Code De L'Entrepôt Précédent De La Marchandise Sous Douane !== 이전보세물품창고코드 ==! */
        , (SELECT X.ibobz_nm FROM tb_cari_ibobz X WHERE X.DEL_YN = 'N' AND X.ibobz_cd = A.BF_BNBN_CMDT_WRHS_CD AND
        ROWNUM = 1) AS BF_BNBN_WRHS_NM
        , (SELECT X.ibobz_nm FROM tb_cari_ibobz X WHERE X.DEL_YN = 'N' AND X.ibobz_cd = A.BNBN_CMDT_WRHS_CD AND ROWNUM =
        1 ) AS BNBN_WRHS_NM
        , A.bnbn_cmdt_wrhs_cd /** Code D'Entrepôt De La Marchandise Sous Douane !== 보세물품창고코드 ==! */
        , A.cmdt_stge_loct_cd /** Code De Localisation De Stockage !== 물품장치위치코드 ==! */
        , A.dcer_cd /** Code Du Déclarant !== 신고인코드 ==! */
        , (SELECT NIF FROM TB_COM_CO_DCLR_CD WHERE CO_DCLR_CD = A.DCER_CD AND CO_DCLR_TP_CD = 'H') AS DCER_NIF
        , A.dclr_cstm_cd /** Code De Bureau De Déclaration !== 신고세관코드 ==! */
        , A.dept_cd /** Code de service !== 부서코드 ==! */
        , A.AUDT_DEPT_CD
        , (SELECT A.DEPT_CD||' | '||ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.DEPT_CD AND ROWNUM=1) AS DEPT_NM
        , (SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.AUDT_DEPT_CD AND ROWNUM=1) AS AUDT_DEPT_NM
        , A.pymn_bnk_brnh_cd /** Code D'Agnce De Banque De Paiement !== 지불은행지점코드 ==! */
        , A.pymn_bnk_cd /** Transaction Banque Domiciliatrice Code Banque !== 지불은행코드 ==! */
        , A.rlbr_cstm_cd /** Code Du Bureau D'Entrée Et De Sortie !== 반출입세관코드 ==! */
        , A.csor_aprv_rsof_yn /** no name !== 세관장결재상신여부 ==! */
        , A.dphd_aprv_rsof_yn /** no name !== 부서장결재상신여부 ==! */
        , A.dept_hnot_prcs_yn /** Cotation Aux Services Traitée O/N !== 부서배부처리여부 ==! */
        , A.dept_hnot_opin_cn /** Annotation Sur La Cotation Au Service !== 부서배부의견내용 ==! */
        , TO_CHAR(TO_DATE(A.prmsnt_dt, 'YYYYMMDD'), 'DD/MM/YYYY') AS prmsnt_dt
        , NVL(A.sys_use_ss, 1) as sys_use_ss
        , A.exp_cmdt_brng_rqno         /** N° demande de l'introduction des marchandises à exporter !== 수출물품반입신청번호 ==! */
        , A.exp_cmdt_loct_nm           /** Exporter le nom de l'emplacement du produit !== 수출물품위치명 ==! */
        , A.bf_dtl_dcsh_no             /** N° de la déclaration en détail précédent !== 이전상세신고서번호 ==! */
        , A.bfhn_no                    /** N° de autorisation pour PAD et provisoire !== 사전허가번호 ==! */
        , A.pad_bfhn_no
        , A.prvi_bfhn_no
        , A.bfcy_idfy_no                /** NIF du bénéficiaire */
        , A.bfcy_cmrc_regs_no           /** Registre de commerce du bénéficiaire */
        , A.PRMSNT_STTS_CD
        , TO_CHAR(TO_DATE(A.bl_dt, 'YYYYMMDD'), 'DD/MM/YYYY') AS bl_dt
        , A.DLNG_PYMN_MEAN_CD
        , FN_GET_CD_VDVAL_NM('CLR_0137', A.DLNG_PYMN_MEAN_CD, #{langCd}) AS DLNG_PYMN_MEAN_NM
        , ( SELECT 'Y' FROM TB_COLI_NTFC WHERE REFF_NO = A.DTL_DCSH_NO AND DEL_YN = 'N' AND CNCL_YN = 'N' LIMIT 1) AS
        NTFC_EXST_YN
        , (CASE WHEN EXISTS(
        SELECT B.FINE_LVY_RQST_NO
        FROM TB_COLI_FINE_RQST B
        WHERE B.REFF_NO_PT_CD = '002'
        AND B.REFF_NO = A.DTL_DCSH_NO
        AND B.DEL_YN = 'N'
        MINUS
        SELECT C.FINE_LVY_RQST_NO
        FROM TB_COLI_FINE C
        WHERE C.REFF_NO_PT_CD = '002'
        AND C.REFF_NO = A.DTL_DCSH_NO
        AND C.DEL_YN = 'N'
        )
        THEN 'Y'
        ELSE 'N'
        END
        ) AS FINE_LVY_PRGS_YN
        , (
        SELECT CASE WHEN COUNT(*) = 0 THEN 'L_NTFC_WTOT' /* 고지서 없음. */
        ELSE
        CASE WHEN SUM(DECODE(B.RCVE_YN, 'N', 1, 0)) > 0 AND SUM(DECODE(B.DLPY_YN, 'Y', 1, 0)) > 0 THEN
        'L_RCVE_WTNG_DLPY_EXST' /* 수납대기중(체납건존재) */
        WHEN SUM(DECODE(B.RCVE_YN, 'N', 1, 0)) > 0 AND SUM(DECODE(B.DLPY_YN, 'Y', 1, 0)) = 0 THEN 'L_RCVE_WTNG' /* 수납대기중
        */
        WHEN COUNT(*) = SUM(DECODE(B.RCVE_YN, 'Y', 1, 0)) THEN 'L_RCVE_CMPL' /* 수납완료 */
        END
        END
        FROM TB_COLI_NTFC B
        WHERE B.REFF_NO = A.DTL_DCSH_NO
        AND B.CNCL_YN = 'N'
        AND B.DEL_YN = 'N'
        ) AS NTFC_STTS_LBL_ID
        , (
        CASE WHEN CSCL_PLN_CD = 'PAD' AND CAG_MGMT_NO IS NULL THEN 'L_TRNP_INFO_RCPN_WTNG' /* 운송정보수신대기중 */
        WHEN CSCL_PLN_CD = 'PAD' AND CAG_MGMT_NO IS NOT NULL THEN 'L_TRNP_INFO_RCPN_CMPL' /* 운송정보수신완료 */
        WHEN CSCL_PLN_CD = 'BMD' AND DCRD_YN = 'N' AND CMDT_STGE_LOCT_CD IS NULL THEN 'L_LDUN_CMPL_WTNG' /* 하역완료대기중 */
        WHEN CSCL_PLN_CD = 'BMD' AND DCRD_YN = 'N' AND CMDT_STGE_LOCT_CD IS NOT NULL THEN 'L_LDUN_CMPL' /* 하역완료 */
        END
        ) AS CSCL_PLN_STTS_ID
        , (SELECT B.NIF
        FROM TB_COM_CO_DCLR_CD B
        WHERE B.CO_DCLR_CD = A.DCER_CD
        AND B.CO_DCLR_TP_CD = 'H'
        AND B.DEL_YN = 'N'
        AND ROWNUM = 1
        ) AS DCER_IDFY_NO
        FROM TB_CLRI_DED_COMN A
        WHERE del_yn = 'N'
        AND A.dtl_dcsh_no = #{dtlDcshNo}
        <choose>
            <when test='userRoleTp != null and userRoleTp =="CHPN"'>
                <if test="userId != null and userId != ''">
                    AND A.AUDT_EMP_ID = #{userId}
                </if>
            </when>
            <otherwise>
                <choose>
                    <when test='userRoleTp != null and userRoleTp =="SRVC"'>
                        AND A.DCLR_CSTM_CD = #{userCstmCd}
                        AND A.DEPT_CD = #{userDeptCd}
                    </when>
                    <when test='userRoleTp != null and userRoleTp =="CSTM"'>
                        AND A.DCLR_CSTM_CD = #{userCstmCd}
                    </when>
                </choose>
            </otherwise>
        </choose>
    </select>


    <!--
    CLRI_Consultation de l'opérateur de la déclaration en détail !== CLRI_상세신고서업체 조회 ==!
    (Kim Kiryong)
    -->
    <select id="selectDedCoInfo" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedCoVo">
        SELECT A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , A.dcer_co_nm /** Nom De L'Entreprise Du Déclarant !== 신고인업체명 ==! */
             , A.dcer_addr /** Adresse Du Déclarant !== 신고인주소 ==! */
             , A.del_yn /** Suppression On !== 삭제여부 ==! */
             , A.frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , A.frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , A.last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
             , A.exppn_co_nm /** Nom De L'Entreprise De L'Exportateur !== 수출자업체명 ==! */
             , A.exppn_addr /** Adresse De L'Exportateur !== 수출자주소 ==! */
             , A.imppn_co_nm /** Nom De L'Entreprise De L'Importateur !== 수입자업체명 ==! */
             , A.imppn_addr /** Adresse De L'Importateur !== 수입자주소 ==! */
             , A.txpr_co_nm /** Nom De L'Entreprise Contribuable !== 납세자업체명 ==! */
             , A.txpr_addr /** Adresse Du Contribuable !== 납세자주소 ==! */
             , NVL(A.txpr_tlph_no, '') AS txpr_tlph_no /** N° De Téléphone Du Contribuable !== 납세자전화번호 ==! */
             , NVL(A.txpr_eml, '')     AS txpr_eml /** E-Mail Du Contribuable !== 납세자이메일 ==! */
             , A.BFCY_CO_NM /** Nom De L''Entreprise Du Bénéficiaire */
             , A.BFCY_ADDR /** Adresse Benef */
             , A.EXPPN_EML /** Email De L'Exportateur !== 수출자이메일 ==! */ /** PSC_MODIFY_20240315 */
        FROM TB_CLRI_DED_CO A
        WHERE del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
          AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        LIMIT 1
    </select>

    <!--
  CLRI_Consultation de la liste de la caution de la déclaration en détail !== CLRI_상세신고서담보 목록 조회 ==!
  (Kim Kiryong)
  -->
    <!-- List<ClrDedMgVo> selectDedMgList(ClrDedMgVo searchVo); -->
    <select id="selectDedMgList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedMgVo">
        <include refid="pagination.header"></include>
        SELECT
        A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        , A.mg_tp_cd /** Code De Type De Caution !== 담보구분코드 ==! */
        , A.del_yn /** Suppression On !== 삭제여부 ==! */
        , A.frst_regst_id /** Id Du Premier Enregistrant !== 최초등록자ID ==! */
        , A.frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
        , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
        , A.last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
        , A.mg_ac_no /** N° De Compte De Caution !== 담보계좌번호 ==! */
        FROM TB_CLRI_DED_MG A
        WHERE del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
        AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        <if test="mgTpCd != null and mgTpCd != ''">
            AND A.mg_tp_cd = #{mgTpCd}
        </if>
        <if test="mgAcNo != null and mgAcNo != ''">
            AND A.mg_ac_no = #{mgAcNo}
        </if>
        <include refid="pagination.footer"></include>
    </select>

    <!--
  Consultation Closes an open file !== Closes an open file 조회 ==!
  (Kim Kiryong)
  -->
    <!-- ClrDedVlutComnVo selectDedVlutComnInfo(ClrDedVlutComnVo searchVo); -->
    <select id="selectDedVlutComnInfo" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutComnVo">
        SELECT A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , A.infee_amt /** Montant D'Assurance !== 보험료금액 ==! */
             , A.infee_curr_cd /** Code De Devise D'Assurance !== 보험료통화코드 ==! */
             , A.infee_fxrt /** Taux De Change D'Assurance !== 보험료환율 ==! */
             , A.infee_ncy_amt /** Montant Nyc De L'Assurance !== 보험료NCY금액 ==! */
             , A.otcst_amt /** Montant Des Autres Coûts !== 기타비용금액 ==! */
             , A.otcst_curr_cd /** Code De Devise Des Autres Coûts !== 기타비용통화코드 ==! */
             , A.otcst_fxrt /** Taux De Change Des Autres Coûts !== 기타비용환율 ==! */
             , A.otcst_ncy_amt /** Montant Des Autres Coûts De Ncy !== 기타비용NCY금액 ==! */
             , A.ddct_amt /** Montant Déduit !== 공제금액 ==! */
             , A.ddct_rt
             , A.ddct_curr_cd /** Code De Devise De La Déduction !== 공제통화코드 ==! */
             , A.invc_amt /** Montant De Facture !== 송장금액 ==! */
             , A.ddct_fxrt /** Taux De Change De La Déduction !== 공제환율 ==! */
             , A.ddct_ncy_amt /** Montant Ncy Déduit !== 공제NCY금액 ==! */
             , A.ttxbs_ncy_amt /** Montant Ncy Total De La Base Taxable !== 총과세기준NCY금액 ==! */
             , A.ttxbs_usd_amt /** Montant Usd Total De La Base Taxable !== 총과세기준USD금액 ==! */
             , A.tvlut_ncy_amt /** Montant Ncy Total De L'Évaluation De Valeur !== 총가격평가NCY금액 ==! */
             , A.tvlut_usd_amt /** Montant Usd Total De L'Évaluation De Valeur !== 총가격평가USD금액 ==! */
             , A.del_yn /** Suppression On !== 삭제여부 ==! */
             , A.frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , A.frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , A.invc_fxrt /** Taux De Change De La Facture !== 송장환율 ==! */
             , A.last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
             , A.invc_curr_cd /** Code De Devise De La Facture !== 송장통화코드 ==! */
             , A.invc_ncy_amt /** Montant Ncy De Facture !== 송장NCY금액 ==! */
             , A.invc_usd_amt /** Montant Usd De Facture !== 송장USD금액 ==! */
             , A.cach_amt /** Montant Du Fret !== 운임금액 ==! */
             , A.cach_curr_cd /** Code De Devise Du Fret !== 운임통화코드 ==! */
             , A.cach_fxrt /** Taux De Change Du Fret !== 운임환율 ==! */
             , A.cach_ncy_amt /** Montant Ncy Du Fret !== 운임NCY금액 ==! */
        FROM TB_CLRI_DED_VLUT_COMN A
        WHERE del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
          AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        LIMIT 1
    </select>


    <!--
  CLRI_Consultation de la liste des articles de la déclaration en détail !== CLRI_상세신고서품목 목록 조회 ==!
  (Kim Kiryong)
  -->
    <!-- List<ClrDedPdlsVo> selectDedPdlsList(ClrDedPdlsVo searchVo); -->
    <select id="selectDedPdlsList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultMap="ClrDedPdlsResultMap">
        /* selectDedPdlsList */
        SELECT A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , A.pdls_no /** N° D'Article !== 품목번호 ==! */
             , A.upr_pdls_no /** N° d'article superieur !== 상위품목번호 ==! */
             , A.hs_cd /** Code Sh !== HS코드 ==! */
             , A.cmdt_clsf_spel_cd /** Code Spécifique De Classification De Marchandise !== 물품분류특별코드 ==! */
             , A.hs_excp_mtr_cd             /** Code d'extrait de la sous position tarifaire !== HS예외사항코드 ==! */
             , alpassint.fn_get_excp_mtr_cd_nm(A.hs_cd, A.hs_excp_mtr_cd, 'A', '') AS hs_excp_mtr_nm
             , A.apc_excp_mtr_cd
             , alpassint.fn_get_excp_mtr_cd_nm(A.hs_cd, A.apc_excp_mtr_cd, 'B', A.apc_cd) AS apc_excp_mtr_nm
             , A.apc_dtl_cd
             , alpassint.fn_get_excp_mtr_cd_nm(A.hs_cd, A.apc_dtl_cd, 'D', A.apc_cd) AS apc_dtl_nm
             , A.prvl_excp_mtr_cd
             , alpassint.fn_get_excp_mtr_cd_nm(A.hs_cd, A.prvl_excp_mtr_cd, 'C', A.prvl_cd) AS prvl_excp_mtr_nm
             , A.adit_tx_qty
             , A.adit_tx_qty_ut_cd
             , A.PDLS_CLSF_BFHN_JDGN_PN
             , TO_CHAR(TO_DATE(A.apc_atpm_strt_dt    , 'YYYYMMDD'),'DD/MM/YYYY') AS apc_atpm_strt_dt
             , TO_CHAR(TO_DATE(A.apc_atpm_end_dt     , 'YYYYMMDD'),'DD/MM/YYYY') AS apc_atpm_end_dt
             , A.psmgt_ffmn_xpir_prid
             , A.pdls_nm /** Nom De L'Article !== 품목명 ==! */
             , A.dlng_pdls_nm /** Nom De L'Article De Transaction !== 거래품목명 ==! */
             , A.nwpr_scar_cmdt_cd /** Code de produit neuf et usage !== 신상품중고물품코드 ==! */
             , A.pckg_shmr_mark_no /** N° De Marque D'Expédition Du Colis !== 포장화인마크번호 ==! */
             , A.pckg_desc /** Description Du Colis !== 포장설명 ==! */
             , A.orcy_cnty_cd /** Code De Pays D'Origine !== 원산지국가코드 ==! */
             , A.apc_cd /** Code Apc !== APC코드 ==! */
             , A.prvl_cd /** Code préférentiel !== 특혜코드 ==! */
             , A.qta_apre_no /** N° d'autorisation du quota !== 쿼터승인번호 ==! */
             , A.mg_dscn_apre_no /** N° d'autorisation de l'exemption de la garantie !== 담보할인승인번호 ==! */
             , A.prc_dtrm_mean_cd /** Code De Méthode D'Évaluation De Valeur !== 가격결정방법코드 ==! */
             , A.brnd_nm /** Nom De La Marque !== 브랜드명 ==! */
             , TO_CHAR(TO_DATE(alpassint.fn_get_bf_dclr_dt(A.bf_dtl_dcsh_no, A.bf_pdls_no), 'YYYYMMDD'),'DD/MM/YYYY') AS FRST_DCLR_DT
             , A.bf_dtl_dcsh_no /** N° de la déclaration en détail précédent !== 이전상세신고서번호 ==! */
             , TO_CHAR(TO_DATE(A.bf_dtl_dcsh_dt, 'YYYYMMDD'), 'DD/MM/YYYY')                               AS bf_dtl_dcsh_dt /** Date de la déclaration en détail précédent !== 이전상세신고서일자 ==! */
             , A.bf_pdls_no /** N° D'Article Précédent !== 이전품목번호 ==! */
             , A.divd_ffmn_tp_cd /** Code De Type D'Apurement Partiel !== 분할이행구분코드 ==! */
             , A.qty /** Quantité !== 수량 ==! */
             , A.qty_ut_cd /** Code De L'Unité De Quantité !== 수량단위코드 ==! */
             , A.trif_base_val /** Valeur Statistique !== 관세기준값 ==! */
             , A.pdls_ttwg /** Poids Brut De L'Article !== 품목총중량 ==! */
             , A.pdls_ntwg /** Poids Net De L'Article !== 품목순중량 ==! */
             , A.pdls_pckg_gcnt /** Nombre De Colis De L'Article !== 품목포장개수 ==! */
             , A.pdls_pckg_ut_cd /** Code D'Unité De Colis De L'Article !== 품목포장단위코드 ==! */
             , A.oil_tank_no /** N° de réservoir d'huile !== 오일탱크번호 ==! */
             , A.vhcl_yn /** Véhicule On !== 차량여부 ==! */
             , A.pdls_psmgt_trgt_yn /** Objet de gestion et suivi de l'article ON !== 품목사후관리대상여부 ==! */
             , A.pdls_psmgt_ffmn_cmpl_yn /** Apurement de gestion et suivi de l'article accompli ON !== 품목사후관리이행완료여부 ==! */
             , TO_CHAR(TO_DATE(A.pdls_psmgt_ffmn_cmpl_dt, 'YYYYMMDD'),
                       'DD/MM/YYYY')                                                                      AS pdls_psmgt_ffmn_cmpl_dt /** Date d'accomplissement de l'apurement de gestion et suivi de l'article !== 품목사후관리이행완료일자 ==! */
             , A.pdls_psmgt_conc_rsn_cd /** Code de cloture des motifs de gestion et suivi de l'article !== 품목사후관리종결사유코드 ==! */
             , A.del_yn /** Suppression On !== 삭제여부 ==! */
             , A.frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , TO_CHAR(A.frst_rgsr_dttm, 'DD/MM/YYYY')                                                    AS frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , TO_CHAR(A.last_chg_dttm, 'DD/MM/YYYY')                                                     AS last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
             , A.hs_err_pvnt_val /** Code d'identification d'erreur !== 오류 판별 코드 ==! */
             , (select hs_err_pvnt_val from tb_clri_hs_cd where hs_cd = A.hs_cd and del_yn = 'N' limit 1) as HS_ERR_PVNT
             , A.regm_rqst_cd /** N° de demande de régime !== 레짐신청번호 ==! */
             , A.regm_pn
             , A.prhb_cmdt_cd
             , (SELECT aprs_rqst_no
                FROM tb_clri_samppick_rqst B
                WHERE B.dtl_dcsh_no = A.dtl_dcsh_no
                  AND B.pdls_no = A.pdls_no
                ORDER BY last_chg_dttm desc, samp_pick_rqst_dt desc
                LIMIT 1)                                                                                  as aprs_rqst_no
             , (SELECT fn_get_cd_vdval_nm('CLR_0110', B.rqst_tp_cd, #{langCd})
                FROM tb_clri_samppick_rqst B
                WHERE B.dtl_dcsh_no = A.dtl_dcsh_no
                  AND B.pdls_no = A.pdls_no
                ORDER BY C.last_chg_dttm desc, aprs_rqst_no desc
                LIMIT 1)                                                                                  as aprs_rqst_tp_nm
             , (SELECT C.PRCS_STTS_CD
                FROM tb_clri_dtl_dcsh_aprs_rqst C
                WHERE C.dtl_dcsh_no = A.dtl_dcsh_no
                  AND C.pdls_no = A.pdls_no
                  AND aprs_rqst_no = C.aprs_rqst_no
                order by C.last_chg_dttm desc, C.aprs_rqst_no desc
                LIMIT 1)                                                                                  AS APRS_PRCS_STTS_CD
             , (SELECT rqst_tp_cd
                FROM tb_clri_samppick_rqst B
                WHERE B.dtl_dcsh_no = A.dtl_dcsh_no
                  AND B.pdls_no = A.pdls_no
                ORDER BY last_chg_dttm desc, aprs_rqst_no desc
                LIMIT 1)                                                                                  as rqst_tp_cd
             , B.dtl_dcsh_no                                                                              AS STSZ_dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , B.pdls_no                                                                                  AS STSZ_pdls_no /** N° D'Article !== 품목번호 ==! */
             , B.mdl_stsz_no                                                                              AS STSZ_mdl_stsz_no /** N° De Modèle Et Spécification !== 모델규격번호 ==! */
             , B.mdl_stsz_nm                                                                              AS STSZ_mdl_stsz_nm /** Nom Du Modèle Et De La Spécification !== 모델규격명 ==! */
             , B.BF_PDLS_NO           AS STSZ_BF_PDLS_NO
             , B.BF_MDL_STSZ_NO       AS STSZ_BF_MDL_STSZ_NO
             , B.ingr_nm                                                                                  AS STSZ_ingr_nm /** Nom Du Composant !== 성분명 ==! */
             , B.qty                                                                                      AS STSZ_qty /** Quantité !== 수량 ==! */
             , B.qty_ut_cd                                                                                AS STSZ_qty_ut_cd /** Code De L'Unité De Quantité !== 수량단위코드 ==! */
             , B.ut_prc                                                                                   AS STSZ_ut_prc /** Prix Unitaire !== 단위가격 ==! */
             , B.invc_amt                                                                                 AS STSZ_invc_amt /** Montant De Facture !== 송장금액 ==! */
             , B.del_yn                                                                                   AS STSZ_del_yn /** Suppression On !== 삭제여부 ==! */
             , B.frst_regst_id                                                                            AS STSZ_frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , B.frst_rgsr_dttm                                                                           AS STSZ_frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , B.last_chpr_id                                                                             AS STSZ_last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , B.last_chg_dttm                                                                            AS STSZ_last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */

             , C.pdls_no                                                                                  AS STSZ_VHCL_pdls_no /** N° D'Article !== 품목번호 ==! */
             , C.mdl_stsz_no                                                                              AS STSZ_VHCL_mdl_stsz_no
             , C.dtl_dcsh_no                                                                              AS STSZ_VHCL_dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , C.chss_no                                                                                  AS STSZ_VHCL_chss_no /** N° De Châssis !== 차대번호 ==! */
             , C.imp_pt_nm                                                                                AS STSZ_VHCL_imp_pt_nm /** Cadre !== 수입유형명 ==! */
             , C.vhcl_mnur_cd                                                                             AS STSZ_VHCL_vhcl_mnur_cd /** Code De Fabricant Du Véhicule !== 차량제조사코드 ==! */
             , NVL((SELECT vhcl_mnur_nm FROM alpassint.tb_com_vhcl_mnur where del_yn = 'N' AND vhcl_mnur_cd = C.vhcl_mnur_cd), '')                                  AS STSZ_VHCL_vhcl_mnur_nm
             , C.clr_nm                                                                                   AS STSZ_VHCL_clr_nm /** Nom De La Couleur !== 색상명 ==! */
             , C.vhcl_mdl_cd                                                                              AS STSZ_VHCL_vhcl_mdl_cd /** Code De Modèle Du Véhicule !== 차량모델코드 ==! */
             , NVL((SELECT vhcl_mdl_nm FROM tb_com_vhcl_mdl
                    where del_yn = 'N'
                      AND vhcl_mnur_cd = C.vhcl_mnur_cd
                      AND vhcl_mdl_cd = C.vhcl_mdl_cd), '')                                               AS STSZ_VHCL_vhcl_mdl_nm
             , C.drvr_nm                                                                                  AS STSZ_VHCL_drvr_nm /** Nom de conducteur !== 운전자명 ==! */
             , C.trsf_nnpr_yn                                                                             AS STSZ_VHCL_trsf_nnpr_yn /** Incessibilité !== 양도불허여부 ==! */
             , C.drvr_post_no                                                                             AS STSZ_VHCL_drvr_post_no /** zipcode conducteur !== 운전자우편번호 ==! */
             , C.drvr_addr                                                                                AS STSZ_VHCL_drvr_addr /** Adresse Du Conducteur !== 운전자주소 ==! */
             , C.car_rgsr_no                                                                              AS STSZ_VHCL_car_rgsr_no /** N° d'immatriculation !== 자동차등록번호 ==! */
             , SUBSTRING(C.vhcl_rele_dt, 1, 4)                                                            AS STSZ_VHCL_vhcl_rele_dt /** Date sortie !== 차량해제일자 ==! */
             , C.mkng_yy                                                                                  AS STSZ_VHCL_mkng_yy /** Année de fabrication !== 제작년도 ==! */
             , C.vhcl_wght_cn                                                                             AS STSZ_VHCL_vhcl_wght_cn /** Poids total . C !== 차량중량내용 ==! */
             , C.load_wght_cn                                                                             AS STSZ_VHCL_load_wght_cn /** Charge .U !== 적재중량내용 ==! */
             , C.otpt_cn                                                                                  AS STSZ_VHCL_otpt_cn /** Puissance !== 출력내용 ==! */
             , C.dpcmt_cn                                                                                 AS STSZ_VHCL_dpcmt_cn /** Cylindrée !== 배기량내용 ==! */
             , C.fl_knd_nm                                                                                AS STSZ_VHCL_fl_knd_nm /** Energie !== 연료종류명 ==! */
             , C.vhcl_knd_nm                                                                              AS STSZ_VHCL_vhcl_knd_nm /** Type De Véhicule !== 차량종류명 ==! */
             , C.cabo_nm                                                                                  AS STSZ_VHCL_cabo_nm /** Carrosserie !== 차체명 ==! */
             , TO_CHAR(TO_DATE(C.frst_opra_dt, 'YYYYMMDD'), 'DD/MM/YYYY')                                 AS STSZ_VHCL_frst_opra_dt /** Date De Première Mise En Circulation !== 최초운행일자 ==! */
             , C.stcnt                                                                                    AS STSZ_VHCL_stcnt /** Nombre De Sièges !== 좌석수 ==! */
             , C.del_yn                                                                                   AS STSZ_VHCL_del_yn /** Suppression On !== 삭제여부 ==! */
             , C.frst_regst_id                                                                            AS STSZ_VHCL_frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , C.frst_rgsr_dttm                                                                           AS STSZ_VHCL_frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , C.last_chpr_id                                                                             AS STSZ_VHCL_last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , C.last_chg_dttm                                                                            AS STSZ_VHCL_last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
             , TO_CHAR(TO_DATE(C.trsf_nnpr_strt_dt, 'YYYYMMDD'), 'DD/MM/YYYY')                            AS STSZ_VHCL_trsf_nnpr_strt_dt /** Date de début de l’incessibilité !== 양도불허시작일자 ==! */
             , TO_CHAR(TO_DATE(C.trsf_nnpr_end_dt, 'YYYYMMDD'), 'DD/MM/YYYY')                             AS STSZ_VHCL_trsf_nnpr_end_dt /** Date de fin de l’incessibilité !== 양도불허종료일자 ==! */
             , C.vhcl_knd_cd                                                                              AS STSZ_VHCL_vhcl_knd_cd /** Code du type de véhicule !== Préciser s’il s’agit de véhicule 차량종류코드 ==! */
             , C.tpd_mgmt_no                                                                              AS STSZ_VHCL_tpd_mgmt_no /** Numéro de gestion de TPD !== TPD관리번호 ==! */ /** PSC_MODIFY_20240315 */
             , C.trsf_unbl_tp_cd                                                                          AS STSZ_VHCL_TRSF_UNBL_TP_CD /** Type de cadre !== 양도불가구분코드 ==! */
             , C.imp_crpp_no                                                                              AS STSZ_VHCL_IMP_CRPP_NO /** Numéro de certificat d'importation !== 수입증명서번호 ==! */
             , TO_CHAR(TO_DATE(C.imp_crpp_dt, 'YYYYMMDD'),'DD/MM/YYYY')                                   AS STSZ_VHCL_IMP_CRPP_DT /** Date de certificat d'importation !== 수입증명서일자 ==! */
             , C.imp_crpp_prid                                                                            AS STSZ_VHCL_IMP_CRPP_PRID /** Durée de certificat d'importation !== 수입증명서기간 ==! */
             , C.vhcl_cscl_mgmt_no                                                                        AS STSZ_VHCL_VHCL_CSCL_MGMT_NO /** Numero de M846 !== M846번호 ==! */

             , D.dtl_dcsh_no                                                                              AS RWMS_dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , D.pdls_no                                                                                  AS RWMS_pdls_no /** N° D'Article !== 품목번호 ==! */
             , D.rwms_srno                                                                                AS RWMS_rwms_srno /** N° De Séquence De La Matière Première !== 원재료일련번호 ==! */
             , TO_CHAR(TO_DATE(alpassint.fn_get_bf_dclr_dt(D.bf_dtl_dcsh_no, D.bf_pdls_no), 'YYYYMMDD'),'DD/MM/YYYY') AS RWMS_FRST_DCLR_DT
             , D.bf_dtl_dcsh_no                                                                           AS RWMS_bf_dtl_dcsh_no /** N° de la déclaration en détail précédent !== 이전상세신고서번호 ==! */
             , D.bf_pdls_no                                                                               AS RWMS_bf_pdls_no /** N° D'Article Précédent !== 이전품목번호 ==! */
             , D.bf_hs_cd                                                                                 AS RWMS_bf_hs_cd /** Code Sh Précédent !== 이전HS코드 ==! */
             , D.bf_cmdt_clsf_spel_cd                                                                     AS RWMS_bf_cmdt_clsf_spel_cd /** Code Spécifique Précédent De La Classification De Marchandise  !== 이전물품분류특별코드 ==! */
             , D.divd_ffmn_tp_cd                                                                          AS RWMS_divd_ffmn_tp_cd /** Code De Type D'Apurement Partiel !== 분할이행구분코드 ==! */
             , D.qty                                                                                      AS RWMS_qty /** Quantité !== 수량 ==! */
             , D.qty_ut_cd                                                                                AS RWMS_qty_ut_cd /** Code De L'Unité De Quantité !== 수량단위코드 ==! */
             , D.ntwg                                                                                     AS RWMS_ntwg /** Poids Net !== 순중량 ==! */
             , D.del_yn                                                                                   AS RWMS_del_yn /** Suppression On !== 삭제여부 ==! */
             , D.frst_regst_id                                                                            AS RWMS_frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , D.frst_rgsr_dttm                                                                           AS RWMS_frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , D.last_chpr_id                                                                             AS RWMS_last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , D.last_chg_dttm                                                                            AS RWMS_last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */

             , E.dtl_dcsh_no                                                                              AS VLUT_dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , E.pdls_no                                                                                  AS VLUT_pdls_no /** N° D'Article !== 품목번호 ==! */
             , E.pdls_invc_amt                                                                            AS VLUT_pdls_invc_amt /** Montant De La Facture De L'Article !== 품목송장금액 ==! */
             , E.pdls_invc_fxrt                                                                           AS VLUT_pdls_invc_fxrt /** Taux De Change De La Facture De L'Article !== 품목송장환율 ==! */
             , E.pdls_invc_ncy_amt                                                                        AS VLUT_pdls_invc_ncy_amt /** Montant Ncy De La Facture De L'Article !== 품목송장NCY금액 ==! */
             , E.pdls_invc_usd_amt                                                                        AS VLUT_pdls_invc_usd_amt /** Montant Usd De La Facture De L'Article !== 품목송장USD금액 ==! */
             , E.pdls_cach_amt                                                                            AS VLUT_pdls_cach_amt /** Montant Du Fret De L'Article !== 품목운임금액 ==! */
             , E.pdls_cach_curr_cd                                                                        AS VLUT_pdls_cach_curr_cd /** Code De Devise Du Fret De L'Article !== 품목운임통화코드 ==! */
             , E.pdls_cach_fxrt                                                                           AS VLUT_pdls_cach_fxrt /** Taux De Change Du Fret De L'Article !== 품목운임환율 ==! */
             , E.pdls_cach_ncy_amt                                                                        AS VLUT_pdls_cach_ncy_amt /** Montant Ncy Du Fret De L'Article !== 품목운임NCY금액 ==! */
             , E.pdls_infee_amt                                                                           AS VLUT_pdls_infee_amt /** Montant De L'Assurance De L'Article !== 품목보험료금액 ==! */
             , E.pdls_infee_curr_cd                                                                       AS VLUT_pdls_infee_curr_cd /** Code De Devise De L'Assurance De L'Article !== 품목보험료통화코드 ==! */
             , E.pdls_infee_fxrt                                                                          AS VLUT_pdls_infee_fxrt /** Taux De Change De L'Assurance De L'Article !== 품목보험료환율 ==! */
             , E.pdls_infee_ncy_amt                                                                       AS VLUT_pdls_infee_ncy_amt /** Montant Ncy De L'Assurance De L'Article !== 품목보험료NCY금액 ==! */
             , E.pdls_otcst_amt                                                                           AS VLUT_pdls_otcst_amt /** Montant Des Autres Frais De L'Article !== 품목기타비용금액 ==! */
             , E.pdls_otcst_curr_cd                                                                       AS VLUT_pdls_otcst_curr_cd /** Code De Devise Des Autres Frais De L'Article !== 품목기타비용통화코드 ==! */
             , E.pdls_otcst_fxrt                                                                          AS VLUT_pdls_otcst_fxrt /** Taux De Change Des Autres Frais De L'Article !== 품목기타비용환율 ==! */
             , E.pdls_otcst_ncy_amt                                                                       AS VLUT_pdls_otcst_ncy_amt /** Montant Ncy Des Autres Frais De L'Article !== 품목기타비용NCY금액 ==! */
             , E.pdls_ddct_amt                                                                            AS VLUT_pdls_ddct_amt /** Montant Déduit De L'Article !== 품목공제금액 ==! */
             , E.pdls_ddct_curr_cd                                                                        AS VLUT_pdls_ddct_curr_cd /** Code De Devise Déduit De L'Article !== 품목공제통화코드 ==! */
             , E.pdls_ddct_fxrt                                                                           AS VLUT_pdls_ddct_fxrt /** Taux De Change De La Déduction De L'Article !== 품목공제환율 ==! */
             , E.pdls_ddct_ncy_amt                                                                        AS VLUT_pdls_ddct_ncy_amt /** Montant Ncy Déduit De L'Article !== 품목공제NCY금액 ==! */
             , E.pdls_txbs_ncy_amt                                                                        AS VLUT_pdls_txbs_ncy_amt /** Montant Nyc De La Base Taxable De L'Article !== 품목과세기준NCY금액 ==! */
             , E.pdls_txbs_usd_amt                                                                        AS VLUT_pdls_txbs_usd_amt /** Montant Usd De La Base Taxable De L'Article !== 품목과세기준USD금액 ==! */
             , E.pdls_vlut_ncy_amt                                                                        AS VLUT_pdls_vlut_ncy_amt /** Montant Ncy De L'Évaluation De Valeur De L'Article !== 품목가격평가NCY금액 ==! */
             , E.pdls_vlut_usd_amt                                                                        AS VLUT_pdls_vlut_usd_amt /** Montant Usd De L'Évaluation De Valeur De L'Article !== 품목가격평가USD금액 ==! */
             , E.pdls_mprc_base_val                                                                       AS VLUT_pdls_mprc_base_val /** Valeur basique de la valeur boursière de l'article !== 품목시장가격기준값 ==! */
             , E.pdls_mprc_ut_amt                                                                         AS VLUT_pdls_mprc_ut_amt /** Montant unitaire de la valeur boursière de l'article !== 품목시장가격단위금액 ==! */
             , E.pdls_mprc_ncy_amt                                                                        AS VLUT_pdls_mprc_ncy_amt /** Montant NCY de la valeur boursière de l'article !== 품목시장가격NCY금액 ==! */
             , E.del_yn                                                                                   AS VLUT_del_yn /** Suppression On !== 삭제여부 ==! */
             , E.frst_regst_id                                                                            AS VLUT_frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , TO_CHAR(E.frst_rgsr_dttm, 'DD/MM/YYYY')                                                    AS VLUT_frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , E.last_chpr_id                                                                             AS VLUT_last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , TO_CHAR(E.last_chg_dttm, 'DD/MM/YYYY')                                                     AS VLUT_last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
             , E.pdls_invc_curr_cd                                                                        AS VLUT_pdls_invc_curr_cd /** Code De Devise De La Facture De L'Article !== 품목송장통화코드 ==! */
             , E.pdls_mprc_tp_cd                                                                          AS VLUT_pdls_mprc_tp_cd /** Code De Type De La Valeur Mercuriale De L'Article !== 품목시장가격구분코드 ==! */
             , E.pdls_mprc_curr_cd                                                                        AS VLUT_pdls_mprc_curr_cd /** Code De Devise De La Valeur Mercuriale De L'Article !== 품목시장가격통화코드 ==! */
             , E.pdls_mprc_usd_amt                                                                        AS VLUT_pdls_mprc_usd_amt /** Montant USD de la valeur boursière de l'article !== 품목시장가격USD금액 ==! */
        FROM TB_CLRI_DED_PDLS A
                 LEFT JOIN TB_CLRI_DED_MDL_STSZ B
                           ON A.dtl_dcsh_no = B.dtl_dcsh_no AND A.PDLS_NO = B.PDLS_NO AND B.DEL_YN = 'N'
                 LEFT JOIN TB_CLRI_DED_VHCL C
                           ON A.dtl_dcsh_no = C.dtl_dcsh_no AND A.PDLS_NO = C.PDLS_NO AND B.mdl_stsz_no = C.mdl_stsz_no AND C.DEL_YN = 'N'
                 LEFT JOIN TB_CLRI_DED_RWMS D
                           ON A.dtl_dcsh_no = D.dtl_dcsh_no AND A.PDLS_NO = D.PDLS_NO AND D.DEL_YN = 'N'
                 LEFT JOIN TB_CLRI_DED_VLUT_PDLS E
                           ON A.dtl_dcsh_no = E.dtl_dcsh_no AND A.PDLS_NO = E.PDLS_NO AND E.DEL_YN = 'N'
        WHERE A.del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
          AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        ORDER BY TO_NUMBER(A.PDLS_NO), TO_NUMBER(B.MDL_STSZ_NO), D.RWMS_SRNO
    </select>


    <!--
  CLRI_Consultation de la liste des articles à réimporter/réexporter de la déclaration en détail !== CLRI_상세신고서재수입재수출예정품목 목록 조회 ==!
  (Kim Kiryong)
  -->
    <!-- List<ClrDedRimexPrngPdlsVo> selectDedRimexPrngPdlsList(ClrDedRimexPrngPdlsVo searchVo); -->
    <select id="selectDedRimexPrngPdlsList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedRimexPrngPdlsVo">
        <include refid="pagination.header"></include>
        SELECT
        A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        , A.prng_pdls_no /** N° D'Article Attendu !== 예정품목번호 ==! */
        , A.cmdt_clsf_spel_cd /** Code Spécifique De Classification De Marchandise !== 물품분류특별코드 ==! */
        , A.pdls_nm /** Nom De L'Article !== 품목명 ==! */
        , A.dlng_pdls_nm /** Nom De L'Article De Transaction !== 거래품목명 ==! */
        , A.orcy_cnty_cd /** Code De Pays D'Origine !== 원산지국가코드 ==! */
        , A.qty /** Quantité !== 수량 ==! */
        , A.qty_ut_cd /** Code De L'Unité De Quantité !== 수량단위코드 ==! */
        , A.pdls_ttwg /** Poids Brut De L'Article !== 품목총중량 ==! */
        , A.pdls_ntwg /** Poids Net De L'Article !== 품목순중량 ==! */
        , A.del_yn /** Suppression On !== 삭제여부 ==! */
        , A.hs_err_pvnt_val
        , A.frst_regst_id /** Id Du Premier Enregistrant !== 최초등록자ID ==! */
        , A.frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
        , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
        , A.last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
        FROM TB_CLRI_DED_RIMEX_PRNG_PDLS A
        WHERE del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
        AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        ORDER BY TO_NUMBER(A.PRNG_PDLS_NO)
        <include refid="pagination.footer"></include>
    </select>

    <!-- Consultation de la liste des conteneurs de DED !==DED 컨테이너 목록 조회==! -->
    <select id="selectDedCntrList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedCntrDcshVo">
        /** selectDedCntrList */
        SELECT
            A.DTL_DCSH_NO ,
            A.CNTR_SRNO ,
            A.CAG_MGMT_NO ,
            A.CNTR_NO ,
            A.CNTR_TP_CD ,
            A.PCKG_TGCNT AS PCKG_GCNT ,
            (SELECT ECNTR_WGHT
                FROM TB_CARI_CAG_DCSH_BL_CNTR D
                WHERE 1=1
                AND D.CAG_MGMT_NO = A.CAG_MGMT_NO AND D.CNTR_NO = A.CNTR_NO
                ) AS ECNTR_WGHT ,
            A.AL_TTWG AS TTWG ,
            A.CNTR_STFN_STTS_CD ,
            A.SEAL_NO1 ,
            A.SEAL_NO2 ,
            A.SEAL_NO3 ,
            A.SEAL_CHPN1 ,
            A.SEAL_CHPN2 ,
            A.SEAL_CHPN3 ,
            CASE WHEN B.XRAY_INSC_NO IS NOT NULL THEN 'A' /** XRAY 완료*/
                 WHEN B.XRAY_INSC_NO IS NULL AND C.INSC_REQST_SRNO IS NULL THEN 'B' /** XRAY 요청*/
                 ELSE 'C' END XRAY_STATUS /** XRAY 진행중*/
        FROM
            (   SELECT
                    A.DTL_DCSH_NO  ,
                    A.CNTR_SRNO ,
                    A.CNTR_NO ,
                    A.CNTR_TP_CD ,
                    A.CNTR_STFN_STTS_CD ,
                    A.SEAL_NO1 ,
                    A.SEAL_NO2 ,
                    A.SEAL_NO3 ,
                    A.SEAL_CHPN1 ,
                    A.SEAL_CHPN2 ,
                    A.SEAL_CHPN3 ,
                    B.CAG_MGMT_NO ,
                    B.BL_NO  ,
                    B.DCLR_PT_CD ,
                    B.PCKG_TGCNT ,
                    B.AL_TTWG
                FROM
                    TB_CLRI_DED_CNTR A ,
                    TB_CLRI_DED_COMN B
                WHERE A.DTL_DCSH_NO = #{dtlDcshNo}
                  AND A.DTL_DCSH_NO = B.DTL_DCSH_NO
                  AND A.DEL_YN = 'N'
                  AND B.DEL_YN = 'N'
            ) A LEFT OUTER JOIN
              (SELECT
				 A1.XRAY_INSC_NO,
				 AA1.RELA_NO,
				 B1.CAG_MGMT_NO,
				 '' CNTR_NO
			 FROM TB_CARI_XRAY_INSC_RSLT A1
					  LEFT OUTER JOIN TB_CARI_XRAY_BL B1
									  ON ( A1.XRAY_INSC_NO  = B1.XRAY_INSC_NO
										  AND B1.DEL_YN = 'N'
										  AND B1.ATCH_FILE_ID IS NOT NULL
										  AND B1.CAG_MGMT_NO = (SELECT CAG_MGMT_NO FROM TB_CLRI_DED_COMN WHERE DTL_DCSH_NO =#{dtlDcshNo} AND DEL_YN ='N'))
					  LEFT OUTER JOIN ALPASSINT.TB_CARI_EXP_CMDT_BRNG AA1
									  ON ( AA1.RELA_NO = #{dtlDcshNo} AND AA1.DEL_YN = 'N' AND B1.EXP_CMDT_BRNG_RQNO = AA1.EXP_CMDT_BRNG_RQNO )
			 UNION
             SELECT
                 A1.XRAY_INSC_NO,
                 AA1.RELA_NO,
                 B1.CAG_MGMT_NO,
                 B1.CNTR_NO
             FROM TB_CARI_XRAY_INSC_RSLT A1
             LEFT OUTER JOIN TB_CARI_XRAY_CNTR B1
             ON ( A1.XRAY_INSC_NO  = B1.XRAY_INSC_NO
               AND B1.DEL_YN = 'N'
               AND B1.ATCH_FILE_ID IS NOT NULL
               AND B1.CAG_MGMT_NO = (SELECT CAG_MGMT_NO FROM TB_CLRI_DED_COMN WHERE DTL_DCSH_NO =#{dtlDcshNo} AND DEL_YN ='N'))
             LEFT OUTER JOIN ALPASSINT.TB_CARI_EXP_CMDT_BRNG AA1
               ON ( AA1.RELA_NO = #{dtlDcshNo} AND AA1.DEL_YN = 'N' AND B1.EXP_CMDT_BRNG_RQNO = AA1.EXP_CMDT_BRNG_RQNO )
            )B ON (A.CNTR_NO = B.CNTR_NO AND (  A.DTL_DCSH_NO  = B.RELA_NO OR A.CAG_MGMT_NO = B.CAG_MGMT_NO))
                 LEFT OUTER JOIN TB_CARI_XRAY_INSC_REQST C
               ON (  A.BL_NO = C.BL_NO
                 AND A.CNTR_NO = C.CNTR_NO
                 AND 1 = CASE WHEN SUBSTR(A.DCLR_PT_CD,1,2) ='IM' AND A.CAG_MGMT_NO = C.CAG_MGMT_NO THEN 1
                              WHEN A.DTL_DCSH_NO = C.DTL_DCSH_NO THEN 1 ELSE 0 END)
        ORDER BY A.CNTR_SRNO
    </select>

    <!-- 가격평가 컨테이너 목록 조회 -->
    <select id="selectVlutCntrList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedCntrDcshVo">
        /** selectVlutCntrList */
        SELECT
            A.DTL_DCSH_NO ,
            A.CNTR_SRNO ,
            A.CAG_MGMT_NO ,
            A.CNTR_NO ,
            A.CNTR_TP_CD ,
            A.CNTR_STFN_STTS_CD ,
            A.SEAL_NO1 ,
            A.SEAL_NO2 ,
            A.SEAL_NO3 ,
            A.SEAL_CHPN1 ,
            A.SEAL_CHPN2 ,
            A.SEAL_CHPN3 ,
            A.CNTR_STFN_STTS_NM,
            A.CNTR_TP_NM,
            CASE WHEN B.XRAY_INSC_NO IS NOT NULL THEN 'A' /** XRAY 완료*/
                 WHEN B.XRAY_INSC_NO IS NULL AND C.INSC_REQST_SRNO IS NULL THEN 'B' /** XRAY 요청*/
                 ELSE 'C' END XRAY_STATUS /** XRAY 진행중*/
        FROM
            (   SELECT
                    A.DTL_DCSH_NO  ,
                    A.CNTR_SRNO ,
                    A.CNTR_NO ,
                    A.CNTR_TP_CD ,
                    A.CNTR_STFN_STTS_CD ,
                    A.SEAL_NO1 ,
                    A.SEAL_NO2 ,
                    A.SEAL_NO3 ,
                    A.SEAL_CHPN1 ,
                    A.SEAL_CHPN2 ,
                    A.SEAL_CHPN3 ,
                    B.CAG_MGMT_NO ,
                    B.BL_NO  ,
                    B.DCLR_PT_CD,
                    FN_GET_CD_VDVAL_NM('CAG_0011', A.CNTR_STFN_STTS_CD, #{langCd}) AS CNTR_STFN_STTS_NM,
                    FN_GET_CD_VDVAL_NM('CAR_0020', A.CNTR_TP_CD, #{langCd})        AS CNTR_TP_NM
                FROM
                    TB_CLRI_VLUT_CNTR A ,
                    TB_CLRI_DED_COMN B
                WHERE A.DTL_DCSH_NO = #{dtlDcshNo}
                  AND A.DTL_DCSH_NO = B.DTL_DCSH_NO
                  AND A.DEL_YN = 'N'
                  AND B.DEL_YN = 'N'
                  AND A.PRC_EV_DGCNT = (SELECT MAX(PRC_EV_DGCNT)
                                        FROM TB_CLRI_DED_VLUT_AUDT_COMN
                                        WHERE DTL_DCSH_NO = #{dtlDcshNo}
                                          AND LAST_YN = 'Y'
                                          AND DEL_YN = 'N')
            ) A  LEFT OUTER JOIN
            (SELECT
                 A1.XRAY_INSC_NO,
                 AA1.RELA_NO,
                 B1.CAG_MGMT_NO,
                 '' CNTR_NO
             FROM TB_CARI_XRAY_INSC_RSLT A1
                      LEFT OUTER JOIN TB_CARI_XRAY_BL B1
                                      ON ( A1.XRAY_INSC_NO  = B1.XRAY_INSC_NO
                                          AND B1.DEL_YN = 'N'
                                          AND B1.ATCH_FILE_ID IS NOT NULL
                                          AND CAG_MGMT_NO = (SELECT CAG_MGMT_NO FROM TB_CLRI_DED_COMN WHERE DTL_DCSH_NO =#{dtlDcshNo} AND DEL_YN ='N'))
                      LEFT OUTER JOIN ALPASSINT.TB_CARI_EXP_CMDT_BRNG AA1
                                      ON ( AA1.RELA_NO = #{dtlDcshNo} AND AA1.DEL_YN = 'N' AND B1.EXP_CMDT_BRNG_RQNO = AA1.EXP_CMDT_BRNG_RQNO )
             UNION
             SELECT
                 A1.XRAY_INSC_NO,
                 AA1.RELA_NO,
                 B1.CAG_MGMT_NO,
                 B1.CNTR_NO
             FROM TB_CARI_XRAY_INSC_RSLT A1
                      LEFT OUTER JOIN TB_CARI_XRAY_CNTR B1
                                      ON ( A1.XRAY_INSC_NO  = B1.XRAY_INSC_NO
                                          AND B1.DEL_YN = 'N'
                                          AND B1.ATCH_FILE_ID IS NOT NULL
                                          AND CAG_MGMT_NO = (SELECT CAG_MGMT_NO FROM TB_CLRI_DED_COMN WHERE DTL_DCSH_NO =#{dtlDcshNo} AND DEL_YN ='N'))
                      LEFT OUTER JOIN ALPASSINT.TB_CARI_EXP_CMDT_BRNG AA1
                                      ON ( AA1.RELA_NO = #{dtlDcshNo} AND AA1.DEL_YN = 'N' AND B1.EXP_CMDT_BRNG_RQNO = AA1.EXP_CMDT_BRNG_RQNO )
            )B ON (A.CNTR_NO = B.CNTR_NO AND (  A.DTL_DCSH_NO  = B.RELA_NO OR A.CAG_MGMT_NO = B.CAG_MGMT_NO))
                 LEFT OUTER JOIN TB_CARI_XRAY_INSC_REQST C
                                 ON (  A.BL_NO = C.BL_NO
                                     AND A.CNTR_NO = C.CNTR_NO
                                     AND 1 = CASE WHEN SUBSTR(A.DCLR_PT_CD,1,2) ='IM' AND A.CAG_MGMT_NO = C.CAG_MGMT_NO THEN 1
                                                  WHEN A.DTL_DCSH_NO = C.DTL_DCSH_NO THEN 1 ELSE 0 END)
        ORDER BY TO_NUMBER(A.CNTR_SRNO)
    </select>


    <!--
  CLRI_Consultation de la liste des documents joints de la déclaration en détail !== CLRI_상세신고서첨부문서 목록 조회 ==!
  (Kim Kiryong)
  -->
    <!-- List<ClrDedAtdocVo> selectDedAtdocList(ClrDedAtdocVo searchVo); -->
    <select id="selectDedAtdocList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedAtdocVo">
        SELECT
            A.DTL_DCSH_NO               /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
          , A.ATCH_DOC_SRNO             /** N° De Séquence Du Document Joint !== 첨부문서일련번호 ==! */
          , A.DOC_KND_CD                /** Code De Type De Document !== 문서종류코드 ==! */
          , FN_GET_DOC_NM(A.DOC_KND_CD, NVL(#{langCd}, 'FR')) AS DOC_KND_NM
          , A.PDLS_NO                   /** N° D'Article !== 품목번호 ==! */
          , A.DOC_NO                    /** N° De Document !== 문서번호 ==! */
          , A.DOC_DESC                  /** Description De Document !== 문서설명 ==! */
          , A.ATCH_FILE_NM              /** Nom Du Fichier Joint !== 첨부파일명 ==! */
          , A.PBLS_ITT_NM               /** Nom De L'Organisme Émetteur !== 발행기관명 ==! */
          , TO_CHAR(TO_DATE(A.PBLS_DT , 'YYYYMMDD'),'DD/MM/YYYY') AS PBLS_DT        /** Date D'Émission !== 발행일자 ==! */
          , 'Y' AS RGSR_DOC_YN
          , A.ATCH_FILE_ID              /** Id Du Fichier Joint !== 첨부파일ID ==! */
          , A.DEL_YN                    /** Suppression On !== 삭제여부 ==! */
          , A.FRST_REGST_ID             /** Id Du Premier Enregistrant !== 최초등록자ID ==! */
          , A.FRST_RGSR_DTTM            /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
          , A.LAST_CHPR_ID              /** Id Du Modificateur Final !== 최종변경자ID ==! */
          , A.LAST_CHG_DTTM             /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
          , B.BFHN_SBMT_YN              /** Présentation préalable !== 사전제출여부 ==! */
        FROM TB_CLRI_DED_ATDOC A
           , TB_CLRI_ATDOC B
        WHERE A.DEL_YN = 'N'                    /** Suppression ON !== 삭제여부 ==! */
        AND   A.DTL_DCSH_NO = #{dtlDcshNo}    /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        AND   A.DOC_KND_CD = B.ATCH_DOC_CD
        ORDER BY A.ATCH_DOC_SRNO
    </select>

    <!--
  CLRI_Consultation de la liste des éléments de la valeur de la déclaration en détail !== CLRI_상세신고서가격신고 목록 조회 ==!
  (Kim Kiryong)
  -->
    <!-- List<ClrDedPrcDclrVo> selectDedPrcDclrList(ClrDedPrcDclrVo searchVo); -->
    <select id="selectDedPrcDclrPdlsList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedPrcDclrPdlsVo">
        SELECT A.dtl_dcsh_no /** Numero de la déclaration en détail!! !==  ==! */
             , A.pdls_no /** N° D'Article !==  ==! */
             , A.mdl_stsz_no
             , A.indr_pymn_tamt /** paiement indirect !== 간접비용 ==! */
             , A.pcfe_amt /** Montant de la redevance !== 구매수수료를 제외한 수수료 ==! */
             , A.mdtn_pcfe_amt /** Frais de courtage !== 중개수수료 ==! */
             , A.pckg_amt /** Contenants et emballages	 !== 용기 및 포장 ==! */
             , A.mnfu_srvc_1_amt /** Frais de produits et services 1 !== 제품 및 서비스 비용 ==! */
             , A.mnfu_srvc_2_amt /** Frais de produits et services 2 !==  ==! */
             , A.mnfu_srvc_3_amt /** Frais de produits et services 3 !==  ==! */
             , A.mnfu_srvc_4_amt /** Frais de produits et services 4 !==  ==! */
             , A.pcfe_lcne_amt /** Montant de la redevance !== 수수료 및 라이센스 ==! */
             , A.resale_ern_amt /** Produit de revente !== 재판매 수익 ==! */
             , A.trnp_cst_amt /** Frais de transporåt  !== 운송비용 ==! */
             , A.load_cst_amt /** 	Frais de chargement !== 적재비용 ==! */
             , A.infee_amt /** Montant D'Assurance !== 보험료 ==! */
             , A.brng_trnp_cst /** Frais de chargement et de manutention !== 반입 운송비용 ==! */
             , A.tech_sppt_cst /** Frais de soutiens techniques !== 기술지원비용 ==! */
             , A.otcst_amt /** Montant Des Autres Coûts !== 기타비용 ==! */
             , A.pyr_trif_amt /** 	Montant de droits et taxes !== 관세 및 제새액 ==! */
             , A.byer_pymn_cst
             , A.del_yn /** Suppression On !==  ==! */
             , A.frst_regst_id /** Id Du Premier Enregistrant  !==  ==! */
             , TO_CHAR(A.frst_rgsr_dttm, 'DD/MM/YYYY') AS frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !==  ==! */
             , A.LAST_CHPR_ID
             , TO_CHAR(A.LAST_CHG_DTTM, 'DD/MM/YYYY')  AS LAST_CHG_DTTM /
        FROM TB_CLRI_DED_PRC_DCLR_PDLS A
        WHERE A.del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
          AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !==  ==! */
    </select>

    <!--
  CLRI_Consultation de la liste des éléments de la valeur de la déclaration en détail !== CLRI_상세신고서가격신고 목록 조회 ==!
  (Kim Kiryong)
  -->
    <!-- List<ClrDedPrcDclrVo> selectDedPrcDclrList(ClrDedPrcDclrVo searchVo); -->
    <select id="selectDedPrcDclrInfo" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedPrcDclrVo">
        SELECT A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , A.byer_idfy_no /** N° D'Identification De L'Acheteur !== 구매자식별번호 ==! */
             , (SELECT IMPPN_CO_NM FROM TB_CLRI_DED_CO WHERE DTL_DCSH_NO = A.DTL_DCSH_NO AND DEL_YN = 'N') AS BYER_CO_NM
             , (SELECT IMPPN_ADDR FROM TB_CLRI_DED_CO WHERE DTL_DCSH_NO = A.DTL_DCSH_NO AND DEL_YN = 'N')  AS BYER_ADDR
             , A.selr_no /** N° D'Identification Du Vendeur !== 판매자식별번호 ==! */
             , A.invc_no /** N° De Facture !== 송장번호 ==! */
             , TO_CHAR(TO_DATE(A.invc_pbls_dt, 'YYYYMMDD'), 'DD/MM/YYYY')                                  AS invc_pbls_dt /** Date D'Émission De La Facture !== 송장발행일자 ==! */
             , A.cvnt_no /** N° De Contrat !== 계약번호 ==! */
             , TO_CHAR(TO_DATE(A.cvnt_dt, 'YYYYMMDD'), 'DD/MM/YYYY')                                       AS cvnt_dt /** Date De Conclusion Du Contrat !== 계약일자 ==! */
             , A.dlvr_cond_cd /** Code De La Condition De Livraison !== 인도조건코드 ==! */
             , TO_CHAR(TO_DATE(A.bfhn_dtrm_ofdc_no, 'YYYYMMDD'), 'DD/MM/YYYY')                             AS bfhn_dtrm_ofdc_no /** N° De Lettre Officielle De La Décision Préalable !== 사전결정공문번호 ==! */
             , TO_CHAR(TO_DATE(A.bfhn_dtrm_ofdc_pbls_dt, 'YYYYMMDD'),
                       'DD/MM/YYYY')                                                                       AS bfhn_dtrm_ofdc_pbls_dt /** Date D'Émission De La Lettre Officielle De La Décision Préalable !== 사전결정공문발행일자 ==! */
             , A.ques_rspn_1_yn /** Questionréponse 1 On !== 질의응답1여부 ==! */
             , A.ques_rspn_2_yn /** Questionréponse 2 On !== 질의응답2여부 ==! */
             , A.ques_rspn_3_yn /** Questionréponse 3 On !== 질의응답3여부 ==! */
             , A.ques_rspn_4_yn /** Questionréponse 4 On !== 질의응답4여부 ==! */
             , A.ques_rspn_5_yn /** Questionréponse 5 On !== 질의응답5여부 ==! */
             , A.ques_rspn_6_yn /** Questionréponse 6 On !== 질의응답6여부 ==! */
             , A.ques_rspn_7_yn /** Questionréponse 7 On !== 질의응답7여부 ==! */
             , A.dcer_nm /** Nom Du Déclarant !== 신고인명 ==! */
             , A.dclr_plc_nm /** Nom Du Lieu De Déclaration !== 신고장소명 ==! */
             , TO_CHAR(TO_DATE(A.dclr_dt, 'YYYYMMDD'), 'DD/MM/YYYY')                                       AS dclr_dt /** Date de déclaration !== 신고일자 ==! */
             , A.cput_bss_dlng_prc /** Base De Calcul De La Valeur Transactionnelle !== 산출근거거래가격 ==! */
             , A.cput_bss_indr_amt /** Base De Calcul Du Montant Indirect !== 산출근거간접지급금액 ==! */
             , A.cput_bss_sum_amt /** Base De Calcul Du Montant Total !== 산출근거합계금액 ==! */
             , A.adcst_sale_cmis_yn /** Frais Additionnel Commission De Vente On !== 가산금판매커미션여부 ==! */
             , A.adcst_puch_cmis_yn /** Frais Additionnel Commission D'Achat On !== 가산금구매커미션여부 ==! */
             , A.adcst_brkg_amt /** Frais Additionnel Du Montant De Médiations  !== 가산금중개료금액 ==! */
             , A.adcst_ctnr_pckg_cst /** Frais Additionnel Du Coût De Colis Et De Conteneur !== 가산금용기포장비용 ==! */
             , A.adcst_mtrl_cmps_ftor_cst /** Frais Additionnel Du Coût De Composants Des Matériaux !== 가산금재료구성요소비용 ==! */
             , A.adcst_tool_otcst /** Frais Additionnel Des Autres Frais Des Outils !== 가산금공구기타비용 ==! */
             , A.adcst_cnsm_cmdt_cst /** Frais Additionnel Du Coût De La Marchandise De Consommmation !== 가산금소비물품비용 ==! */
             , A.adcst_tech_dgn_otcst /** Frais Additionnel Des Autres Frais De La Conception Technologique !== 가산금기술설계기타비용 ==! */
             , A.adcst_rylt_cst /** Frais Additionnel Du Droit De Licence !== 가산금로열티비용 ==! */
             , A.adcst_selr_rvrs_amt /** Frais Additionnel Du Montant De Profit Du Vendeur !== 가산금판매자귀속수익금액 ==! */
             , A.adcst_trnp_cst /** Frais Additionnel Du Coût De Transport !== 가산금운송비용 ==! */
             , A.adcst_imp_port_trcg_amt /** Frais Additionnel Du Montant De Fret Du Port À L'Importation !== 가산금수입항구운임료금액 ==! */
             , A.adcst_imp_port_otcst /** Frais Additionnel Des Autres Frais Du Chargement Au Port D'Importation !== 가산금수입항구적하기타비용 ==! */
             , A.adcst_prcs_cst /** Frais Additionnel Du Coût De Traitement !== 가산금처리비용 ==! */
             , A.adcst_imp_port_infee_amt /** Frais Additionnel Du Montant D'Assurance Du Port À L'Importation !== 가산금수입항구보험료금액 ==! */
             , A.adtn_cst_sum_amt /** Montant Total Des Frais Additionnels  !== 가산비용합계금액 ==! */
             , A.ddct_trnp_cst /** Coût De Transport Déduit !== 공제운송비용 ==! */
             , A.ddct_otcst /** Autres Frais Déduits !== 공제기타비용 ==! */
             , A.ddct_oths_apmt_amt /** Autres Prestations Déduites !== 공제기타부담금금액 ==! */
             , A.ddct_exp_cnty_trif_amt /** Montant Déduit Des Droits De Douanes Du Pays Exportateur !== 공제수출국가관세금액 ==! */
             , A.ddct_sum_amt /** Montant Total Déduit !== 공제합계금액 ==! */
             , A.dclr_tx_prc /** Valeur Statistique Déclarée !== 신고과세가격 ==! */
             , A.del_yn /** Suppression On !== 삭제여부 ==! */
             , A.frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , A.frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , A.last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
             , A.oths_desc /** 	Autres explications !== 기타 설명 ==! */
             , A.rstc_mtr_cn /** Spécifier la nature des restrictions, conditions ou prestations selon le cas !==  경우에 따라 제한, 조건 또는 서비스의 성격을 지정 ==! */
             , A.ques_rspn_8_yn /** Questionréponse 8 On !==  ==! */
             , A.adit_opin_cn /** Complement Observation  !==  ==! */
        FROM TB_CLRI_DED_PRC_DCLR A
        WHERE del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
          AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
    </select>


    <!--
  Consultation de la liste Sends HTTP data in text form to given HTTP request with added newline character at the end  !== Sends HTTP data in text form to given HTTP request with added newline character at the end 목록 조회 ==!
  (Kim Kiryong)
  -->
    <!-- List<ClrDedTaxVo> selectDedTaxList(ClrDedSrchVo searchVo); -->
    <select id="selectDedTaxList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedTaxVo">
        /* selectDedTaxList */
        <include refid="pagination.header"></include>
        SELECT
        A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        , A.pdls_no /** N° D'Article !== 품목번호 ==! */
        , A.tax_cd /** Code De Taxe !== 세금코드 ==! */
        , A.txbs_amt /** Montant de base d'imposition !== 과세기준금액 ==! */
        , A.tfrt_ctgy_cd /** Code de categorie du tarif !== 관세율카테고리코드 ==! */
        , NVL(A.TXRT, 0) AS TXRT
        , NVL(A.TAX_AMT, 0) AS TAX_AMT
        , NVL(A.PAY_TAX_AMT,0) AS PAY_TAX_AMT
        , A.pay_knd_cd /** Code De Type De Paiement !== 납부종류코드 ==! */
        , A.rdex_pt_cd /** Code De Type D'Exonération !== 감면유형코드 ==! */
        , A.rdex_cd /** Code d'avantage fiscaux !== 감면코드 ==! */
        , NVL(A.RDEX_AMT,0) AS RDEX_AMT
        , NVL(A.RDEX_BASE_AMT,0) AS RDEX_BASE_AMT
        , NVL(A.RDEX_TXRT,0) AS RDEX_TXRT
        , NVL((SELECT SUM(TAMT) FROM TB_COLI_NTFC WHERE REFF_NO = A.DTL_DCSH_NO AND DEL_YN ='N' AND NTFC_PT_CD IN ('G','C') AND RCVE_YN ='Y' ),0) AS PAY_TAX_TAMT
        , A.mg_dscn_aply_amt /** Montant de caution après l'exemption de la garantie !== 담보할인적용금액 ==! */
        , A.bscs_txbs_amt /** Montant De La Base Taxable Basique !== 기본과세기준금액 ==! */
        , A.bscs_txrt /** Taux d'imposition de base !== 기본세율 ==! */
        , A.bscs_tax_amt /** Montant De La Taxe Basique !== 기본세금금액 ==! */
        , A.del_yn /** Suppression On !== 삭제여부 ==! */
        , A.frst_regst_id /** Id Du Premier Enregistrant !== 최초등록자ID ==! */
        , A.frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
        , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
        , A.last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
        FROM TB_CLRI_DED_TAX A
        WHERE del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
        AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        ORDER BY A.tax_cd
        <include refid="pagination.footer"></include>
    </select>

    <select id="selectDedTaxHistList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedTaxVo">
        /* selectDedTaxHistList */
        <include refid="pagination.header"></include>
        SELECT
        A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        , A.pdls_no /** N° D'Article !== 품목번호 ==! */
        , A.tax_cd /** Code De Taxe !== 세금코드 ==! */
        , A.txbs_amt /** Montant de base d'imposition !== 과세기준금액 ==! */
        , A.tfrt_ctgy_cd /** Code de categorie du tarif !== 관세율카테고리코드 ==! */
        , NVL(A.TXRT, 0) AS TXRT
        , NVL(A.TAX_AMT, 0) AS TAX_AMT
        , NVL(A.PAY_TAX_AMT,0) AS PAY_TAX_AMT
        , A.pay_knd_cd /** Code De Type De Paiement !== 납부종류코드 ==! */
        , A.rdex_pt_cd /** Code De Type D'Exonération !== 감면유형코드 ==! */
        , A.rdex_cd /** Code d'avantage fiscaux !== 감면코드 ==! */
        , NVL(A.RDEX_AMT,0) AS RDEX_AMT
        , NVL(A.RDEX_BASE_AMT,0) AS RDEX_BASE_AMT
        , NVL(A.RDEX_TXRT,0) AS RDEX_TXRT
        , A.mg_dscn_aply_amt /** Montant de caution après l'exemption de la garantie !== 담보할인적용금액 ==! */
        , A.bscs_txbs_amt /** Montant De La Base Taxable Basique !== 기본과세기준금액 ==! */
        , A.bscs_txrt /** Taux d'imposition de base !== 기본세율 ==! */
        , A.bscs_tax_amt /** Montant De La Taxe Basique !== 기본세금금액 ==! */
        , A.del_yn /** Suppression On !== 삭제여부 ==! */
        , A.frst_regst_id /** Id Du Premier Enregistrant !== 최초등록자ID ==! */
        , A.frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
        , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
        , A.last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
        FROM TB_CLRI_DED_TAX_H A
        WHERE del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
        AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        AND A.hist_srno = (select max(hist_srno) from TB_CLRI_DED_TAX_H where dtl_dcsh_no = #{dtlDcshNo})
        ORDER BY A.tax_cd
        <include refid="pagination.footer"></include>
    </select>

    <!-- Consultation des informations détaillées DED !== DED 상세정보 조회 ==! -->
    <select id="selectDedDtlInfo" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.com.vo.ClrComDedDtlVo">
        /* selectDedDtlInfo */
        SELECT A.DTL_DCSH_NO
             , DECODE(A.DCLR_PT_CD, 'IM4', A.IMPPN_IDFY_NO
            , 'IM5', A.IMPPN_IDFY_NO
            , 'IM6', A.IMPPN_IDFY_NO, A.EXPPN_IDFY_NO) AS IDFY_NO

             , DECODE(A.DCLR_PT_CD, 'IM4', B.IMPPN_CO_NM
            , 'IM5', B.IMPPN_CO_NM
            , 'IM6', B.IMPPN_CO_NM, B.EXPPN_CO_NM)     AS CO_NM
             , (SELECT VLUT_PRCS_STTS_CD
                FROM TB_CLRI_DED_VLUT_AUDT_COMN
                WHERE DTL_DCSH_NO = #{dtlDcshNo}
                  AND LAST_YN = 'Y'
                  AND DEL_YN = 'N')                    AS VLUT_PRCS_STTS_CD
             , (SELECT PRC_EV_DGCNT
                FROM TB_CLRI_DED_VLUT_AUDT_COMN
                WHERE DTL_DCSH_NO = #{dtlDcshNo}
                  AND LAST_YN = 'Y'
                  AND DEL_YN = 'N')                    AS PRC_EV_DGCNT
        FROM TB_CLRI_DED_COMN A
           , TB_CLRI_DED_CO B
        WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
          AND A.DEL_YN = B.DEL_YN
          AND A.DTL_DCSH_NO = #{dtlDcshNo} /** Numero du DAU !== DED번호 ==! */
    </select>

    <select id="selectPayTaxTamt" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedComnDcshVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedTaxVo">
        /* selectPayTaxTamt*/
        SELECT NVL(SUM(TAMT),0) PAY_TAX_TAMT,NVL(SUM(DRWB_AMT),0) DRWB_AMT,NVL(SUM(DLPY_INST_AMT),0) DLPY_INST_AMT, NVL((SELECT NEW_SYS_YN FROM TB_CLRI_DED_COMN WHERE DTL_DCSH_NO = #{dtlDcshNo}),'Y') NEW_SYS_YN   FROM TB_COLI_NTFC A WHERE REFF_NO = #{dtlDcshNo} AND reff_no_pt_cd = '002' AND DEL_YN ='N' AND NTFC_PT_CD IN ('G','C') AND RCVE_YN ='Y'
    </select>


    <!--
  Consultation de Inserts newlines to specified file !== Inserts newlines to specified file 조회 ==!
  (Kim Kiryong)
  -->
    <!-- ClrDedVlutAudtDcshVo selectDedVlutAudtComnInfo(ClrDedSrchVo searchVo); -->
    <select id="selectDedVlutAudtComnInfo" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutAudtDcshVo">
        SELECT A.dtl_dcsh_no /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
             , A.prc_ev_dgcnt /** Nombre De Fois De L'Évaluation De Valeur !== 가격평가차수 ==! */
             , A.hist_srno /** N° de sequence de l'historique !== 이력일련번호 ==! */
             , A.vlut_prcs_stts_cd /** Code De Statut De L'Évaluation De Valeur !== 가격평가처리상태코드 ==! */
             , A.dtl_dcsh_audt_rslt_rgsr_yn /** Resultat de la vérification de la déclaration en détail enregistré ON !== 상세신고서심사결과등록여부 ==! */
             , A.last_yn /** Final On !== 최종여부 ==! */
             , A.dcld_imppn_idfy_no_tp_cd /** Code De Type De N° D'Identification De L'Importateur Déclaré !== 신고된수입자식별번호구분코드 ==! */
             , A.dcld_imppn_idfy_no /** N° D'Identification De L'Importateur Déclaré !== 신고된수입자식별번호 ==! */
             , A.dcld_txpr_idfy_no /** N° D'Identification Du Contribuable Déclaré !== 신고된납세자식별번호 ==! */
             , A.dcld_epc_cd /** Code epc declare !== 신고된EPC코드 ==! */
             , A.dcld_invc_curr_cd /** Code De Devise Déclaré De La Facture !== 신고된송장통화코드 ==! */
             , A.dcld_invc_fxrt /** Taux De Change Déclaré De La Facture !== 신고된송장환율 ==! */
             , A.dcld_invc_amt /** Montant Déclaré De Facture !== 신고된송장금액 ==! */
             , A.dcld_invc_ncy_amt /** Montant Déclaré Ncy De La Facture !== 신고된송장NCY금액 ==! */
             , A.dcld_invc_usd_amt /** Montant Déclaré De La Facture  !== 신고된송장USD금액 ==! */
             , A.dcld_cach_curr_cd /** Code De Devise Déclaré Du Fret !== 신고된운임통화코드 ==! */
             , A.dcld_cach_fxrt /** Taux De Change Déclaré Du Fret !== 신고된운임환율 ==! */
             , A.dcld_cach_amt /** Montant De Fret Déclaré !== 신고된운임금액 ==! */
             , A.dcld_cach_ncy_amt /** Montant Ncy De Fret Déclaré !== 신고된운임NCY금액 ==! */
             , A.dcld_infee_curr_cd /** Code Déclaré De Devise D'Assurance !== 신고된보험료통화코드 ==! */
             , A.dcld_infee_fxrt /** Taux D'Assurance Déclaré D'Assurance !== 신고된보험료환율 ==! */
             , A.dcld_infee_amt /** Montant d'assurance déclaré !== 신고된보험료금액 ==! */
             , A.dcld_infee_ncy_amt /** Montant Ncy D'Assurance Déclaré !== 신고된보험료NCY금액 ==! */
             , A.dcld_otcst_curr_cd /** Code De Devise Déclaré Du Montant Des Autres Frais  !== 신고된기타비용통화코드 ==! */
             , A.dcld_otcst_fxrt /** Taux De Change Déclaré Des Autres Frais !== 신고된기타비용환율 ==! */
             , A.dcld_otcst_amt /** Montant Déclaré Des Autres Frais  !== 신고된기타비용금액 ==! */
             , A.dcld_otcst_ncy_amt /** Montant Ncy Déclaré Des Autres Frais !== 신고된기타비용NCY금액 ==! */
             , A.dcld_ddct_curr_cd /** Code Déclaré De Devise Déduite  !== 신고된공제통화코드 ==! */
             , A.dcld_ddct_fxrt /** Taux De Change De La Déduction Déclaré !== 신고된공제환율 ==! */
             , A.dcld_ddct_amt /** Montant Déduit Déclaré !== 신고된공제금액 ==! */
             , A.dcld_ddct_rt /** Montant Déduit Déclaré !== 신고된공제금액 ==! */
             , A.dcld_ddct_ncy_amt /** Montant Ncy Déduit Déclaré !== 신고된공제NCY금액 ==! */
             , A.dcld_ttxbs_ncy_amt /** Montant Total Ncy Déclaré De La Base Taxable !== 신고된총과세기준NCY금액 ==! */
             , A.dcld_ttxbs_usd_amt /** Montant Total Usd Déclaré De La Base Taxable !== 신고된총과세기준USD금액 ==! */
             , A.dcld_tax_tamt /** Montant Total Déclaré Des Taxes !== 신고된세금총금액 ==! */
             , A.dcld_fvrfc_mg_amt /** Montant De Caution Valable Déclaré !== 신고된검증용담보금액 ==! */
             , A.dcld_fvrfc_mg_dscn_amt /** Montant Abattu De La Caution Valable Déclarée !== 신고된검증용담보할인금액 ==! */
             , A.dcld_fnvrfc_mg_amt /** Montant Déclaré De Caution Non-Valable !== 신고된비검증용담보금액 ==! */
             , A.dcld_oths_pcfe_amt /** Montant Déclaré Des Autres Frais Exigibles !== 신고된기타수수료금액 ==! */
             , A.dcld_pymn_tax_tamt /** Montant Total Déclaré Des Taxes Payées !== 신고된지불세금총금액 ==! */
             , A.ased_imppn_idfy_no_tp_cd /** Code De Type De N° D'Identification De L'Importateur Liquidé !== 평가된수입자식별번호구분코드 ==! */
             , A.ased_imppn_idfy_no /** N° D'Identification De L'Importateur Liquidé !== 평가된수입자식별번호 ==! */
             , A.ased_txpr_idfy_no /** Niu Liquidé !== 평가된납세자식별번호 ==! */
             , A.ased_epc_cd /** Code epc liquide !== 평가된EPC코드 ==! */
             , A.ased_invc_curr_cd /** Code De Devise Liquidé De La Facture !== 평가된송장통화코드 ==! */
             , A.ased_invc_fxrt /** Taux De Change Liquidé De La Facture !== 평가된송장환율 ==! */
             , A.ased_invc_amt /** Montant Liquidé De La Facture !== 평가된송장금액 ==! */
             , A.ased_invc_ncy_amt /** Montant Ncy Liquidé De La Facture !== 평가된송장NCY금액 ==! */
             , A.ased_invc_usd_amt /** Montant Usd Liquidé De La Facture !== 평가된송장USD금액 ==! */
             , A.ased_cach_curr_cd /** Code De Devise Liquidé Du Fret !== 평가된운임통화코드 ==! */
             , A.ased_cach_fxrt /** Taux De Change Liquidé Du Fret !== 평가된운임환율 ==! */
             , A.ased_cach_amt /** Montant Liquidé Du Fret !== 평가된운임금액 ==! */
             , A.ased_cach_ncy_amt /** Montant Ncy Liquidé Du Fret !== 평가된운임NCY금액 ==! */
             , A.ased_infee_curr_cd /** Code De Devise Liquidé De L'Assurance !== 평가된보험료통화코드 ==! */
             , A.ased_infee_fxrt /** Taux De Change Liquidé De L'Assurance !== 평가된보험료환율 ==! */
             , A.ased_infee_amt /** Montant Liquidé De L'Assurance !== 평가된보험료금액 ==! */
             , A.ased_infee_ncy_amt /** Montant Ncy Liquidé De L'Assurance !== 평가된보험료NCY금액 ==! */
             , A.ased_otcst_curr_cd /** Code De Devise Liquidé Des Autres Frais !== 평가된기타비용통화코드 ==! */
             , A.ased_otcst_fxrt /** Taux De Change Liquidé Des Autres Frais !== 평가된기타비용환율 ==! */
             , A.ased_otcst_amt /** Montant Liquidé Des Autres Frais !== 평가된기타비용금액 ==! */
             , A.ased_otcst_ncy_amt /** Montant Ncy Liquidé Des Autres Frais !== 평가된기타비용NCY금액 ==! */
             , A.ased_ddct_curr_cd /** Code De Devise Déduit Liquidé !== 평가된공제통화코드 ==! */
             , A.ased_ddct_fxrt /** Taux De Change De La Déduction Liquidé !== 평가된공제환율 ==! */
             , A.ased_ddct_amt /** Montant Liquidé  !== 평가된공제금액 ==! */
             , A.ased_ddct_rt /** Montant Liquidé  !== 평가된공제금액 ==! */
             , A.ased_ddct_ncy_amt /** Montant Cny Déduit Liquidé !== 평가된공제NCY금액 ==! */
             , A.ased_ttxbs_ncy_amt /** Montant Ncy Total Liquidé De La Base Taxable !== 평가된총과세기준NCY금액 ==! */
             , A.ased_ttxbs_usd_amt /** Montant Usd Total Liquidé De La Base Taxable !== 평가된총과세기준USD금액 ==! */
             , A.ased_tax_tamt /** Montant Total Liquidé Des Taxes !== 평가된세금총금액 ==! */
             , A.ased_fvrfc_mg_amt /** Montant Liquidé De Caution Valable  !== 평가된검증용담보금액 ==! */
             , A.ased_fvrfc_mg_dscn_amt /** Montant Liquidé Abattu De La Caution Valable  !== 평가된검증용담보할인금액 ==! */
             , A.ased_fnvrfc_mg_amt /** Montant Liquidé De La Caution Non-Valable !== 평가된비검증용담보금액 ==! */
             , A.ased_oths_pcfe_amt /** Montant Liquidé Des Autres Commissions !== 평가된기타수수료금액 ==! */
             , A.ased_pymn_tax_tamt /** Montant Total Liquidé Des Taxes Payées !== 평가된지불세금총금액 ==! */
             , A.del_yn /** Suppression On !== 삭제여부 ==! */
             , A.frst_regst_id /** Id Du Premier Enregistrant  !== 최초등록자ID ==! */
             , A.frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !== 최초등록일시 ==! */
             , A.last_chpr_id /** Id Du Modificateur Final !== 최종변경자ID ==! */
             , A.last_chg_dttm /** Date Et Heure De Modification Finale !== 최종변경일시 ==! */
        FROM TB_CLRI_DED_VLUT_AUDT_COMN A
        WHERE del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
          AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
          AND A.LAST_YN = 'Y'
        LIMIT 1
    </select>

    <!-- Consultation de la liste de la liquidation de la valeur DED !== DED 가격평가 목록 조회 ==! -->
    <select id="selectDedVlutList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutDcshVo">
        SELECT T.TP_CD
             , T.CURR_CD
             , FN_GET_PARAM('DMSC_CURR_CD') AS DMSC_CURR_CD
             , CASE
                   WHEN NVL(T.FXRT, 0) = 0 THEN (SELECT B.FXRT
                                                 FROM TB_COM_FXRT A,
                                                      TB_COM_FXRT_D B
                                                 WHERE A.RGSR_DT = B.RGSR_DT
                                                   AND A.SRNO = B.SRNO
                                                   AND A.DEL_YN = 'N'
                                                   AND B.DEL_YN = 'N'
                                                   AND T.DCLR_DT BETWEEN A.APLY_BGN_DT AND NVL(A.APLY_END_DT, '99991231')
                                                   AND B.CURR_CD = T.CURR_CD
                                                 ORDER BY A.APLY_BGN_DT DESC
                                                     FETCH FIRST 1 ROW ONLY)

                   ELSE T.FXRT
            END                             AS FXRT
             , T.DCLD_AMT
             , T.DCLD_NCY_AMT
             , T.ASED_AMT
             , T.ASED_NCY_AMT
        FROM (SELECT '1'                                                                                  AS ORDR
                   , 'INVC'                                                                               AS TP_CD
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_INVC_CURR_CD, B.DCLD_INVC_CURR_CD),
                         A.INVC_CURR_CD)                                                                  AS CURR_CD
                   , A.INVC_FXRT                                                                          AS FXRT
                   , NVL(B.DCLD_INVC_AMT,0)         AS DCLD_AMT
                   , NVL(B.DCLD_INVC_NCY_AMT,0)     AS DCLD_NCY_AMT
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INVC_AMT, B.ASED_INVC_AMT), 0)         AS ASED_AMT
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INVC_NCY_AMT, B.ASED_INVC_NCY_AMT),
                         0)                                                                               AS ASED_NCY_AMT
                   , C.DCLR_DT

              FROM TB_CLRI_DED_VLUT_COMN A
                 , TB_CLRI_DED_VLUT_AUDT_COMN B
                 , TB_CLRI_DED_COMN C
              WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
                AND B.LAST_YN = 'Y'
                AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND A.DEL_YN = 'N'
                AND B.DEL_YN = 'N'
                AND C.DEL_YN = 'N'
                AND A.DTL_DCSH_NO = #{dtlDcshNo}

              UNION ALL

              SELECT '2' AS ORDR
                   , 'CACH'
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_CACH_CURR_CD, B.DCLD_CACH_CURR_CD), A.INVC_CURR_CD)
                   , DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_CACH_FXRT, B.DCLD_CACH_FXRT)
                   , NVL(B.DCLD_CACH_AMT, 0)
                   , NVL(B.DCLD_CACH_NCY_AMT, 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_CACH_AMT, B.ASED_CACH_AMT), 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_CACH_NCY_AMT, B.ASED_CACH_NCY_AMT), 0)
                   , C.DCLR_DT

              FROM TB_CLRI_DED_VLUT_COMN A
                 , TB_CLRI_DED_VLUT_AUDT_COMN B
                 , TB_CLRI_DED_COMN C
              WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
                AND B.LAST_YN = 'Y'
                AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND A.DEL_YN = 'N'
                AND B.DEL_YN = 'N'
                AND C.DEL_YN = 'N'
                AND A.DTL_DCSH_NO = #{dtlDcshNo}

              UNION ALL

              SELECT '3' AS ORDR
                   , 'INFEE'
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_INFEE_CURR_CD, B.DCLD_INFEE_CURR_CD), A.INVC_CURR_CD)
                   , DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_INFEE_FXRT, B.DCLD_INFEE_FXRT)
                   , NVL(B.DCLD_INFEE_AMT, 0)
                   , NVL(B.DCLD_INFEE_NCY_AMT, 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INFEE_AMT, B.ASED_INFEE_AMT), 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INFEE_NCY_AMT, B.ASED_INFEE_NCY_AMT), 0)
                   , C.DCLR_DT

              FROM TB_CLRI_DED_VLUT_COMN A
                 , TB_CLRI_DED_VLUT_AUDT_COMN B
                 , TB_CLRI_DED_COMN C
              WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
                AND B.LAST_YN = 'Y'
                AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND A.DEL_YN = 'N'
                AND B.DEL_YN = 'N'
                AND C.DEL_YN = 'N'
                AND A.DTL_DCSH_NO = #{dtlDcshNo}

              UNION ALL

              SELECT '4' AS ORDR
                   , 'OTCST'
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_OTCST_CURR_CD, B.DCLD_OTCST_CURR_CD), A.INVC_CURR_CD)
                   , DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_OTCST_FXRT, B.DCLD_OTCST_FXRT)
                   , NVL(B.DCLD_OTCST_AMT, 0)
                   , NVL(B.DCLD_OTCST_NCY_AMT, 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_OTCST_AMT, B.ASED_OTCST_AMT), 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_OTCST_NCY_AMT, B.ASED_OTCST_NCY_AMT), 0)
                   , C.DCLR_DT

              FROM TB_CLRI_DED_VLUT_COMN A
                 , TB_CLRI_DED_VLUT_AUDT_COMN B
                 , TB_CLRI_DED_COMN C
              WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
                AND B.LAST_YN = 'Y'
                AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND A.DEL_YN = 'N'
                AND B.DEL_YN = 'N'
                AND C.DEL_YN = 'N'
                AND A.DTL_DCSH_NO = #{dtlDcshNo}

              UNION ALL

              SELECT '5' AS ORDR
                   , 'DDCT'
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_DDCT_CURR_CD, B.DCLD_DDCT_CURR_CD), A.INVC_CURR_CD)
                   , DECODE(B.VLUT_PRCS_STTS_CD, 'D08', B.ASED_DDCT_FXRT, B.DCLD_DDCT_FXRT)
                   , NVL(B.DCLD_DDCT_AMT, 0)
                   , NVL(B.DCLD_DDCT_NCY_AMT, 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_DDCT_AMT, B.ASED_DDCT_AMT), 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_DDCT_NCY_AMT, B.ASED_DDCT_NCY_AMT), 0)
                   , C.DCLR_DT

              FROM TB_CLRI_DED_VLUT_COMN A
                 , TB_CLRI_DED_VLUT_AUDT_COMN B
                 , TB_CLRI_DED_COMN C
              WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
                AND B.LAST_YN = 'Y'
                AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND A.DEL_YN = 'N'
                AND B.DEL_YN = 'N'
                AND C.DEL_YN = 'N'
                AND A.DTL_DCSH_NO = #{dtlDcshNo}

              UNION ALL

              SELECT '6' AS ORDR
                   , 'TOTAL'
                   , A.INVC_CURR_CD
                   , A.INVC_FXRT
                   , NVL(B.DCLD_INVC_AMT, 0) +
                     NVL(B.DCLD_CACH_AMT, 0) +
                     NVL(B.DCLD_INFEE_AMT, 0) +
                     NVL(B.DCLD_OTCST_AMT, 0) -
                     NVL(B.DCLD_DDCT_AMT, 0)
                   , NVL(B.DCLD_INVC_NCY_AMT, 0) +
                     NVL(B.DCLD_CACH_NCY_AMT, 0) +
                     NVL(B.DCLD_INFEE_NCY_AMT, 0) +
                     NVL(B.DCLD_OTCST_NCY_AMT, 0) -
                     NVL(B.DCLD_DDCT_NCY_AMT, 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INVC_AMT, B.ASED_INVC_AMT), 0) +
                     NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_CACH_AMT, B.ASED_CACH_AMT), 0) +
                     NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INFEE_AMT, B.ASED_INFEE_AMT), 0) +
                     NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_OTCST_AMT, B.ASED_OTCST_AMT), 0) -
                     NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_DDCT_AMT, B.ASED_DDCT_AMT), 0)
                   , NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INVC_NCY_AMT, B.ASED_INVC_NCY_AMT), 0) +
                     NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_CACH_NCY_AMT, B.ASED_CACH_NCY_AMT), 0) +
                     NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INFEE_NCY_AMT, B.ASED_INFEE_NCY_AMT), 0) +
                     NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_OTCST_NCY_AMT, B.ASED_OTCST_NCY_AMT), 0) -
                     NVL(DECODE(B.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_DDCT_NCY_AMT, B.ASED_DDCT_NCY_AMT), 0)
                   , C.DCLR_DT
              FROM TB_CLRI_DED_VLUT_COMN A
                 , TB_CLRI_DED_VLUT_AUDT_COMN B
                 , TB_CLRI_DED_COMN C
              WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
                AND B.LAST_YN = 'Y'
                AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND A.DEL_YN = 'N'
                AND B.DEL_YN = 'N'
                AND C.DEL_YN = 'N'
                AND A.DTL_DCSH_NO = #{dtlDcshNo}) T
        ORDER BY ORDR ASC


    </select>

    <!-- Consultation de la liste des articles de la liquidation de la valeur DED !== DED 가격평가 품목 목록 조회 ==!  -->
    <select id="selectDedVlutAudtPdlsList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutAudtPdlsDcshVo">
        /* selectDedVlutAudtPdlsList */
        SELECT A.DTL_DCSH_NO
             , A.PDLS_NO
             , A.PDLS_NM
             , A.DLNG_PDLS_NM
             , A.REGM_RQST_CD
             , A.REGM_PN
             , (SELECT NVL(B.VLTX_RT_CN, B.SPTX_RT_CN)
                FROM TB_CLRI_PDLS_TFRT B
                WHERE TO_CHAR(SYSDATE, 'YYYYMMDD') BETWEEN B.APLY_STRT_DT AND B.APLY_END_DT
                  AND B.TFRT_CTGY_CD = 'GL' /* 기본세율 */
                  AND B.TAX_CD = 'DDI' /* 수입액 */
                  AND B.HS_CD = D.DCLD_HS_CD
                  AND B.USE_YN = 'Y'
                  AND B.DEL_YN = 'N')    AS TXRT
             , A.PRC_DTRM_MEAN_CD
             , D.DCLD_HS_CD                         AS DCLD_HS_CD
             , D.DCLD_PRVL_CD                       AS DCLD_PRVL_CD
             , D.DCLD_PDLS_TXBS_NCY_AMT              AS DCLD_PDLS_TXBS_NCY_AMT
             , D.DCLD_PDLS_TXBS_USD_AMT              AS DCLD_PDLS_TXBS_USD_AMT
             , D.DCLD_ORCY_CNTY_CD                   AS DCLD_ORCY_CNTY_CD
             , D.DCLD_APC_CD                         AS DCLD_APC_CD
             , D.DCLD_PDLS_TTWG                      AS DCLD_PDLS_TTWG
             , D.DCLD_PDLS_NTWG                      AS DCLD_PDLS_NTWG
             , D.DCLD_PDLS_INFEE_AMT                 AS DCLD_PDLS_INFEE_AMT
             , D.DCLD_PDLS_INFEE_NCY_AMT             AS DCLD_PDLS_INFEE_NCY_AMT
             , D.DCLD_PDLS_OTCST_AMT                 AS DCLD_PDLS_OTCST_AMT
             , D.DCLD_PDLS_OTCST_NCY_AMT             AS DCLD_PDLS_OTCST_NCY_AMT
             , D.DCLD_PDLS_DDCT_AMT                  AS DCLD_PDLS_DDCT_AMT
             , D.DCLD_PDLS_DDCT_NCY_AMT              AS DCLD_PDLS_DDCT_NCY_AMT
             , D.DCLD_PDLS_CACH_AMT                  AS DCLD_PDLS_CACH_AMT
             , D.DCLD_PDLS_CACH_NCY_AMT              AS DCLD_PDLS_CACH_NCY_AMT
             , D.DCLD_PDLS_INVC_CURR_CD              AS DCLD_PDLS_INVC_CURR_CD
             , D.DCLD_PDLS_INVC_AMT                  AS DCLD_PDLS_INVC_AMT
             , D.DCLD_PDLS_INVC_NCY_AMT              AS DCLD_PDLS_INVC_NCY_AMT
             , D.DCLD_PRC_DTRM_MEAN_CD               AS DCLD_PRC_DTRM_MEAN_CD
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_HS_CD, D.ASED_HS_CD)                           AS ASED_HS_CD
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PRVL_CD, D.ASED_PRVL_CD)                       AS ASED_PRVL_CD
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_TXBS_NCY_AMT,
                      D.ASED_PDLS_TXBS_NCY_AMT)                                                         AS ASED_PDLS_TXBS_NCY_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_TXBS_USD_AMT,
                      D.ASED_PDLS_TXBS_USD_AMT)                                                         AS ASED_PDLS_TXBS_USD_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_ORCY_CNTY_CD,
                      D.ASED_ORCY_CNTY_CD)                                                              AS ASED_ORCY_CNTY_CD
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_APC_CD, D.ASED_APC_CD)                         AS ASED_APC_CD
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_TTWG,
                      D.ASED_PDLS_TTWG)                                                                 AS ASED_PDLS_TTWG
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_NTWG,
                      D.ASED_PDLS_NTWG)                                                                 AS ASED_PDLS_NTWG
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_INFEE_AMT,
                      D.ASED_PDLS_INFEE_AMT)                                                            AS ASED_PDLS_INFEE_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_INVC_NCY_AMT,
                      D.ASED_PDLS_INFEE_NCY_AMT)                                                        AS ASED_PDLS_INFEE_NCY_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_OTCST_AMT,
                      D.ASED_PDLS_OTCST_AMT)                                                            AS ASED_PDLS_OTCST_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_OTCST_NCY_AMT,
                      D.ASED_PDLS_OTCST_NCY_AMT)                                                        AS ASED_PDLS_OTCST_NCY_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_DDCT_AMT,
                      D.ASED_PDLS_DDCT_AMT)                                                             AS ASED_PDLS_DDCT_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_DDCT_NCY_AMT,
                      D.ASED_PDLS_DDCT_NCY_AMT)                                                         AS ASED_PDLS_DDCT_NCY_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_CACH_AMT,
                      D.ASED_PDLS_CACH_AMT)                                                             AS ASED_PDLS_CACH_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_CACH_NCY_AMT,
                      D.ASED_PDLS_CACH_NCY_AMT)                                                         AS ASED_PDLS_CACH_NCY_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_INVC_CURR_CD,
                      D.ASED_PDLS_INVC_CURR_CD)                                                         AS ASED_PDLS_INVC_CURR_CD
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_INVC_AMT,
                      D.ASED_PDLS_INVC_AMT)                                                             AS ASED_PDLS_INVC_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PDLS_INVC_NCY_AMT,
                      D.ASED_PDLS_INVC_NCY_AMT)                                                         AS ASED_PDLS_INVC_NCY_AMT
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_PRC_DTRM_MEAN_CD,
                      D.ASED_PRC_DTRM_MEAN_CD)                                                          AS ASED_PRC_DTRM_MEAN_CD
             , NVL((SELECT 'Y'
                    FROM TB_CLRI_HS_PRFL
                    WHERE DEL_YN = 'N'
                      AND USE_YN = 'Y'
                      AND HS_UPR_CLSF_CD = 'V'
                      AND HS_LWPR_CLSF_CD = 'V'
                      AND E.DCLR_DT BETWEEN APLY_STRT_DT AND APLY_END_DT
                      AND HS_CD = D.DCLD_HS_CD),
                   'N')                                                                                 AS DCLD_HS_VHCL_YN
             , NVL((SELECT 'Y'
                    FROM TB_CLRI_HS_PRFL
                    WHERE DEL_YN = 'N'
                      AND USE_YN = 'Y'
                      AND HS_UPR_CLSF_CD = 'V'
                      AND HS_LWPR_CLSF_CD = 'V'
                      AND E.DCLR_DT BETWEEN APLY_STRT_DT AND APLY_END_DT
                      AND HS_CD = DECODE(C.VLUT_PRCS_STTS_CD, 'D09', D.DCLD_HS_CD, D.ASED_HS_CD)),
                   'N')                                                                                 AS ASED_HS_VHCL_YN

        FROM TB_CLRI_DED_COMN E
           ,TB_CLRI_DED_PDLS A
           , TB_CLRI_DED_VLUT_PDLS B
           , TB_CLRI_DED_VLUT_AUDT_COMN C
           , TB_CLRI_DED_VLUT_AUDT_PDLS D
        WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
          AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
          AND A.DTL_DCSH_NO = D.DTL_DCSH_NO
          AND A.PDLS_NO = B.PDLS_NO
          AND A.PDLS_NO = D.PDLS_NO
          AND A.DTL_DCSH_NO = E.DTL_DCSH_NO
          AND C.LAST_YN = 'Y'
          AND C.PRC_EV_DGCNT = D.PRC_EV_DGCNT
          AND A.DEL_YN = 'N'
          AND B.DEL_YN = 'N'
          AND C.DEL_YN = 'N'
          AND D.DEL_YN = 'N'
          AND A.DTL_DCSH_NO = #{dtlDcshNo}
        ORDER BY TO_NUMBER(A.PDLS_NO)

    </select>

    <!-- Consultation de la liste de comparaison des articles de la liquidation de la valeur !== 가격평가 품목 비교 목록 조회 ==! -->
    <select id="selectVlutAudtPdlsCmprList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutAudtPdlsVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutAudtPdlsCmprVo">
        /* selectVlutAudtPdlsCmprList */
        SELECT *
        FROM
        (
        SELECT
        A.PDLS_NO
        , 'D' AS TP_CD
        , C.DCLD_HS_CD AS HS_CD
        , C.DCLD_ORCY_CNTY_CD AS ORCY_CNTY_CD
        , C.DCLD_APC_CD AS APC_CD
        , C.DCLD_PRVL_CD AS PRVL_CD
        , C.DCLD_PDLS_TXBS_NCY_AMT AS PDLS_TXBS_NCY_AMT
        , C.DCLD_PDLS_INVC_AMT AS PDLS_INVC_AMT
        , C.DCLD_PDLS_TTWG AS PDLS_TTWG
        , C.DCLD_PDLS_NTWG AS PDLS_NTWG
        , ( SELECT SUM(PAY_TAX_AMT) AS PAY_TAX_AMT
            FROM TB_CLRI_DED_TAX
            WHERE DTL_DCSH_NO = A.DTL_DCSH_NO
            AND PDLS_NO = A.PDLS_NO
            AND DEL_YN = 'N'
           ) AS PAY_TAX_AMT
        FROM TB_CLRI_DED_COMN E
        , TB_CLRI_DED_PDLS A
        , TB_CLRI_DED_VLUT_PDLS B
        , TB_CLRI_DED_VLUT_AUDT_PDLS C
        , TB_CLRI_DED_VLUT_AUDT_COMN D
        WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
        AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
        AND A.DTL_DCSH_NO = D.DTL_DCSH_NO
        AND A.PDLS_NO = B.PDLS_NO
        AND A.PDLS_NO = C.PDLS_NO
        AND C.PRC_EV_DGCNT = D.PRC_EV_DGCNT
        AND A.DTL_DCSH_NO = E.DTL_DCSH_NO
        AND D.LAST_YN = 'Y'
        AND A.DEL_YN = 'N'
        AND B.DEL_YN = 'N'
        AND C.DEL_YN = 'N'
        AND D.DEL_YN = 'N'
        AND E.DEL_YN = 'N'
        AND A.DTL_DCSH_NO = #{dtlDcshNo}
        <if test="pdlsNo != null and pdlsNo != ''">
            AND A.PDLS_NO = #{pdlsNo}
        </if>
        UNION ALL
        SELECT
        A.PDLS_NO
        , 'L' AS TP_CD
        , DECODE(D.VLUT_PRCS_STTS_CD, 'D09', C.DCLD_HS_CD, C.ASED_HS_CD)
        , DECODE(D.VLUT_PRCS_STTS_CD, 'D09', C.DCLD_ORCY_CNTY_CD, C.ASED_ORCY_CNTY_CD)
        , DECODE(D.VLUT_PRCS_STTS_CD, 'D09', C.DCLD_APC_CD, C.ASED_APC_CD)
        , DECODE(D.VLUT_PRCS_STTS_CD, 'D09', C.DCLD_PRVL_CD, C.ASED_PRVL_CD)
        , DECODE(D.VLUT_PRCS_STTS_CD, 'D09', C.DCLD_PDLS_TXBS_NCY_AMT, C.ASED_PDLS_TXBS_NCY_AMT)
        , DECODE(D.VLUT_PRCS_STTS_CD, 'D09', C.DCLD_PDLS_INVC_AMT, C.ASED_PDLS_INVC_AMT)
        , DECODE(D.VLUT_PRCS_STTS_CD, 'D09', C.DCLD_PDLS_TTWG, C.ASED_PDLS_TTWG)
        , DECODE(D.VLUT_PRCS_STTS_CD, 'D09', C.DCLD_PDLS_NTWG, C.ASED_PDLS_NTWG)
        , ( SELECT SUM(PAY_TAX_AMT) AS PAY_TAX_AMT
            FROM TB_CLRI_DED_VLUT_AUDT_TAX
            WHERE DTL_DCSH_NO = A.DTL_DCSH_NO
            AND PDLS_NO = A.PDLS_NO
            AND DEL_YN = 'N') AS ASED_TAX_AMT
        FROM
        TB_CLRI_DED_PDLS A
        , TB_CLRI_DED_VLUT_PDLS B
        , TB_CLRI_DED_VLUT_AUDT_PDLS C
        , TB_CLRI_DED_VLUT_AUDT_COMN D
        WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
        AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
        AND A.DTL_DCSH_NO = D.DTL_DCSH_NO
        AND A.PDLS_NO = B.PDLS_NO
        AND A.PDLS_NO = C.PDLS_NO
        AND C.PRC_EV_DGCNT = D.PRC_EV_DGCNT
        AND D.LAST_YN = 'Y'
        AND A.DEL_YN = 'N'
        AND B.DEL_YN = 'N'
        AND C.DEL_YN = 'N'
        AND D.DEL_YN = 'N'
        AND A.DTL_DCSH_NO = #{dtlDcshNo}
        <if test="pdlsNo != null and pdlsNo != ''">
            AND A.PDLS_NO = #{pdlsNo}
        </if>
        )
        ORDER BY TO_NUMBER(PDLS_NO), TP_CD
    </select>

    <!-- Consultation de la liste de comparaision des modèles de la liquidation de la valeur !== 가격평가 모델규격 비교 목록 조회 ==! -->
    <select id="selectVlutMdlStszCmprList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutAudtPdlsVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutAudtMdlStszCmprVo">
        SELECT *
        FROM (SELECT A.PDLS_NO
                   , A.MDL_STSZ_NO
                   , 'D' AS TP_CD
                   , A.MDL_STSZ_NM
                   , A.INGR_NM
                   , B.DCLD_QTY             AS QTY
                   , B.DCLD_QTY_UT_CD AS QTY_UT_CD
                   , B.DCLD_UT_PRC       AS UT_PRC
                   , B.DCLD_INVC_PRC   AS INVC_AMT
              FROM TB_CLRI_DED_MDL_STSZ A
                 , TB_CLRI_DED_VLUT_AUDT_MDL_STSZ B
                 , TB_CLRI_DED_VLUT_AUDT_COMN C
              WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
                AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND A.PDLS_NO = B.PDLS_NO
                AND A.MDL_STSZ_NO = B.MDL_STSZ_NO
                AND A.DEL_YN = 'N'
                AND B.DEL_YN = 'N'
                AND C.DEL_YN = 'N'
                AND C.LAST_YN = 'Y'
                AND B.PRC_EV_DGCNT = C.PRC_EV_DGCNT
                AND A.DTL_DCSH_NO = #{dtlDcshNo}
                AND A.PDLS_NO = #{pdlsNo}
              UNION ALL
              SELECT A.PDLS_NO
                   , A.MDL_STSZ_NO
                   , 'L'                                                                    AS TP_CD
                   , A.MDL_STSZ_NM
                   , A.INGR_NM
                   , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_QTY, B.ASED_QTY)             AS QTY
                   , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_QTY_UT_CD, B.ASED_QTY_UT_CD) AS QTY_UT_CD
                   , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_UT_PRC, B.ASED_UT_PRC)       AS UT_PRC
                   , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INVC_PRC, B.ASED_INVC_PRC)   AS INVC_PRC
              FROM TB_CLRI_DED_MDL_STSZ A
                 , TB_CLRI_DED_VLUT_AUDT_MDL_STSZ B
                 , TB_CLRI_DED_VLUT_AUDT_COMN C
              WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
                AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND A.PDLS_NO = B.PDLS_NO
                AND A.MDL_STSZ_NO = B.MDL_STSZ_NO
                AND A.DEL_YN = 'N'
                AND B.DEL_YN = 'N'
                AND C.DEL_YN = 'N'
                AND C.LAST_YN = 'Y'
                AND B.PRC_EV_DGCNT = C.PRC_EV_DGCNT
                AND A.DTL_DCSH_NO = #{dtlDcshNo}
                AND A.PDLS_NO = #{pdlsNo})
        ORDER BY TO_NUMBER(PDLS_NO), TO_NUMBER(MDL_STSZ_NO), TP_CD
    </select>

    <!-- Consultation de la liste des modèles de la liquidation de DED !== DED 가격평가 모델규격 목록 조회 ==! -->
    <select id="selectDedVlutMdlStszList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutAudtPdlsVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedVlutAudtMdlStszDcshVo">
        /* ClriCom_selectSadVlutMdlStszList */
        SELECT A.DTL_DCSH_NO
             , A.PDLS_NO
             , A.MDL_STSZ_NO
             , A.MDL_STSZ_NM
             , A.INGR_NM
             , B.DCLD_QTY             AS DCLD_QTY
             , B.DCLD_QTY_UT_CD       AS DCLD_QTY_UT_CD
             , B.DCLD_UT_PRC          AS DCLD_UT_PRC
             , B.DCLD_INVC_PRC        AS DCLD_INVC_PRC
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_QTY, B.ASED_QTY)             AS ASED_QTY
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_QTY_UT_CD, B.ASED_QTY_UT_CD) AS ASED_QTY_UT_CD
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_UT_PRC, B.ASED_UT_PRC)       AS ASED_UT_PRC
             , DECODE(C.VLUT_PRCS_STTS_CD, 'D09', B.DCLD_INVC_PRC, B.ASED_INVC_PRC)   AS ASED_INVC_PRC
             , B.PRC_EV_CN
        FROM TB_CLRI_DED_MDL_STSZ A
           , TB_CLRI_DED_VLUT_AUDT_MDL_STSZ B
           , TB_CLRI_DED_VLUT_AUDT_COMN C
        WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO
          AND A.PDLS_NO = B.PDLS_NO
          AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
          AND A.MDL_STSZ_NO = B.MDL_STSZ_NO
          AND B.PRC_EV_DGCNT = C.PRC_EV_DGCNT
          AND C.LAST_YN = 'Y'
          AND A.DEL_YN = 'N'
          AND B.DEL_YN = 'N'
          AND C.DEL_YN = 'N'
          AND A.DTL_DCSH_NO = #{dtlDcshNo}
          AND A.PDLS_NO = #{pdlsNo}
        ORDER BY TO_NUMBER(A.PDLS_NO), TO_NUMBER(A.MDL_STSZ_NO)

    </select>

    <!-- DED 일반정보 조회   -->
    <select id="selectDedGnrlInfo" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedSrchVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedGnrlVo">
        /* ClriCom_selectSadGnrlInfo */
        SELECT A.DTL_DCSH_NO
             , A.REFF_NO
             , A.mdfy_dgcnt
             , TO_CHAR(TO_DATE(A.DCLR_DT, 'YYYYMMDD'), 'DD/MM/YYYY')                                                 AS DCLR_DT
             , A.EPC_CD
             , A.DCLR_CSTM_CD
             , A.EXPPN_IDFY_NO_TP_CD
             , A.EXPPN_IDFY_NO
             , A.selc_rslt_cd
             , C.EXPPN_CO_NM
             , C.EXPPN_ADDR
             , A.IMPPN_IDFY_NO_TP_CD
             , A.IMPPN_IDFY_NO
             , C.IMPPN_CO_NM
             , C.IMPPN_ADDR
             , A.TXPR_IDFY_NO
             , C.TXPR_CO_NM
             , C.TXPR_ADDR
             , C.TXPR_TLPH_NO
             , C.TXPR_EML
             , A.DCER_CD
             , (SELECT NIF
                FROM TB_COM_CO_DCLR_CD
                WHERE CO_DCLR_CD = A.DCER_CD
                  AND CO_DCLR_TP_CD = 'H')                                                                           AS DCER_NIF
             , C.DCER_CO_NM
             , C.DCER_ADDR
             , C.BFCY_CO_NM /** Nom De L''Entreprise Du Bénéficiaire */
             , C.BFCY_ADDR /** Adresse Benef */
             , B.INVC_CURR_CD
             , B.INVC_FXRT
             , B.TTXBS_NCY_AMT
             , B.TTXBS_USD_AMT
             , A.DCLR_PT_CD
             , A.CSCL_PLN_CD
             , A.DCSH_FM_CD
             , A.CNCL_DCLR_RCPN_YN
             , A.ATR_DCLR_RCPN_YN
             , A.CSCL_PSTP_YN
             , A.DPUT_YN
             , A.RLSE_YN
             , A.ACPT_YN
             , A.PRVI_DCLR_APRE_YN
             , A.PRCS_STTS_CD
             , A.PDLS_GCNT
             , A.PCKG_TGCNT
             , A.AL_NTWG
             , A.AL_TTWG
             , A.DSTN_CNTY_CD
             , A.TRNP_METH_KND_CD
             , TO_CHAR(TO_DATE(A.EXP_FFMN_XPIR_DT, 'YYYYMMDD'), 'DD/MM/YYYY')                                        AS EXP_FFMN_XPIR_DT
             ,(SELECT SUM(FLOOR(PAY_TAX_AMT)) FROM  (SELECT NVL(SUM(PAY_TAX_AMT), 0) AS PAY_TAX_AMT
                FROM TB_CLRI_DED_VLUT_AUDT_TAX
                WHERE DEL_YN = 'N'
                  AND PAY_KND_CD IN ('1', '2')
                  AND DTL_DCSH_NO = A.DTL_DCSH_NO
                  AND PRC_EV_DGCNT IN (SELECT MAX(PRC_EV_DGCNT)
                                       FROM TB_CLRI_DED_VLUT_AUDT_TAX
                                       WHERE DEL_YN = 'N'
                                         AND DTL_DCSH_NO = A.DTL_DCSH_NO)
                  GROUP BY TAX_CD
                )) AS SUM_PAY_TAX_AMT
             , A.REFF_NO
             , A.CSM_CNTY_CD
             , FN_GET_CNTY_NM(A.CSM_CNTY_CD, #{langCd})                                                              AS CSM_CNTY_NM
             , A.CAG_MGMT_NO
             , A.CMDT_STGE_LOCT_CD
             , A.DCRD_YN
             , A.DIVD_CSCL_TP_CD
             , TO_CHAR(TO_DATE(A.ARVL_DT, 'YYYYMMDD'), 'DD/MM/YYYY')                                                 AS ARVL_DT
             , (SELECT ORGN_NM
                FROM TB_POTI_ORGN
                WHERE DEL_YN = 'N'
                  AND ORGN_CD = A.DCLR_CSTM_CD
                  AND ROWNUM = 1)                                                                                    AS DCLR_CSTM_NM
             , (SELECT ORGN_NM
                FROM TB_POTI_ORGN
                WHERE DEL_YN = 'N'
                  AND ORGN_CD = A.DEPT_CD
                  AND ROWNUM = 1)                                                                                    AS DEPT_NM
             , (SELECT ORGN_ENG_NM
                FROM TB_POTI_ORGN
                WHERE DEL_YN = 'N'
                  AND ORGN_CD = A.DCLR_CSTM_CD
                  AND ROWNUM = 1)                                                                                    AS DCLR_CSTM_NM_ENG
             , (SELECT ORGN_ENG_NM
                FROM TB_POTI_ORGN
                WHERE DEL_YN = 'N'
                  AND ORGN_CD = A.DEPT_CD
                  AND ROWNUM = 1)                                                                                    AS DEPT_NM_ENG
             , NVL(A.CSOR_APRV_RSOF_YN, 'N')                                                                         AS CSOR_APRV_RSOF_YN
             , NVL(D.audt_cmpl_aprv_yn, 'N') AS DPHD_APRV_RSOF_YN
             , NVL(D.aprv_rsn_cn, '') AS aprv_rsn_cn
        FROM TB_CLRI_DED_COMN A
           , TB_CLRI_DED_VLUT_COMN B
           , TB_CLRI_DED_CO C
           , TB_CLRI_DED_ADIT_ATRB D
        WHERE A.DTL_DCSH_NO = #{dtlDcshNo}
          AND A.DTL_DCSH_NO = B.DTL_DCSH_NO
          AND A.DTL_DCSH_NO = C.DTL_DCSH_NO
          AND A.DEL_YN = 'N'
          AND B.DEL_YN = 'N'
          AND C.DEL_YN = 'N'
          AND D.DTL_DCSH_NO(+) = A.DTL_DCSH_NO
          AND D.DEL_YN(+) = 'N'
    </select>

    <!--
    Vérifier l'existence de l'enlèvement des marchandises par le numéro de la DED concernée
    !== 해당 Ded 번호로 화물반출 존재여부 확인 ==!
    -->
    <select id="selectDedComnExitYn" resultType="string" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedGnrlVo">
        SELECT DECODE(NVL(SUM(DECODE(X.RELA_NO, A.DTL_DCSH_NO, 1, 0)), 0), 0, 'N', 'Y') AS EXIT_YN
        FROM TB_CLRI_DED_COMN A
           , TB_CARI_RLBR X /* CARI_반출입 */
        WHERE A.DTL_DCSH_NO = #{dtlDcshNo}
          AND X.CAG_MGMT_NO = A.CAG_MGMT_NO /* 화물관리번호 */
          AND X.ibobz_cd = DECODE(A.DCRD_YN, 'Y', X.ibobz_cd, A.CMDT_STGE_LOCT_CD) /* 보세창고코드 */
          AND X.RLBR_TP_CD = 'O' /* 반출입구분코드: O|반출 */
          AND X.RLBR_PT_CD IN ('50', '51', '52', '60', '61') /* 반출입유형코드 : '50', '51', '52', '60', '61' */
          AND X.DEL_YN = 'N'
          AND EXISTS(SELECT 1
                     FROM TB_CARI_CAG_PRCS_BRKD
                     WHERE DEL_YN = 'N'
                       AND PRCS_STTS_CD IN ('D08', 'D10')
                       AND CAG_RQST_NO = X.RLBR_RQST_NO)

        /* 처리상테 : 'D08', 'D10' (처리상태가 승인 혹은 자동승인인 건만 조회)*/
    </select>

    <!-- Consultation de la liste de code spécifique des marchandises de perfectionnement !== 가공물품분류특별코드 목록 조회 ==! -->
    <select id="selectColMgMgmtList" parameterType="alpass.ipt.clr.pfp.pfp.vo.ClrMfcmClsfSpelCdVo"
            resultType="alpass.ipt.clr.pfp.pfp.vo.ClrMfcmClsfSpelCdVo">
        /* ClreDpsRgsr_selectColiMgMgmtList */
        <include refid="pagination.header"></include>
        SELECT
        A.MAFC_CO_NIF /** N° de RCCM de l'entreprise de transformation !== 가공업체사업자등록번호 ==! */
        , A.CMDT_CLSF_SPEL_CD /** Code specifique de classification de marchandise !== 물품분류특별코드 ==! */
        , A.CMDT_CLSF_SPEL_CD_NM /** Nom du code specifique de classification de marchandise !== 물품분류특별코드명 ==! */
        , A.MAFC_CMDT_TP_CD /** Code de type de produit transforme !== 가공물품구분코드 ==! */
        , A.HS_CD /** Code SH !== HS코드 ==! */
        , A.QTY_UT_CD /** Code de l'unite de quantite !== 수량단위코드 ==! */
        , A.USE_YN /** Utilise ON !== 사용여부 ==! */
        , A.DEL_YN /** Suppression ON !== 삭제여부 ==! */
        , A.FRST_REGST_ID /** ID du premier enregistrant !== 최초등록자ID ==! */
        , A.FRST_RGSR_DTTM /** Date et heure de premier enregistrement !== 최초등록일시 ==! */
        , A.LAST_CHPR_ID /** ID du modificateur final !== 최종변경자ID ==! */
        , A.LAST_CHG_DTTM /** Date et heure de modification finale !== 최종변경일시 ==! */

        FROM TB_CLRI_MFCM_CLSF_SPEL_CD A
        WHERE DEL_YN = 'N'
        AND MAFC_CO_NIF = #{mafcCoNif}
        <if test="mafcCmdtTpCdList != null and mafcCmdtTpCdList.size > 0">
            AND MAFC_CMDT_TP_CD IN
            <foreach item="item" index="index" collection="mafcCmdtTpCdList" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="hsCd != null and hsCd != ''">
            AND HS_CD = #{hsCd}
        </if>
        <if test="cmdtClsfSpelCd != null and cmdtClsfSpelCd != ''">
            AND CMDT_CLSF_SPEL_CD = #{cmdtClsfSpelCd}
        </if>
        <if test="cmdtClsfSpelCdNm != null and cmdtClsfSpelCdNm != ''">
            AND CMDT_CLSF_SPEL_CD_NM LIKE #{cmdtClsfSpelCdNm} || '%'
        </if>
        <include refid="pagination.footer"></include>
    </select>

    <!-- 물품분류특별코드 (멀티선택) 조회 -->
    <select id="selectCmdtClsfSpelCdMltList" parameterType="alpass.ipt.clr.pfp.pfp.vo.ClrMfcmClsfSpelCdVo"
            resultType="alpass.ipt.clr.pfp.pfp.vo.ClrMfcmClsfSpelCdVo">
        /* ClrDcshDedSrchService_selectCmdtClsfSpelCdMltList */
        <include refid="pagination.header"></include>
        SELECT
        A.MAFC_CO_NIF /** N° de RCCM de l'entreprise de transformation !== 가공업체사업자등록번호 ==! */
        , A.CMDT_CLSF_SPEL_CD /** Code specifique de classification de marchandise !== 물품분류특별코드 ==! */
        , A.CMDT_CLSF_SPEL_CD_NM /** Nom du code specifique de classification de marchandise !== 물품분류특별코드명 ==! */
        , A.MAFC_CMDT_TP_CD /** Code de type de produit transforme !== 가공물품구분코드 ==! */
        , A.HS_CD /** Code SH !== HS코드 ==! */
        , A.QTY_UT_CD /** Code de l'unite de quantite !== 수량단위코드 ==! */
        , A.USE_YN /** Utilise ON !== 사용여부 ==! */
        , A.DEL_YN /** Suppression ON !== 삭제여부 ==! */
        , A.FRST_REGST_ID /** ID du premier enregistrant !== 최초등록자ID ==! */
        , A.FRST_RGSR_DTTM /** Date et heure de premier enregistrement !== 최초등록일시 ==! */
        , A.LAST_CHPR_ID /** ID du modificateur final !== 최종변경자ID ==! */
        , A.LAST_CHG_DTTM /** Date et heure de modification finale !== 최종변경일시 ==! */

        FROM TB_CLRI_MFCM_CLSF_SPEL_CD A
        WHERE DEL_YN = 'N'
        AND MAFC_CO_NIF = #{mafcCoNif}
        <if test="mafcCmdtTpCdList != null and mafcCmdtTpCdList.length != 0">
            AND MAFC_CMDT_TP_CD IN
            <foreach item="item" index="index" collection="mafcCmdtTpCdList" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="hsCd != null and hsCd != ''">
            AND HS_CD = #{hsCd}
        </if>
        <if test="cmdtClsfSpelCd != null and cmdtClsfSpelCd != ''">
            AND CMDT_CLSF_SPEL_CD = #{cmdtClsfSpelCd}
        </if>
        <if test="cmdtClsfSpelCdNm != null and cmdtClsfSpelCdNm != ''">
            AND CMDT_CLSF_SPEL_CD_NM LIKE #{cmdtClsfSpelCdNm} || '%'
        </if>

        UNION ALL

        SELECT
        C.NIF AS MAFC_CO_NIF /** N° de RCCM !== 사업자등록번호 ==! */
        , A.ITM_CD AS CMDT_CLSF_SPEL_CD /** Code d'article !== 아이템코드 ==! */
        , A.ITM_NM AS CMDT_CLSF_SPEL_CD_NM /** Nom d'article !== 아이템명 ==! */
        , '' AS MAFC_CMDT_TP_CD /** Code de type de produit transforme !== 가공물품구분코드 ==! */
        , A.HS_CD /** Code SH !== HS코드 ==! */
        , B.qty_ut_cd AS QTY_UT_CD /** Code de l'unite de quantite !== 수량단위코드 ==! */
        , 'Y' AS USE_YN /** Utilise ON !== 사용여부 ==! */
        , A.DEL_YN /** Suppression ON !== 삭제여부 ==! */
        , A.FRST_REGST_ID /** ID du premier enregistrant !== 최초등록자ID ==! */
        , A.FRST_RGSR_DTTM /** Date et heure de premier enregistrement !== 최초등록일시 ==! */
        , A.LAST_CHPR_ID /** ID du modificateur final !== 최종변경자ID ==! */
        , A.LAST_CHG_DTTM /** Date et heure de modification finale !== 최종변경일시 ==! */
        FROM TB_CARI_ITM_CD A /** CARI_Code d'article !== CARI_아이템코드 ==! */
        , tb_clri_hs_qty_ut_cd B /** COM_Code SH !== COM_HS코드==! */
        , TB_COM_CO_DCLR_CD C /** COM_Code de declaration de l'entreprise !== COM_업체신고코드 ==! */
        , tb_clri_hs_cd D /** COM_Code SH !== COM_HS코드==! */
        WHERE A.HS_CD = B.HS_CD
        AND B.HS_CD = D.HS_CD AND D.DEL_YN = 'N'
        AND A.DEL_YN = 'N'
        <if test="dclrDt != null and dclrDt != ''">
            AND NVL2(#{dclrDt}, TO_DATE(#{dclrDt}, 'DD/MM/YYYY') , SYSDATE) BETWEEN D.HS_APLY_STRT_DT AND
            D.HS_APLY_END_DT
        </if>
        AND B.DEL_YN = 'N'
        <if test="bnbnCmdtWrhsCd != null and bnbnCmdtWrhsCd != ''">
            AND A.prvt_ibobz_cd = #{bnbnCmdtWrhsCd} /** Code d'entrepot de la marchandise sous douane !== 보세물품창고코드 ==!
            */
        </if>
        AND C.CO_DCLR_CD = A.prvt_ibobz_cd
        AND C.DEL_YN = 'N'
        <if test="hsCd != null and hsCd != ''">
            AND A.HS_CD = #{hsCd}
        </if>
        <if test="cmdtClsfSpelCd != null and cmdtClsfSpelCd != ''">
            AND ITM_CD = #{cmdtClsfSpelCd}
        </if>
        <if test="cmdtClsfSpelCdNm != null and cmdtClsfSpelCdNm != ''">
            AND ITM_NM LIKE #{cmdtClsfSpelCdNm} || '%'
        </if>

        <include refid="pagination.footer"></include>
    </select>

    <!-- input 물품분류특별코드 (멀티선택) 조회 -->
    <select id="selectInputCmdtClsfSpelCdList" parameterType="alpass.ipt.clr.pfp.pfp.vo.ClrMfcmClsfSpelCdVo"
            resultType="alpass.ipt.clr.pfp.pfp.vo.ClrMfcmClsfSpelCdVo">
        /* ClrDcshDedSrchService_selectInputCmdtClsfSpelCdList */
        SELECT
        CMDT_CLSF_SPEL_CD /** Code specifique de classification de marchandise !== 물품분류특별코드 ==! */
        , CMDT_CLSF_SPEL_CD_NM /** Nom du code specifique de classification de marchandise !== 물품분류특별코드명 ==! */
        FROM TB_CLRI_MFCM_CLSF_SPEL_CD
        WHERE DEL_YN = 'N'
        <choose>
            <when test="!cmdtClsfSpelCdSet.isEmpty()">
                AND CMDT_CLSF_SPEL_CD IN
                <foreach collection="cmdtClsfSpelCdSet" item="cmdtClsfSpelCd" index="index" separator="," open="("
                         close=")">
                    #{cmdtClsfSpelCd}
                </foreach>
            </when>
            <otherwise>
                AND CMDT_CLSF_SPEL_CD = #{cmdtClsfSpelCd}
            </otherwise>
        </choose>

        UNION ALL

        SELECT
        A.ITM_CD AS CMDT_CLSF_SPEL_CD /** CODE D'ARTICLE !== 아이템코드 ==! */
        , A.ITM_NM AS CMDT_CLSF_SPEL_CD_NM /** NOM D'ARTICLE !== 아이템명 ==! */
        FROM TB_CARI_ITM_CD A /** CARI_CODE D'ARTICLE !== CARI_아이템코드 ==! */
        , TB_CLRI_HS_QTY_UT_CD B /** COM_CODE SH !== COM_HS코드==! */
        , TB_COM_CO_DCLR_CD C /** COM_CODE DE DECLARATION DE L'ENTREPRISE !== COM_업체신고코드 ==! */
        , TB_CLRI_HS_CD D /** COM_CODE SH !== COM_HS코드==! */
        WHERE A.HS_CD = B.HS_CD
        AND B.HS_CD = D.HS_CD AND D.DEL_YN = 'N'
        AND A.DEL_YN = 'N'
        AND B.DEL_YN = 'N'
        AND C.CO_DCLR_CD = A.PRVT_IBOBZ_CD
        AND C.DEL_YN = 'N'
        <choose>
            <when test="!cmdtClsfSpelCdSet.isEmpty()">
                AND CMDT_CLSF_SPEL_CD IN
                <foreach collection="cmdtClsfSpelCdSet" item="cmdtClsfSpelCd" index="index" separator="," open="("
                         close=")">
                    #{cmdtClsfSpelCd}
                </foreach>
            </when>
            <otherwise>
                AND CMDT_CLSF_SPEL_CD = #{cmdtClsfSpelCd}
            </otherwise>
        </choose>

        ORDER BY CMDT_CLSF_SPEL_CD

    </select>

    <!-- 담보승인서 목록 조회 -->
    <select id="selectClrMgdcList" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrMgdcApreComnRgsrVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrMgdcApreComnRgsrVo">
        /* ClreDpsRgsr_selectClriMgdcList */
        <include refid="pagination.header"></include>
        SELECT
        A.MG_DSCN_APRE_NO /** N° d'autorisation de l'abattement sur la caution !== 담보할인승인번호 ==! */
        , A.APRE_ITT_CD /** Code de l'organisme d'autorisation !== 승인기관코드 ==! */
        , A.BFCY_NO /** N° de RCCM du beneficiaire !== 수혜자사업자등록번호 ==! */
        , TO_CHAR(TO_DATE(A.VALD_PRID_STRT_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS VALD_PRID_STRT_DT /** Date de depart de la
        duree de validite !== 유효기간시작일자 ==! */
        , TO_CHAR(TO_DATE(A.VALD_PRID_END_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS VALD_PRID_END_DT /** Date de fin de la duree
        de validite !== 유효기간종료일자 ==! */
        , TO_CHAR(TO_DATE(A.VALD_PRID_STRT_DT, 'YYYYMMDD'),'DD/MM/YYYY') || ' ~ ' || TO_CHAR(TO_DATE(A.VALD_PRID_END_DT,
        'YYYYMMDD'),'DD/MM/YYYY') AS VALD_PRID_DT
        , TO_CHAR(TO_DATE(A.APRE_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS APRE_DT /** Date d'autorisation !== 승인일자 ==! */
        , A.MG_DSCN_RT /** Taux d'abattement de la caution !== 담보할인율 ==! */
        , A.RMRK_CN /** Contenu de remarque !== 비고내용 ==! */
        , A.DEL_YN /** Suppression ON !== 삭제여부 ==! */
        , A.FRST_REGST_ID /** ID du premier enregistrant !== 최초등록자ID ==! */
        , A.FRST_RGSR_DTTM /** Date et heure de premier enregistrement !== 최초등록일시 ==! */
        , A.LAST_CHPR_ID /** ID du modificateur final !== 최종변경자ID ==! */
        , A.LAST_CHG_DTTM /** Date et heure de modification finale !== 최종변경일시 ==! */
        FROM TB_CLRI_MGDC_APRE_COMN A
        WHERE DEL_YN = 'N'
        AND EXISTS (
        SELECT 'EXISTS'
        FROM TB_CLRI_MGDC_APRE_PDLS B
        WHERE B.MG_DSCN_APRE_NO = A.MG_DSCN_APRE_NO
        <if test="hsCd != null and hsCd != ''">
            AND B.HS_CD = SUBSTR(#{hsCd}, 0, LENGTH(B.HS_CD))
        </if>
        AND B.DEL_YN = 'N'
        )
        AND A.VALD_PRID_STRT_DT <![CDATA[ <= ]]> TO_DATE(#{searchDt}, 'DD/MM/YYYY')
        AND A.VALD_PRID_END_DT <![CDATA[ >= ]]> TO_DATE(#{searchDt}, 'DD/MM/YYYY')
        AND A.BFCY_NO IN
        <foreach item="item" index="index" collection="nifList" open="(" close=")" separator=",">
            #{item}
        </foreach>
        <if test="mgDscnApreNo != null and mgDscnApreNo != ''">
            AND A.MG_DSCN_APRE_NO = #{mgDscnApreNo}
        </if>
        <if test="apreDt != null and apreDt != ''">
            AND A.APRE_DT = TO_CHAR(TO_DATE(#{apreDt}, 'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <include refid="pagination.footer"></include>
    </select>

    <!--
        !==DED가격신고정보 조회==!
    -->
    <select id="selectDedPrcDclrPdlsInfo" parameterType="alpass.ipt.clr.pdr.dre.vo.ClrDedMdlStszVo"
            resultType="alpass.ipt.clr.pdr.dre.vo.ClrDedPrcDclrPdlsVo">
        /* selectDedPrcdclrInfoI */
        SELECT A.dtl_dcsh_no /** Numero de la déclaration en détail!! !==  ==! */
             , A.pdls_no /** N° D'Article !==  ==! */
             , A.mdl_stsz_no
             , A.indr_pymn_tamt /** paiement indirect !== 간접비용 ==! */
             , A.pcfe_amt /** Montant de la redevance !== 구매수수료를 제외한 수수료 ==! */
             , A.mdtn_pcfe_amt /** Frais de courtage !== 중개수수료 ==! */
             , A.pckg_amt /** Contenants et emballages	 !== 용기 및 포장 ==! */
             , A.mnfu_srvc_1_amt /** Frais de produits et services 1 !== 제품 및 서비스 비용 ==! */
             , A.mnfu_srvc_2_amt /** Frais de produits et services 2 !==  ==! */
             , A.mnfu_srvc_3_amt /** Frais de produits et services 3 !==  ==! */
             , A.mnfu_srvc_4_amt /** Frais de produits et services 4 !==  ==! */
             , A.pcfe_lcne_amt /** Montant de la redevance !== 수수료 및 라이센스 ==! */
             , A.resale_ern_amt /** Produit de revente !== 재판매 수익 ==! */
             , A.trnp_cst_amt /** Frais de transporåt  !== 운송비용 ==! */
             , A.load_cst_amt /** Frais de chargement !== 적재비용 ==! */
             , A.infee_amt /** Montant D'Assurance !== 보험료 ==! */
             , A.brng_trnp_cst /** Frais de chargement et de manutention !== 반입 운송비용 ==! */
             , A.tech_sppt_cst /** Frais de soutiens techniques !== 기술지원비용 ==! */
             , A.otcst_amt /** Montant Des Autres Coûts !== 기타비용 ==! */
             , A.pyr_trif_amt /** Montant de droits et taxes !== 관세 및 제새액 ==! */
             , A.byer_pymn_cst
             , A.del_yn /** Suppression On !==  ==! */
             , A.frst_regst_id /** Id Du Premier Enregistrant  !==  ==! */
             , TO_CHAR(A.frst_rgsr_dttm, 'DD/MM/YYYY') AS frst_rgsr_dttm /** Date Et Heure De Premier Enregistrement !==  ==! */
             , A.LAST_CHPR_ID
             , TO_CHAR(A.LAST_CHG_DTTM, 'DD/MM/YYYY')  AS LAST_CHG_DTTM
        FROM TB_CLRI_DED_PRC_DCLR_PDLS A
        WHERE A.del_yn = 'N' /** Suppression ON !== 삭제여부 ==! */
          AND A.dtl_dcsh_no = #{dtlDcshNo} /** Numero de la déclaration en détail!! !==  ==! */
          AND A.pdls_no = #{pdlsNo}
          AND A.mdl_stsz_no = #{mdlStszNo}

    </select>

</mapper>
