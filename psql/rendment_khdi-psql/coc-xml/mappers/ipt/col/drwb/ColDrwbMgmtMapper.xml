<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="alpass.ipt.col.drwb.mapper.ColDrwbMgmtMapper">

    <!--
    Consulter la liste des gestion des remboursements !==환급관리 조회한다.==!
    -->
    <select id="selectColDrwbRqstList" parameterType="alpass.ipt.col.drwb.vo.ColDrwbMgmtVo" resultType="alpass.ipt.col.drwb.vo.ColDrwbMgmtVo">
        /* ColDrwbMgmtMapper_selectColDrwbRqstList */
        <include refid="pagination.header" />
        SELECT
          RQST.PRC_EV_DGCNT                 /** Nombre De Fois De L'Évaluation De Valeur !== 가격평가차수 ==! */
        , RQST.DRWB_RQST_NO                 /** N° de demande de remboursement !== 환급신청번호 ==! */
        , RQST.CSTM_CD                      /** Code du bureau !== 세관코드 ==! */
        , FN_GET_ORGN_NM(RQST.CSTM_CD) AS CSTM_NM
        , RQST.DEPT_CD
        , (SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = UPPER(RQST.DEPT_CD) AND DEL_YN = 'N') AS DEPT_NM	/** Nom Du Bureau !== 부서명 ==! */
        , RQST.ACCT_CD
        , RQST.PRCS_STTS_CD
        , RQST.TXPR_IDFY_NO_TP_CD
        , RQST.TXPR_IDFY_NO                          /** N° de RCCM !== 사업자등록번호 ==! */
        , RQST.TXPR_NM
        , RQST.REFF_NO_PT_CD                /** Code de type de numero de reference !== 참조번호유형코드 ==! */
        , RQST.REFF_NO                      /** N° de reference !== 참조번호 ==! */
        , RQST.DRWB_RQST_YN                 /** Remboursement demande (ON) !== 환급신청여부 ==! */
        , TO_CHAR(TO_DATE(RQST.RQST_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS RQST_DT /** Date de demande !== 신청일자 ==! */
        , RQST.REPN_ID                      /** ID de la personne demandant !== 신청자ID ==! */
        , (SELECT EMP_NM FROM TB_POTI_EMP WHERE PBSR_NO = RQST.REPN_ID) AS REPN_NM
        , RQST.APRV_ID                      /** ID d'approbation  !== 결재ID ==! */
        , RQST.ATCH_FILE_ID
        , RQST.RCVE_NO			                /** N° de la quittance !== 영수증번호 ==! */
        , RCVE.RCVE_AMT			                /** Montant de la quittance !== 영수증금액 ==! */
        , TO_CHAR(TO_DATE(RCVE.RCVE_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS RCVE_DT /** Date de la quittance !== 영수증일자 ==! */
        , DRWB.DRWB_NO
        , DRWB.DRWB_DTRM_PT_CD
        , DRWB.RGSR_EMP_ID AS DRWB_RGSR_EMP_ID
        , (SELECT EMP_NM FROM TB_POTI_EMP WHERE PBSR_NO = DRWB.RGSR_EMP_ID) AS DRWB_RGSR_EMP_NM
        , DRWB.DRWB_AMT
        , TO_CHAR(TO_DATE(DRWB.DRWB_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS DRWB_DT
        , DRWB.DRWB_RSN_CN
        , DRWB.DRWB_DTRM_PT_CD
        , PYMN.PYMN_ORDER_NO
        , TO_CHAR(TO_DATE(PYMN.PYMN_ORDER_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS PYMN_ORDER_DT
        , PYMN.CSTM_CD AS PYMN_CSTM_CD
        , FN_GET_ORGN_NM(PYMN.CSTM_CD) AS PYMN_CSTM_NM
        , PYMN.DEPT_CD AS PYMN_DEPT_CD
        , (SELECT O.ORGN_NM FROM  TB_POTI_ORGN O WHERE O.ORGN_MGMT_CD = PYMN.DEPT_CD) AS PYMN_DEPT_NM				/** Nom du Recette !== 세입부서명 ==! */
        , PYMN.RGSR_EMP_ID AS PYMN_RGSR_EMP_ID
        , (SELECT EMP_NM FROM TB_POTI_EMP WHERE PBSR_NO = PYMN.RGSR_EMP_ID) AS PYMN_RGSR_EMP_NM
        , FN_GET_CD_VDVAL_NM('COM_0064', (SELECT CLPS_CD FROM TB_POTI_EMP WHERE PBSR_NO = PYMN.RGSR_EMP_ID), #{langCd}) AS PYMN_RGSR_EMP_CLPS_NM /** Qualité de l’ordonnateur !== 지불명령자 직위 ==! */
        , PYMN.PYMN_AMT
        , PYMN.ATCH_FILE_ID AS PYMN_ATCH_FILE_ID
        , DED.DTL_DCSH_NO
        , TO_CHAR(TO_DATE(DED.DCLR_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS DCLR_DT
        , DRWB.CLTR_OPIN_CN
        , RCVE.NTFC_NO
        FROM  TB_COLI_DRWB_RQST RQST
        LEFT OUTER JOIN TB_COLI_DRWB DRWB ON RQST.DRWB_RQST_NO = DRWB.DRWB_RQST_NO
        LEFT OUTER JOIN TB_COLI_PYMN_ORDER PYMN ON PYMN.REFF_NO_PT_CD = '018' AND PYMN.REFF_NO = DRWB.DRWB_RQST_NO
        LEFT OUTER JOIN TB_CLRI_DED_COMN DED ON RQST.REFF_NO_PT_CD = '002' AND DED.DTL_DCSH_NO = RQST.REFF_NO
        LEFT OUTER JOIN TB_COLI_RCVE RCVE ON RQST.RCVE_NO = RCVE.RCVE_NO
        ,TB_COLI_NTFC NTFC
        WHERE   RQST.DEL_YN = 'N'
            AND DRWB.DEL_YN = 'N'
            AND RCVE.DEL_YN = 'N'
            AND RCVE.NTFC_NO  = NTFC.NTFC_NO
        <if test="sctrCd != null and sctrCd != ''">
            AND  RQST.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
        </if>
        <if test='cstmCd != null and cstmCd !=""'>
            AND  RQST.CSTM_CD = #{cstmCd}
        </if>
        <if test='deptCd != null and deptCd !=""'>
            AND  (RQST.DEPT_CD = #{deptCd} OR RQST.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
            OR RQST.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
                                                                 OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN NTFC.NTFC_PT_CD = 'A'
						 ELSE NTFC.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
        </if>
        <if test="uprOrgnCd != null and uprOrgnCd != ''">
            AND  RQST.CSTM_CD = #{uprOrgnCd}
        </if>
        <if test="orgnCd != null and orgnCd != ''">
            AND (RQST.DEPT_CD = #{orgnCd} OR RQST.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) LIKE '%'||ORGN_MGMT_CD||'%')
                                          OR RQST.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) = 'C'
						 THEN NTFC.NTFC_PT_CD = 'A'
						 ELSE NTFC.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
        </if>
        <if test='drwbRqstNo != null and drwbRqstNo !=""'>
            AND  RQST.DRWB_RQST_NO = #{drwbRqstNo}
        </if>
        <if test='txprIdfyNo != null and txprIdfyNo != ""'>
            AND  RQST.TXPR_IDFY_NO LIKE #{txprIdfyNo}||'%'
        </if>
        <if test='rqstDtFrom != null and rqstDtFrom !="" and rqstDtTo != null and rqstDtTo !="" '>
            AND  RQST.RQST_DT  BETWEEN TO_CHAR(TO_DATE(#{rqstDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{rqstDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='reffNo != null and reffNo !=""'>
            AND  RQST.REFF_NO = #{reffNo}
        </if>
        <if test='prcsSttsCd != null and prcsSttsCd !=""'>
            AND  RQST.PRCS_STTS_CD = #{prcsSttsCd}
        </if>
        <if test='rcveNo != null and rcveNo !=""'>
            AND  RQST.RCVE_NO = #{rcveNo}
        </if>
        <if test='rcveDtFrom != null and rcveDtFrom !="" and rcveDtTo != null and rcveDtTo !="" '>
            AND  RCVE.RCVE_DT  BETWEEN TO_CHAR(TO_DATE(#{rcveDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{rcveDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='rcveAmt != null and rcveAmt !=""'>
            AND  RCVE.RCVE_AMT = #{rcveAmt}
        </if>
        <if test='pymnOrderNo != null and pymnOrderNo != ""'>
            AND  PYMN.PYMN_ORDER_NO = #{pymnOrderNo}
        </if>
        <if test='pymnDeptCd != null and pymnDeptCd !=""'>
            AND  PYMN.DEPT_CD = #{pymnDeptCd}
        </if>
        <if test='pymnOrderDtFrom != null and pymnOrderDtFrom !="" and pymnOrderDtTo != null and pymnOrderDtTo !="" '>
            AND  PYMN.PYMN_ORDER_DT  BETWEEN TO_CHAR(TO_DATE(#{pymnOrderDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{pymnOrderDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='dclrDtFrom != null and dclrDtFrom !="" and dclrDtTo != null and dclrDtTo !="" '>
            AND  DED.DCLR_DT  BETWEEN TO_CHAR(TO_DATE(#{dclrDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{dclrDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        ORDER  BY RQST.DRWB_RQST_NO DESC, RQST.REFF_NO ASC, RQST.TXPR_IDFY_NO ASC, RCVE.RCVE_AMT DESC
        <include refid="pagination.footer" />
    </select>

    <!--
    Modifier la gestion des remboursements !==환급관리 수정한다.==!
    -->
    <update id="updateColDrwbRqstPymn" parameterType="alpass.ipt.col.drwb.vo.ColDrwbMgmtVo">
        /* ColDrwbMgmtMapper_updateColDrwbRqstPymn */
        UPDATE  TB_COLI_DRWB_RQST
        SET
            PRCS_STTS_CD = #{prcsSttsCd}
            , LAST_CHPR_ID = #{lastChprId}                /** ID du modificateur final !== 최종변경자ID ==! */
            , LAST_CHG_DTTM = SYSTIMESTAMP                /** Date et heure de modification finale !== 최종변경일시 ==! */
        WHERE  DEL_YN = 'N'                                /** Suppression ON !== 삭제여부 ==! */
          AND  DRWB_RQST_NO = #{drwbRqstNo}                         /** N° d'avis !== 환급신청번호 ==! */
    </update>

    <!--
    Ajouter l'ordre de paiement de la gestion des remboursements !==환급 관리의 지불명령서를 추가한다==!
    -->
    <insert id="insertColDrwbRqstPymn" parameterType="alpass.ipt.col.acnt.vo.ColAcntOpMgmtVo">
        /* ColDrwbMgmtMapper_insertColDrwbRqstPymn */
        INSERT INTO TB_COLI_PYMN_ORDER (
             PYMN_ORDER_NO
            , PYMN_ORDER_TP_CD
            , PYMN_ORDER_DT
            , CSTM_CD
            , DEPT_CD
            , PYMN_AMT
            , RGSR_EMP_ID
            , ATCH_FILE_ID
            , REFF_NO_PT_CD
            , REFF_NO
            , REFF_NO_DT
            , RCVE_NO
            , TXPR_IDFY_NO_TP_CD
            , TXPR_IDFY_NO
            , TXPR_NM
            , RECP_NO
            , RECP_DT
            , DEL_YN
            , FRST_REGST_ID
            , FRST_RGSR_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
        ) VALUES (
            #{pymnOrderNo}
            , #{pymnOrderTpCd}
            , TO_CHAR(TO_DATE(REPLACE(#{pymnOrderDt},'/', ''), 'DDMMYYYY'), 'YYYYMMDD')
            , #{cstmCd}
            , #{deptCd}
            , #{pymnAmt}
            , #{rgsrEmpId}
            , #{atchFileId}
            , #{reffNoPtCd}
            , #{reffNo}
            , TO_CHAR(TO_DATE(REPLACE(#{reffNoDt},'/', ''), 'DDMMYYYY'), 'YYYYMMDD')
            , #{rcveNo}
            , #{txprIdfyNoTpCd}
            , #{txprIdfyNo}
            , #{txprNm}
            , #{recpNo}
            , TO_CHAR(TO_DATE(REPLACE(#{recpDt},'/', ''), 'DDMMYYYY'), 'YYYYMMDD')
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
            )
    </insert>

    <!--
    Ajouter la demande de remboursement !==환급신청을 추가한다.==!
    -->
    <insert id="insertColDrwbRqst" parameterType="alpass.ipt.col.com.vo.ColDrwbRqstVo">
        /* ColDrwbMgmtMapper_insertColDrwbRqst */
        INSERT INTO TB_COLI_DRWB_RQST (
            DRWB_RQST_NO
            , CSTM_CD
            , DEPT_CD
            , ACCT_CD
            , RCVE_NO
            , TXPR_IDFY_NO_TP_CD
            , TXPR_IDFY_NO
            , TXPR_NM
            , REFF_NO_PT_CD
            , REFF_NO
            , DRWB_RQST_YN
            , RQST_DT
            , REPN_ID
            , APRV_ID
            , ATCH_FILE_ID
            , PRCS_STTS_CD
            , DEL_YN
            , FRST_REGST_ID
            , FRST_RGSR_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
        ) VALUES (
            #{drwbRqstNo}
            , #{cstmCd}
            , #{deptCd}
            , #{acctCd}
            , #{rcveNo}
            , #{txprIdfyNoTpCd}
            , #{txprIdfyNo}
            , #{txprNm}
            , #{reffNoPtCd}
            , #{reffNo}
            , #{drwbRqstYn}
            , TO_CHAR(TO_DATE(REPLACE(#{rqstDt},'/', ''), 'DDMMYYYY'), 'YYYYMMDD')
            , #{repnId}
            , #{aprvId}
            , #{atchFileId}
            , #{prcsSttsCd}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
            )
    </insert>

    <!--
    Ajouter la gestion des remboursements !==환급을 추가한다.==!
    -->
    <insert id="insertColDrwb" parameterType="alpass.ipt.col.com.vo.ColDrwbVo">
        /* ColDrwbMgmtMapper_insertColDrwb */
        INSERT INTO TB_COLI_DRWB (
            DRWB_NO
            , CSTM_CD
            , DEPT_CD
            , DRWB_DTRM_PT_CD
            , DRWB_RSN_CN
            , DRWB_RQST_NO
            , DRWB_AMT
            , DRWB_DT
            , ATCH_FILE_ID
            , RGSR_EMP_ID
            , DEL_YN
            , FRST_REGST_ID
            , FRST_RGSR_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
        ) VALUES (
            #{drwbNo}
            , #{cstmCd}
            , #{deptCd}
            , #{drwbDtrmPtCd}
            , #{drwbRsnCn}
            , #{drwbRqstNo}
            , #{drwbAmt}
            , TO_CHAR(TO_DATE(REPLACE(#{drwbDt},'/', ''), 'DDMMYYYY'), 'YYYYMMDD')
            , #{atchFileId}
            , #{rgsrEmpId}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
            )
    </insert>

    <!--
    Modifier la gestion des remboursements !==환급을 수정한다.==!
    -->
    <update id="updateColDrwb" parameterType="alpass.ipt.col.drwb.vo.ColDrwbMgmtVo">
        /* ColDrwbMgmtMapper_updateColDrwb */
        UPDATE  TB_COLI_DRWB
        SET   CLTR_OPIN_CN = #{cltrOpinCn}                  /** Avis du receveur !== 징수관의견내용 ==!*/
            , LAST_CHPR_ID = #{lastChprId}                  /** ID du modificateur final !== 최종변경자ID ==! */
            , LAST_CHG_DTTM = SYSTIMESTAMP                  /** Date et heure de modification finale !== 최종변경일시 ==! */
        WHERE  DEL_YN = 'N'                                 /** Suppression ON !== 삭제여부 ==! */
          AND  DRWB_NO = #{drwbNo}                      /** N° De Remboursement !== 환급번호 ==!*/
    </update>

    <!--
    Consulter les détails des droits et taxes à rembourser avant la modification !==정정전 환급 대상 관세 및 제세 상세를 조회한다==!
    -->
    <select id="selectDedTaxHistList" parameterType="alpass.ipt.col.drwb.vo.ColDrwbMgmtVo" resultType="alpass.ipt.col.drwb.vo.ColDrwbMgmtVo">
        /* selectDedTaxHistList */
        <include refid="pagination.header" />
        SELECT TAX.TAX_CD                                                          /** CODE DE TAXE !== 세금코드  ==! */
             , TRUNC(SUM(TAX.PAY_TAX_AMT)) PAY_TAX_AMT                                  /** MONTANT DES TAXES À PAYER !== 납부세금금액 ==! */
             , (SELECT TAX_CD_NM FROM TB_CLRI_TAX_CD WHERE TAX_CD = TAX.TAX_CD AND ROWNUM = 1) AS TAX_NM
             , TRUNC(SUM(TAX.TXBS_AMT)) TXBS_AMT
        FROM TB_CLRI_DED_VLUT_AUDT_COMN COMN, TB_CLRI_DED_VLUT_AUDT_TAX TAX
        WHERE COMN.DTL_DCSH_NO = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        AND COMN.DEL_YN = 'N'
        AND TAX.DEL_YN = 'N'
        AND COMN.PRC_EV_DGCNT = #{prcEvDgcnt}-1
        AND COMN.DTL_DCSH_NO = TAX.DTL_DCSH_NO
        AND COMN.PRC_EV_DGCNT = TAX.PRC_EV_DGCNT
        GROUP BY TAX.TAX_CD
        ORDER BY TXBS_AMT
        <include refid="pagination.footer" />
    </select>
    <!--
    Consulter les détails des droits et taxes à rembourser après la modification !==정정후 환급 대상 관세 및 제세 상세를 조회한다==!
    -->
    <select id="selectDedTaxList" parameterType="alpass.ipt.col.drwb.vo.ColDrwbMgmtVo" resultType="alpass.ipt.col.drwb.vo.ColDrwbMgmtVo">
        /* selectDedTaxList */
        <include refid="pagination.header" />
        SELECT TAX.TAX_CD                                                          /** CODE DE TAXE !== 세금코드  ==! */
             , TRUNC(SUM(TAX.PAY_TAX_AMT)) PAY_TAX_AMT                                  /** MONTANT DES TAXES À PAYER !== 납부세금금액 ==! */
             , (SELECT TAX_CD_NM FROM TB_CLRI_TAX_CD WHERE TAX_CD = TAX.TAX_CD AND ROWNUM = 1) AS TAX_NM
             , TRUNC(SUM(TAX.TXBS_AMT)) TXBS_AMT
        FROM TB_CLRI_DED_VLUT_AUDT_COMN COMN, TB_CLRI_DED_VLUT_AUDT_TAX TAX, TB_COLI_DRWB_RQST TCDR
        WHERE COMN.DTL_DCSH_NO = #{dtlDcshNo} /** Numero de la déclaration en détail!! !== 상세신고서번호 ==! */
        AND COMN.DEL_YN = 'N'
        AND TAX.DEL_YN = 'N'
        AND COMN.PRC_EV_DGCNT = #{prcEvDgcnt}
        AND COMN.DTL_DCSH_NO = TAX.DTL_DCSH_NO
        AND COMN.PRC_EV_DGCNT = TAX.PRC_EV_DGCNT
        AND COMN.DTL_DCSH_NO  = TCDR.REFF_NO
        AND COMN.PRC_EV_DGCNT = TCDR.PRC_EV_DGCNT
        GROUP BY TAX.TAX_CD
        ORDER BY TXBS_AMT
        <include refid="pagination.footer" />
    </select>
</mapper>