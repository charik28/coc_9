<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="alpass.ipt.col.dpstm.mapper.ColDpstmMgmtMapper">

    <!--
    Consulter la liste de la gestion des consignations !== 공탁금 관리 목록을 조회한다 ==!
    -->
    <select id="selectDpstmMgmtLst" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_selectDpstmMgmtLst **/
        <include refid="pagination.header" />
        SELECT
            A.NTFC_NO
            , A.CSTM_CD
            , FN_GET_ORGN_NM(A.CSTM_CD) AS CSTM_NM
            , A.NTFC_PT_CD
            , (SELECT CD_VDVAL_NM FROM TB_COM_COMN_CD_D_LANG WHERE COMN_CD = 'COL_0003' AND LANG_CD = #{langCd} AND CD_VDVAL = A.NTFC_PT_CD) AS NTFC_PT_NM /** Désignation du code de type d'avis !== 고지유형코드명 ==! */
            , TO_CHAR(TO_DATE(A.NTFC_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS NTFC_DT
            , TO_CHAR(TO_DATE(A.NTFC_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS APRE_DT
            , TO_CHAR(TO_DATE(A.DLPY_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS DLPY_DT
            , TO_CHAR(TO_DATE(A.PAY_TMLM_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS PAY_TMLM_DT
            , A.DLPY_INST_AMT
            , A.ODLPY_INST_AMT
            , A.FINE_AMT
            , A.OTHS_PCFE_AMT
            , A.TAMT
            , A.DRWB_AMT
            , A.DCLR_NO
            , A.REFF_NO_PT_CD
            , (SELECT CD_VDVAL_NM FROM TB_COM_COMN_CD_D_LANG WHERE COMN_CD = 'COL_0021' AND LANG_CD = #{langCd} AND CD_VDVAL = A.REFF_NO_PT_CD) AS REFF_NO_PT_NM /** Code de type de numéro de référence !== 참조번호유형코드명 ==! */
            , A.DCER_CD
            , A.RCVE_YN
            , A.PAY_TMLM_XTNS_YN
            , A.DLPY_YN
            , A.DLPY_INST_ADJU_YN
            , A.NTFC_DIVD_YN
            , A.RECP_PBLS_YN
            , A.CNCL_YN
            , A.NTFC_CNCL_RSN_CD
            , TO_CHAR(TO_DATE(A.CNCL_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS CNCL_DT
            , A.ONTFC_NO
            , A.DFPM_PAY_YN
            , A.NTFC_PRCS_STTS_CD
            , TO_CHAR(A.NTSH_PBLS_DTTM, 'DD/MM/YYYY') AS NTSH_PBLS_DTTM
            , A.TRSN_YN
            , A.TRSN_TP_CD
            , A.DIVD_NTFC_PRCS_YN_CD
            , B.TXPR_IDFY_NO_TP_CD
            , B.TXPR_IDFY_NO_TP_NM
            , B.TXPR_IDFY_NO
            , B.TXPR_NM
            , B.DPSTM_PT_CD
            , B.REFF_NO
            , B.DPSIT_AMT
            , B.RGSR_RSN_CN
            , TO_CHAR(TO_DATE(B.REFF_DOC_RGSR_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS REFF_DOC_RGSR_DT
            , C.RCVE_NO AS DPSIT_RECP_NO
            , TO_CHAR(D.PBLS_DTTM, 'DD/MM/YYYY') AS DPSIT_RECP_DT
            , E.RCVE_AMT AS DPSIT_RECP_AMT
            , E.RCVE_NO                                                         /** Date et heure de modification finale !== 수납번호 ==! */
            , TO_CHAR(TO_DATE(E.RCVE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT
            /*, CASE WHEN B.NTFC_NO IS NOT NULL THEN 'Y'
                   ELSE 'N'
                END AS DPSIT_NTFC_YN*/
            , B.DPSIT_PT_CD
            , B.DTRM_PT_CD
            , CASE  WHEN A.RCVE_YN = 'Y' AND (F.RCVE_YN = 'Y' OR F.RCVE_YN IS NULL) AND B.DTRM_PT_CD IS NOT NULL THEN 'Y'
                ELSE 'N' END AS LQDT_YN
            , B.DTRM_PT_CD_NM
            , B.DTRM_NO
            , TO_CHAR(TO_DATE(B.DTRM_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DTRM_DT
            , B.DTRM_REGST_ID
            , (SELECT EMP_NM FROM TB_POTI_EMP WHERE PBSR_NO = B.DTRM_REGST_ID) AS EMP_NM
            , CASE WHEN B.LQDT_TRGT_AMT IS NOT NULL THEN B.LQDT_TRGT_AMT
                    ELSE (SELECT SUM(TCDVAC.ASED_TAX_TAMT + TCDVAC.ASED_OTHS_PCFE_AMT)
                            FROM TB_CLRI_DED_VLUT_AUDT_COMN TCDVAC
                           WHERE TCDVAC.LAST_YN = 'Y'
                             AND TCDVAC.DEL_YN  = 'N'
                             AND A.DCLR_NO = TCDVAC.DTL_DCSH_NO)
                END AS LQDT_TRGT_AMT
            , B.DRWB_TRGT_AMT
            , B.COLT_TRGT_AMT
            , A.DEPT_CD
            , B.APRV_ID
            , (SELECT APRV_PRCS_STTS_CD FROM TB_POTI_APRV WHERE DEL_YN = 'N' AND APRV_ID = B.APRV_ID) AS APRV_PRCS_STTS_CD
            , B.DTRM_ITT_NM
            , F.NTFC_NO AS ADIT_NTFC_NO
            , TO_CHAR(TO_DATE(F.NTFC_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS ADIT_NTFC_DT
            , G.RCVE_NO AS ADIT_RCVE_NO
            , G.RCVE_DT AS ADIT_RCVE_DT
            , H.PYMN_ORDER_NO
            , TO_CHAR(TO_DATE(H.REFF_NO_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS REFF_NO_DT
        FROM   TB_COLI_NTFC A
            JOIN TB_COLI_DPSIT_NTFC B ON (A.NTFC_NO = B.NTFC_NO AND B.DEL_YN = 'N')
            LEFT JOIN TB_COLI_RECP_PBLS_NTFC C ON (A.NTFC_NO = C.NTFC_NO AND C.DEL_YN = 'N' AND C.PBLS_DGCNT = (SELECT MAX(PBLS_DGCNT) FROM TB_COLI_RECP_PBLS_NTFC WHERE RCVE_NO = C.RCVE_NO AND DEL_YN = 'N'))
            LEFT JOIN TB_COLI_RECP_PBLS D ON (C.RCVE_NO = D.RCVE_NO AND D.DEL_YN = 'N' AND C.PBLS_DGCNT = D.PBLS_DGCNT)
            LEFT JOIN TB_COLI_RCVE E ON (A.NTFC_NO = E.NTFC_NO AND D.RCVE_NO = E.RCVE_NO AND E.DEL_YN = 'N')
            LEFT JOIN TB_COLI_NTFC F ON (B.ADIT_NTFC_NO = F.NTFC_NO)
            LEFT JOIN TB_COLI_RCVE G ON (B.ADIT_NTFC_NO = G.NTFC_NO)
            LEFT JOIN TB_COLI_PYMN_ORDER H ON (A.NTFC_NO = H.REFF_NO AND H.PYMN_ORDER_TP_CD = '007'  AND H.REFF_NO_PT_CD = '014')
        WHERE  A.DEL_YN  = 'N'
        <if test="sctrCd != null and sctrCd != ''">
            AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
        </if>
        <if test="uprOrgnCd != null and uprOrgnCd != ''">
            AND  A.CSTM_CD = #{uprOrgnCd}
        </if>
        <if test="orgnCd != null and orgnCd != ''">
            AND  (A.DEPT_CD = #{orgnCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) LIKE '%'||ORGN_MGMT_CD||'%')
                                        OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
						 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
        </if>
        <if test="cstmCd != null and cstmCd !=''">
            AND A.CSTM_CD = #{cstmCd}
        </if>
        <if test="deptCd != null and deptCd !=''">
            AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
                                        OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
                                                                                          OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
                         ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
        </if>
        <!--<if test='searchAllYn == null or searchAllYn !="Y" '>
            AND    A.CSTM_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD = (SELECT ORGN_MGMT_CD FROM TB_POTI_EMP WHERE PBSR_NO = #{sessPbsrNo}))
        </if>-->
        <if test="dpstmPtCd != null and dpstmPtCd !=''">
            AND B.DPSTM_PT_CD = #{dpstmPtCd}
        </if>
        <if test="reffNo != null and reffNo !=''">
            AND B.REFF_NO LIKE TRIM(#{reffNo}) || '%'
        </if>
        <if test="reffDocRgsrDtFrom != null and reffDocRgsrDtFrom != '' and reffDocRgsrDtTo != null and reffDocRgsrDtTo != ''">
            AND B.REFF_DOC_RGSR_DT <![CDATA[ >= ]]> TO_CHAR(TO_DATE(#{reffDocRgsrDtFrom}, 'DD/MM/YYYY'), 'YYYYMMDD')
            AND B.REFF_DOC_RGSR_DT <![CDATA[ <= ]]> TO_CHAR(TO_DATE(#{reffDocRgsrDtTo}, 'DD/MM/YYYY'), 'YYYYMMDD')
        </if>
        <if test="ntshPblsDttmFrom != null and ntshPblsDttmFrom != '' and ntshPblsDttmTo != null and ntshPblsDttmTo != ''">
            AND TO_CHAR(A.NTSH_PBLS_DTTM, 'YYYYMMDD') <![CDATA[ >= ]]> TO_CHAR(TO_DATE(#{ntshPblsDttmFrom}, 'DD/MM/YYYY'), 'YYYYMMDD')
            AND TO_CHAR(A.NTSH_PBLS_DTTM, 'YYYYMMDD') <![CDATA[ <= ]]> TO_CHAR(TO_DATE(#{ntshPblsDttmTo}, 'DD/MM/YYYY'), 'YYYYMMDD')
        </if>
        <if test="dpsitRecpDtFrom != null and dpsitRecpDtFrom != '' and dpsitRecpDtTo != null and dpsitRecpDtTo != ''">
            AND TO_CHAR(D.PBLS_DTTM, 'YYYYMMDD') <![CDATA[ >= ]]> TO_CHAR(TO_DATE(#{dpsitRecpDtFrom}, 'DD/MM/YYYY'), 'YYYYMMDD')
            AND TO_CHAR(D.PBLS_DTTM, 'YYYYMMDD') <![CDATA[ <= ]]> TO_CHAR(TO_DATE(#{dpsitRecpDtTo}, 'DD/MM/YYYY'), 'YYYYMMDD')
        </if>
        <if test="ntfcDtFrom != null and ntfcDtFrom != '' and ntfcDtTo != null and ntfcDtTo != ''">
            AND A.NTFC_DT <![CDATA[ >= ]]> TO_CHAR(TO_DATE(#{ntfcDtFrom}, 'DD/MM/YYYY'), 'YYYYMMDD')
            AND A.NTFC_DT <![CDATA[ <= ]]> TO_CHAR(TO_DATE(#{ntfcDtTo}, 'DD/MM/YYYY'), 'YYYYMMDD')
        </if>
        <if test="ntfcNo != null and ntfcNo !=''">
            AND A.NTFC_NO LIKE TRIM(#{ntfcNo}) || '%'
        </if>

        <if test="txprIdfyNoTpCd != null and txprIdfyNoTpCd !=''">
            AND B.TXPR_IDFY_NO_TP_CD = #{txprIdfyNoTpCd}
        </if>

        <if test="txprIdfyNo != null and txprIdfyNo !=''">
            AND B.TXPR_IDFY_NO LIKE TRIM(#{txprIdfyNo}) || '%'
        </if>

        <if test="txprNm != null and txprNm !=''">
            AND B.TXPR_NM LIKE TRIM(#{txprNm}) || '%'
        </if>

        <if test="dpsitRecpNo != null and dpsitRecpNo != ''">
            AND  E.RCVE_NO = #{dpsitRecpNo}
        </if>
        <if test='dtrmPtCd != null and dtrmPtCd !="" '>
            AND    B.DTRM_PT_CD = #{dtrmPtCd}
        </if>
        <if test='dtrmDtFrom != null and dtrmDtFrom !="" and dtrmDtTo != null and dtrmDtTo !="" '>
            AND    B.DTRM_DT BETWEEN TO_CHAR(TO_DATE(#{dtrmDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{dtrmDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='dpsitPtCd != null and dpsitPtCd !="" '>
            AND    B.DPSIT_PT_CD = #{dpsitPtCd}
        </if>
        ORDER BY A.FRST_RGSR_DTTM DESC
        <include refid="pagination.footer" />
    </select>

    <!--
    Consulter le montant de la consignation !==공탁금 관리 조회한다==!
    -->
    <select id="selectDpstmMgmt" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_selectDpstmMgmt **/
        SELECT
            A.NTFC_NO
            , A.CSTM_CD
            , A.NTFC_PT_CD
            , TO_CHAR(TO_DATE(A.NTFC_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS NTFC_DT
            , TO_CHAR(TO_DATE(A.NTFC_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS APRE_DT
            , TO_CHAR(TO_DATE(A.DLPY_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS DLPY_DT
            , TO_CHAR(TO_DATE(A.PAY_TMLM_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS PAY_TMLM_DT
            , A.DLPY_INST_AMT
            , A.ODLPY_INST_AMT
            , A.FINE_AMT
            , A.OTHS_PCFE_AMT
            , A.TAMT
            , A.DRWB_AMT
            , A.DCLR_NO
            , A.REFF_NO_PT_CD
            , A.DCER_CD
            , A.RCVE_YN
            , A.PAY_TMLM_XTNS_YN
            , A.DLPY_YN
            , A.DLPY_INST_ADJU_YN
            , A.NTFC_DIVD_YN
            , A.RECP_PBLS_YN
            , A.CNCL_YN
            , A.NTFC_CNCL_RSN_CD
            , TO_CHAR(TO_DATE(A.CNCL_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS CNCL_DT
            , A.ONTFC_NO
            , A.DFPM_PAY_YN
            , A.NTFC_PRCS_STTS_CD
            , TO_CHAR(A.NTSH_PBLS_DTTM, 'DD/MM/YYYY') AS NTSH_PBLS_DTTM
            , A.TRSN_YN
            , A.TRSN_TP_CD
            , A.DIVD_NTFC_PRCS_YN_CD
            , B.TXPR_IDFY_NO_TP_CD
            , B.TXPR_IDFY_NO_TP_NM
            , B.TXPR_IDFY_NO
            , B.TXPR_NM
            , B.DPSTM_PT_CD
            , B.REFF_NO
            , B.DPSIT_AMT
            , B.RGSR_RSN_CN
            , TO_CHAR(TO_DATE(B.REFF_DOC_RGSR_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS REFF_DOC_RGSR_DT
            , C.RCVE_NO AS DPSIT_RECP_NO
            , TO_CHAR(D.PBLS_DTTM, 'DD/MM/YYYY') AS DPSIT_RECP_DT
            , E.RCVE_AMT AS DPSIT_RECP_AMT
            , E.RCVE_NO
            , TO_CHAR(TO_DATE(E.RCVE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT
            /*, CASE WHEN B.NTFC_NO IS NOT NULL THEN 'Y'
            ELSE 'N'
            END AS DPSIT_NTFC_YN*/
            , B.DPSIT_PT_CD
            , B.DTRM_PT_CD
            , DECODE(B.DTRM_PT_CD, NULL, 'N', 'Y') AS LQDT_YN
            , B.DTRM_PT_CD_NM
            , B.DTRM_NO
            , TO_CHAR(TO_DATE(B.DTRM_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DTRM_DT
            , B.DTRM_REGST_ID
            , (SELECT EMP_NM FROM TB_POTI_EMP WHERE PBSR_NO = B.DTRM_REGST_ID) AS EMP_NM
            , CASE WHEN B.LQDT_TRGT_AMT IS NOT NULL THEN B.LQDT_TRGT_AMT
                    ELSE (SELECT SUM(TAX.PAY_TAX_AMT)
                            FROM TB_CLRI_DED_TAX TAX
                            WHERE TAX.DEL_YN  = 'N'
                            AND A.DCLR_NO = TAX.DTL_DCSH_NO
                            -- AND TAX.PDLS_NO = (SELECT MAX(PDLS_NO) FROM TB_CLRI_DED_TAX WHERE DTL_DCSH_NO = TAX.DTL_DCSH_NO AND DEL_YN = 'N')
                            GROUP BY TAX.DTL_DCSH_NO)
                END AS LQDT_TRGT_AMT
            , B.DRWB_TRGT_AMT
            , B.COLT_TRGT_AMT
            , B.DTRM_ITT_NM
            , F.NTFC_NO AS ADIT_NTFC_NO
            , TO_CHAR(TO_DATE(F.NTFC_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS ADIT_NTFC_DT
            , G.RCVE_NO AS ADIT_RCVE_NO
            , G.RCVE_DT AS ADIT_RCVE_DT
            , H.PYMN_ORDER_NO
            , TO_CHAR(TO_DATE(H.REFF_NO_DT,  'YYYYMMDD'), 'DD/MM/YYYY') AS REFF_NO_DT
        FROM   TB_COLI_NTFC A
            JOIN TB_COLI_DPSIT_NTFC B ON (A.NTFC_NO = B.NTFC_NO AND B.DEL_YN = 'N')
            LEFT JOIN TB_COLI_RECP_PBLS_NTFC C ON (A.NTFC_NO = C.NTFC_NO AND C.DEL_YN = 'N' AND C.PBLS_DGCNT = (SELECT MAX(PBLS_DGCNT) FROM TB_COLI_RECP_PBLS_NTFC WHERE RCVE_NO = C.RCVE_NO AND DEL_YN = 'N'))
            LEFT JOIN TB_COLI_RECP_PBLS D ON (C.RCVE_NO = D.RCVE_NO AND D.DEL_YN = 'N' AND C.PBLS_DGCNT = D.PBLS_DGCNT)
            LEFT JOIN TB_COLI_RCVE E ON (A.NTFC_NO = E.NTFC_NO AND D.RCVE_NO = E.RCVE_NO AND E.DEL_YN = 'N')
            LEFT JOIN TB_COLI_NTFC F ON (B.ADIT_NTFC_NO = F.NTFC_NO)
            LEFT JOIN TB_COLI_RCVE G ON (B.ADIT_NTFC_NO = G.NTFC_NO)
            LEFT JOIN TB_COLI_PYMN_ORDER H ON (A.NTFC_NO = H.REFF_NO AND H.PYMN_ORDER_TP_CD = '007'  AND H.REFF_NO_PT_CD = '014')
        WHERE  A.DEL_YN  = 'N'
        <if test="ntfcNo != null and ntfcNo !=''">
            AND A.NTFC_NO LIKE TRIM(#{ntfcNo}) || '%'
        </if>
   </select>

    <!--
    Traitement de l'approbation/rejet de la gestion des consignations !==공탁금 관리 승인/기각 처리==!
    -->
    <update id="updateDpstmMgmtPrcsSttsCd" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" >
        /** colDpstmMgmt_updateDpstmMgmtPrcsSttsCd **/
        UPDATE TB_COLI_MG SET
                PRCS_STTS_CD = #{prcsSttsCd}
                , APRV_ID = #{lastChprId}
                , LAST_CHPR_ID = #{lastChprId}     	/* ID du modificateur final !== 최종변경자ID ==! */
                , LAST_CHG_DTTM = SYSTIMESTAMP 		/* Date et heure de modification finale !== 최종변경일시 ==! */
                <if test="prcsSttsCd != null and prcsSttsCd == '02'.toString()">
                    , REFS_YN = 'N'
                    , VALD_STRT_DT = TO_CHAR(SYSTIMESTAMP,'YYYYMMDD')
                </if>

                <if test="prcsSttsCd != null and prcsSttsCd == '03'.toString()">
                    , MG_RTRN_RSN_CD = #{mgRtrnRsnCd}
                    , REFS_YN = 'Y'
                </if>
        WHERE 1 = 1
          AND RQST_NO = #{rqstNo}                         /* 신청번호 !== 신청번호 ==!*/
    </update>

    <!--
         고지테이블 공탁금 등록한다 !==고지테이블 공탁금 등록한다==!
      -->
    <insert id="insertColNtfcNo" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_insertColNtfcNo */
        with upsert as
        (
            UPDATE TB_COLI_NTFC SET
                    CSTM_CD = #{cstmCd}
                    , NTFC_PT_CD = #{ntfcPtCd}
                    , NTFC_DT = TO_CHAR(TO_DATE(#{reffDocRgsrDt},'DD/MM/YYYY'),'YYYYMMDD')   /*결제요청서일자*/
                    , PAY_TMLM_DT = TO_CHAR(TO_DATE(#{payTmlmDt},'DD/MM/YYYY'),'YYYYMMDD')
                    , TXPR_IDFY_NO_TP_CD = #{txprIdfyNoTpCd}
                    , TXPR_IDFY_NO = #{txprIdfyNo}
                    , TXPR_NM = #{txprNm}
                    , TAMT = #{dpsitAmt}    /*공탁금액*/
                    , DRWB_AMT = #{drwbAmt}
                    , NTFC_PRCS_STTS_CD = #{ntfcPrcsSttsCd}
                    , DEL_YN = 'N'
                    , LAST_CHPR_ID = #{lastChprId}
                    , LAST_CHG_DTTM = SYSTIMESTAMP
                    , DEPT_CD = #{deptCd}
                    , DCLR_NO = #{dclrNo}
                    , DCER_CD = #{dcerCd}
                    , REFF_NO_PT_CD = #{dpstmPtCd}
                    , REFF_NO = #{reffNo}
                    , REFF_NO_DT = TO_CHAR(TO_DATE(#{reffDocRgsrDt},'DD/MM/YYYY'),'YYYYMMDD')
                    , TXRE_DEPT_CD  = NVL(FN_GET_TXRE_DEPT_CD(#{deptCd},#{ntfcPtCd}) ,#{deptCd})

            WHERE NTFC_NO = #{ntfcNo}
                returning *
        )
        INSERT INTO TB_COLI_NTFC
        (
            NTFC_NO
            , CSTM_CD
            , NTFC_PT_CD
            , NTFC_DT
            , PAY_TMLM_DT
            , TXPR_IDFY_NO_TP_CD
            , TXPR_IDFY_NO
            , TXPR_NM
            , TAMT
            , DRWB_AMT
            , NTFC_PRCS_STTS_CD
            , DEL_YN
            , FRST_REGST_ID
            , FRST_RGSR_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
            , DEPT_CD
            , DCLR_NO
            , RCVE_YN
            , DLPY_YN
            , DLPY_INST_ADJU_YN
            , NTFC_DIVD_YN
            , RECP_PBLS_YN
            , CNCL_YN
            , PAY_TMLM_XTNS_YN
            , REFF_NO_PT_CD
            , REFF_NO
            , REFF_NO_DT
            , TXRE_DEPT_CD                  /** Code de recette !== 세입부서코드 ==! */
            , DCER_CD
        )
        SELECT
            #{ntfcNo}
            , #{cstmCd}
            , #{ntfcPtCd}
            , TO_CHAR(TO_DATE(#{reffDocRgsrDt},'DD/MM/YYYY'),'YYYYMMDD')   /*결제요청서일자*/
            , TO_CHAR(TO_DATE(#{payTmlmDt},'DD/MM/YYYY'),'YYYYMMDD')
            , #{txprIdfyNoTpCd}
            , #{txprIdfyNo}
            , #{txprNm}
            , #{dpsitAmt}
            , #{drwbAmt}
            , #{ntfcPrcsSttsCd}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
            , #{deptCd}
            , #{dclrNo}
            , 'N'
            , 'N'
            , 'N'
            , 'N'
            , 'N'
            , 'N'
            , 'N'
            , #{dpstmPtCd}
            , #{reffNo}
            , TO_CHAR(TO_DATE(#{reffDocRgsrDt},'DD/MM/YYYY'),'YYYYMMDD')
            , NVL(FN_GET_TXRE_DEPT_CD(#{deptCd},#{ntfcPtCd}) ,#{deptCd})  /** Code de recette !== 세입부서코드 ==! */
            , #{dcerCd}
        WHERE NOT EXISTS(select * from upsert)
    </insert>



    <!--
    Traitement de l'enregistrement de la consignation !==공탁금 등록한다==!
    -->
    <insert id="insertDpstmMgmt" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_insertDpstmMgmt */
        with upsert as
        (
            UPDATE TB_COLI_DPSIT_NTFC SET
                LAST_CHPR_ID = #{lastChprId}
                , LAST_CHG_DTTM = SYSTIMESTAMP
                , DEL_YN = 'N'
                , CSTM_CD = #{cstmCd}
                , TXPR_IDFY_NO_TP_CD = #{txprIdfyNoTpCd}
                , TXPR_IDFY_NO_TP_NM = (SELECT CD_VDVAL_NM FROM TB_COM_COMN_CD_D_LANG WHERE COMN_CD = 'COL_0006' AND LANG_CD = #{langCd} AND CD_VDVAL = #{txprIdfyNoTpCd})
                , TXPR_IDFY_NO = #{txprIdfyNo}
                , TXPR_NM = #{txprNm}
                , DPSTM_PT_CD = #{dpstmPtCd}
                , REFF_NO = #{reffNo}
                , REFF_DOC_RGSR_DT = TO_CHAR(TO_DATE(#{reffDocRgsrDt},'DD/MM/YYYY'),'YYYYMMDD')
                , DPSIT_AMT = #{dpsitAmt}
                , RGSR_RSN_CN = #{rgsrRsnCn}
                , DEPT_CD = #{deptCd}
                , DPSIT_PT_CD = #{dpsitPtCd}
            WHERE NTFC_NO = #{ntfcNo}
                returning *
        )
        INSERT INTO TB_COLI_DPSIT_NTFC
        (
            NTFC_NO
            , CSTM_CD
            , TXPR_IDFY_NO_TP_CD
            , TXPR_IDFY_NO_TP_NM
            , TXPR_IDFY_NO
            , TXPR_NM
            , DPSTM_PT_CD
            , REFF_NO
            , REFF_DOC_RGSR_DT
            , DPSIT_AMT
            , RGSR_RSN_CN
            , DEL_YN
            , FRST_REGST_ID
            , FRST_CHG_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
            , DEPT_CD
            , DPSIT_PT_CD
        )
        SELECT
            #{ntfcNo}
            , #{cstmCd}
            , #{txprIdfyNoTpCd}
            , (SELECT CD_VDVAL_NM FROM TB_COM_COMN_CD_D_LANG WHERE COMN_CD = 'COL_0006' AND LANG_CD = #{langCd} AND CD_VDVAL = #{txprIdfyNoTpCd})
            , #{txprIdfyNo}
            , #{txprNm}
            , #{dpstmPtCd}
            , #{reffNo}
            , TO_CHAR(TO_DATE(#{reffDocRgsrDt},'DD/MM/YYYY'),'YYYYMMDD')
            , #{dpsitAmt}
            , #{rgsrRsnCn}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
            , #{deptCd}
            , #{dpsitPtCd}
        WHERE NOT EXISTS(select * from upsert)
    </insert>

    <!--
    Consultation de l'avis de paiement !==고지테이블 고지번호 조회==!
    -->
    <select id="selectColNtfcNoYnCnt" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="java.lang.Integer">
        /** colDpstmMgmt_selectColNtfcNoYnCnt */
        SELECT
            COUNT(1) AS CNT
        FROM  TB_COLI_NTFC
        WHERE DEL_YN = 'N'
          AND NTFC_NO = #{ntfcNo}
    </select>

    <!--
    Consulter le numéro d'avis de paiement de la consignation !==공탁금 고지번호 조회==!
    -->
    <select id="selectDpstmNtfcNoYnCnt" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="java.lang.Integer">
        /** colDpstmMgmt_selectDpstmNtfcNoYnCnt */
        SELECT
            COUNT(1) AS CNT
        FROM  TB_COLI_DPSIT_NTFC
        WHERE DEL_YN = 'N'
          AND NTFC_NO = #{ntfcNo}
    </select>

    <!--
    Créer un numéro d'avis de paiement !==고지번호 생성==!
    -->
    <select id="selectColNtfcNoCreate" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="java.lang.String">
        /** colDpstmMgmt_selectColNtfcNoCreate */
        SELECT #{cstmCd}||TO_CHAR(SYSTIMESTAMP,'YYYY')||'GEN'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(NTFC_NO, 13, 6))),0)+1, 6, '0')||'I' FROM TB_COLI_NTFC
    </select>

    <!--
    Traitement de la suppression de la consignation !==공탁금 삭제 처리==!
    -->
    <update id="deleteDpstmMgmt" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_deleteDpstmMgmt */
        UPDATE  TB_COLI_DPSIT_NTFC SET
            DEL_YN = 'Y'
            , LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE DEL_YN = 'N'                                                  /** Suppression ON !== 삭제여부 ==! */
          AND NTFC_NO = #{ntfcNo}
    </update>
    <!--
    Créer un avis de paiement pour le reste à recouvrer(Saisir le numéro d'avis de paiement supplémentaire) !==징수대상잔액 고지서생성(추가고지번호입력)==!
    -->
    <update id="updateDpstmMgmt" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_updateDpstmMgmt */
        UPDATE  TB_COLI_DPSIT_NTFC SET
            ADIT_NTFC_NO = #{ntfcNo} /*추가고지번호*/
                                     , LAST_CHPR_ID = #{lastChprId}
                                     , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE DEL_YN = 'N'                                                  /** Suppression ON !== 삭제여부 ==! */
          AND NTFC_NO = #{aditNtfcNo}
    </update>
    <!--
    Traitement de la suppression de la table de l'avis de paiement !==고지테이블 삭제 처리==!
    -->
    <update id="deleteColNtfcNo" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_deleteColNtfcNo */
        UPDATE  TB_COLI_NTFC SET
            DEL_YN = 'Y'
            , LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE DEL_YN = 'N'                                                  /** Suppression ON !== 삭제여부 ==! */
          AND NTFC_NO = #{ntfcNo}
    </update>

    <!--
    Vérification de l'existence du numéro d'avis de paiement !==고지번호 유무 확인 ==!
    -->
    <select id="selectColNtfcNoCnt" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="int">
        /** colDpstmMgmt_selectColNtfcNoCnt */
        SELECT COUNT(*)
        FROM   TB_COLI_NTFC
        WHERE  NTFC_NO = #{reffNo}
          AND    DEL_YN  = 'N'
    </select>

    <!--
    Vérification de l'existence du numéro d'affaire judiciaire !==소송번호 유무 확인 ==!
    -->
    <select id="selectColSuitNoCnt" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="int">
        /** colDpstmMgmt_selectColSuitNoCnt */
        SELECT COUNT(*)
        FROM   TB_COLI_NTFC
        WHERE  NTFC_NO = #{reffNo}
          AND    DEL_YN  = 'N'
    </select>


    <!--
    Traitement de la modification de l'état de table de l'avis de paiement !==고지테이블 상태 변경 처리==!
    -->
    <update id="updateColFineNtshCret" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_updateColFineNtshCret */
        UPDATE  TB_COLI_NTFC SET
            NTFC_PRCS_STTS_CD = 'H01'
            , NTFC_DT =  TO_CHAR(SYSDATE, 'YYYYMMDD')
            , LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE  DEL_YN = 'N'                                                  /** Suppression ON !== 삭제여부 ==! */
          AND NTFC_NO = #{ntfcNo}
    </update>

    <!--
    Consulter la liste des montants de la consignation !==공탁금 금액 목록을 조회한다 ==!
    -->
    <select id="selectDpstmAmtLst" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_selectDpstmAmtLst **/
        <include refid="pagination.header" />
        SELECT
                TAX.TAX_CD                                                          /** Code De Taxe !== 세금코드  ==! */
                , SUM(TAX.PAY_TAX_AMT) AS PAY_TAX_AMT                                  /** Montant des taxes à payer !== 납부세금금액 ==! */
        FROM TB_COLI_NTFC NTFC
            , TB_CLRI_DED_TAX TAX
        WHERE TAX.DEL_YN  = 'N'
        AND NTFC.DCLR_NO = TAX.DTL_DCSH_NO
        AND NTFC.NTFC_PT_CD = 'C'
        -- AND TAX.PDLS_NO = (SELECT MAX(PDLS_NO) FROM TB_CLRI_DED_TAX WHERE DTL_DCSH_NO = TAX.DTL_DCSH_NO AND DEL_YN = 'N')
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND NTFC.NTFC_NO = #{ntfcNo}
        </if>
        GROUP BY TAX.TAX_CD
        <include refid="pagination.footer" />
    </select>


    <!--
    Modifier l'avis de paiement de la consignation !==공탁금 고지 수정한다==!
    -->
    <update id="updateDpsitLqdtRgsr" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo">
        /** colDpstmMgmt_updateDpsitLqdtRgsr */
        UPDATE TB_COLI_DPSIT_NTFC SET
            LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
            <if test='dtrmPtCd != null and dtrmPtCd !="" '>
                , DTRM_PT_CD = #{dtrmPtCd}
            </if>
            <if test='dtrmPtCdNm != null and dtrmPtCdNm !="" '>
                , DTRM_PT_CD_NM = #{dtrmPtCdNm}
            </if>
            <if test='dtrmNo != null and dtrmNo !="" '>
                , DTRM_NO = #{dtrmNo}
            </if>
            <if test='dtrmDt != null and dtrmDt !="" '>
                , DTRM_DT = TO_CHAR(TO_DATE(#{dtrmDt},'DD/MM/YYYY'),'YYYYMMDD')
            </if>
            <if test='dtrmRegstId != null and dtrmRegstId !="" '>
                , DTRM_REGST_ID = #{dtrmRegstId}
            </if>
            <if test='lqdtTrgtAmt != null and lqdtTrgtAmt !="" '>
                , LQDT_TRGT_AMT = #{lqdtTrgtAmt}
            </if>
            <if test='drwbTrgtAmt != null and drwbTrgtAmt !="" '>
                , DRWB_TRGT_AMT = #{drwbTrgtAmt}
            </if>
            <if test='coltTrgtAmt != null and coltTrgtAmt !="" '>
                , COLT_TRGT_AMT = #{coltTrgtAmt}
            </if>
            <if test='dtrmIttNm != null and dtrmIttNm !="" '>
                , DTRM_ITT_NM = #{dtrmIttNm}
            </if>
        WHERE NTFC_NO = #{ntfcNo}
    </update>

    <!--
    Consulter la liste des apurements de consignation !==공탁 청산 금액 상세 내역을 조회한다==!
    -->
    <select id="selectDpstmLqdtAmtDtlList" parameterType="alpass.ipt.col.dpstm.vo.ColDpstmMgmtVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshAmtVo">
        /** colDpstmMgmt_selectDpstmLqdtAmtDtlList **/
        <include refid="pagination.header" />
            <if test='dtrmPtCd != null and dtrmPtCd !="" '>
                SELECT
                    TAX.TAX_CD                                                         /** Code De Taxe !== 세금코드  ==! */
                    , NTFC.NTFC_NO
                    , TAX.TAX_AMT AS PAY_TAX_AMT                                  /** Montant des taxes à payer !== 납부세금금액 ==! */
                FROM TB_COLI_NTFC NTFC
                   , TB_COLI_DPSIT_LQDT_AMT_DTL TAX
                WHERE TAX.DEL_YN  = 'N'
                AND NTFC.NTFC_NO = TAX.NTFC_NO
                <if test='ntfcNo != null and ntfcNo !="" '>
                    AND NTFC.NTFC_NO = #{ntfcNo}
                </if>
            </if>
            <if test='dtrmPtCd == null or dtrmPtCd =="" '>
                SELECT
                    TAX.TAX_CD                                                         /** Code De Taxe !== 세금코드  ==! */
                    , NTFC.NTFC_NO
                    , SUM(TAX.PAY_TAX_AMT) AS PAY_TAX_AMT                                 /** Montant des taxes à payer !== 납부세금금액 ==! */
                FROM TB_COLI_NTFC NTFC
                    , TB_CLRI_DED_TAX TAX
                WHERE TAX.DEL_YN  = 'N'
                AND NTFC.DCLR_NO = TAX.DTL_DCSH_NO
                -- AND TAX.PDLS_NO = (SELECT MAX(PDLS_NO) FROM TB_CLRI_DED_TAX WHERE DTL_DCSH_NO = TAX.DTL_DCSH_NO AND DEL_YN = 'N')
                <if test='ntfcNo != null and ntfcNo !="" '>
                    AND NTFC.NTFC_NO = #{ntfcNo}
                </if>
                GROUP BY TAX.TAX_CD, NTFC.NTFC_NO
            </if>
        <include refid="pagination.footer" />
    </select>


    <!--
    Enregistrer l'apurement de consignation !==공탁청산 등록한다==!
    -->
    <insert id="insertDpstmLqdtAmtDtlList" parameterType="alpass.ipt.col.ntsh.vo.ColNtshAmtVo">
        /** colDpstmMgmt_insertDpstmLqdtAmtDtlList */
        with upsert as
        (
            UPDATE TB_COLI_DPSIT_LQDT_AMT_DTL SET
                    TAX_CD = #{taxCd}
                    ,TAX_AMT = #{payTaxAmt}
                    ,DEL_YN = 'N'
                    ,LAST_CHPR_ID = #{lastChprId}
                    ,LAST_CHG_DTTM = SYSTIMESTAMP
            WHERE NTFC_NO = #{ntfcNo}
            AND   TAX_CD = #{taxCd}
                returning *
        )
        INSERT INTO TB_COLI_DPSIT_LQDT_AMT_DTL
        (
            NTFC_NO
            ,TAX_CD
            ,TAX_AMT
            ,DEL_YN
            ,FRST_REGST_ID
            ,FRST_CHG_DTTM
            ,LAST_CHPR_ID
            ,LAST_CHG_DTTM
        )
        SELECT
            #{ntfcNo}
             ,#{taxCd}
             ,#{payTaxAmt}
             , 'N'
             , #{frstRegstId}
             , SYSTIMESTAMP
             , #{lastChprId}
             , SYSTIMESTAMP
            WHERE NOT EXISTS(select * from upsert)
    </insert>

    <!--
    Traitement après l'approbation !== 결재 후처리 ==! updateAcntOpMgmtAprvId
    -->
    <update id="updateDpstmAprvId" parameterType="alpass.ipt.col.ntsh.vo.ColNtshAmtVo">
        /* ColAcntMgmtMapper_updateDpstmAprvId */
        UPDATE TB_COLI_DPSIT_NTFC
        SET APRV_ID = #{aprvId}                           /* ID d'approbation  !== 결재ID ==! */
          , LAST_CHPR_ID = #{lastChprId}
          , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE NTFC_NO = #{ntfcNo}
    </update>


</mapper>