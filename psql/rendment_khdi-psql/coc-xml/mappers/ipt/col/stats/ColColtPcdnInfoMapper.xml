<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="alpass.ipt.col.stats.mapper.ColColtPcdnInfoMapper">

    <!--
    Consulter la liste des encaissements par période !== 기간별 수납 목록 조회 ==!
    -->
    <select id="selectPridPrRcvePcdnList" parameterType="alpass.ipt.col.stats.vo.ColPridPrRcvePcdnSrchVo" resultType="alpass.ipt.col.stats.vo.ColPridPrRcvePcdnSrchVo">
        /* selectPridPrRcvePcdnList */
		<include refid="pagination.header" />
				SELECT (SELECT 	B.ORGN_CD
						FROM 	TB_POTI_ORGN B,
								TB_POTI_ORGN C
						WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
							AND C.ORGN_CD           = A.CSTM_CD
							AND B.DEL_YN            = 'N'
							AND C.DEL_YN            = 'N'
						) AS SCTR_CD
					, (	SELECT 	B.ORGN_NM
						FROM 	TB_POTI_ORGN B,
								TB_POTI_ORGN C
						WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
							AND C.ORGN_CD           = A.CSTM_CD
							AND B.DEL_YN            = 'N'
							AND C.DEL_YN            = 'N'
					) AS SCTR_NM
					, A.CSTM_CD AS CSTM_CD
					, B.ORGN_NM AS CSTM_NM
					, A.DEPT_CD
					, MAX(A.NTFC_NO) AS NTFC_NO
					, (SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.DEPT_CD) AS DEPT_NM
					, A.RCVE_DT AS NTFC_DT
					, SUM(A.NTFC_CNT) AS NTFC_SUM_CNT
					, SUM(A.NTFC_AMT) AS NTFC_SUM_AMT
					, SUM(A.RCVE_CNT) AS RCVE_SUM_CNT
					, SUM(A.RCVE_AMT) AS RCVE_SUM_AMT
					, SUM(A.NRCVE_CNT) AS NRCVE_SUM_CNT
					, SUM(A.NRCVE_AMT) AS NRCVE_SUM_AMT
					, ROUND((SUM(A.RCVE_CNT)/SUM(A.NTFC_CNT))*100, 5) AS CNT_RATE
					, ROUND((SUM(A.RCVE_AMT)/SUM(A.NTFC_AMT))*100, 5) AS AMT_RATE
			 FROM
            (
			    /********************************************************************************/
			    /* 원고지기준 : 체납가산금 정보는 모두 제외함                                   */
			    /* 통계산정시 해당 계좌일련번호가(AC_SRNO)가 체납가산금액 부과대상 AC_SRNO라면  */
			    /* 해당 계좌일련번호에 부과된 체납가산금 금액은 빼고 산정함                     */
			    /********************************************************************************/
			    SELECT 	  CSTM_CD
						, DEPT_CD
		                , NTFC_PT_CD
						, LISTAGG(RCVE_DT, ',') AS RCVE_DT
						, COUNT(DISTINCT NTFC_NO) AS NTFC_CNT
						, SUM(NTFC_AMT) AS NTFC_AMT
						, COUNT(DISTINCT DECODE(RCVE_YN, 'Y', NTFC_NO)) AS RCVE_CNT
						, SUM(DECODE(RCVE_YN, 'Y', NTFC_AMT, 0)) AS RCVE_AMT
						, COUNT(DISTINCT DECODE(RCVE_YN, 'N', NTFC_NO)) AS NRCVE_CNT
						, SUM(DECODE(RCVE_YN, 'N', NTFC_AMT, 0)) AS NRCVE_AMT
						, MAX(NTFC_NO) AS NTFC_NO
			    FROM
			    (
				    SELECT A.CSTM_CD,
						   A.DEPT_CD,
						   A.NTFC_PT_CD,
						   TO_CHAR(TO_DATE(AA.RCVE_DT, 'YYYY/MM/DD'),'YYYY') AS RCVE_DT,
				           A.NTFC_NO,
				           A.TAMT AS NTFC_AMT,                                     /* 전체고지금액-체납금액제외 */
				           A.RCVE_YN
				    FROM TB_COLI_NTFC A, TB_COLI_RCVE AA
				    WHERE 1 = 1
					AND   A.NTFC_NO = AA.NTFC_NO (+)
						<if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
						AND   A.NTFC_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
						</if>
						<if test='ntfcPtCdList != null and ntfcPtCdList.size() > 0'>
						AND   A.NTFC_PT_CD IN <foreach collection="ntfcPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
						</if>
						<if test='rcveNo != null and rcveNo !="" '>
							AND AA.RCVE_NO = #{rcveNo}
						</if>
					AND A.CNCL_YN = 'N'
					AND A.DEL_YN  = 'N'
				    UNION ALL
				    /********************************************************************************/
				    /* 체납가산금기준                                                               */
				    /* 체납일자(DLPY_DT)를 고지일자로 가정하여 통계 산정함.                         */
				    /* 체납은 최종차수 기준으로 통계 산정함, 즉 이전 차수 고지서는 소멸된 것으로 함.*/
				    /********************************************************************************/
				    SELECT A.CSTM_CD,
						   A.DEPT_CD,
						   A.NTFC_PT_CD,
						   TO_CHAR(TO_DATE(AA.RCVE_DT, 'YYYY/MM/DD'),'YYYY') AS RCVE_DT,
				           A.NTFC_NO,
				           A.DLPY_INST_AMT AS NTFC_AMT,
				           A.RCVE_YN
				    FROM TB_COLI_NTFC A, TB_COLI_RCVE AA
				    WHERE 1 = 1
					AND   A.NTFC_NO = AA.NTFC_NO (+)
						<if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
						AND   A.DLPY_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
						</if>
						<if test='ntfcPtCdList != null and ntfcPtCdList.size() > 0'>
						AND   A.NTFC_PT_CD IN <foreach collection="ntfcPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
						</if>
						<if test='rcveNo != null and rcveNo !="" '>
							AND AA.RCVE_NO = #{rcveNo}
						</if>
						AND A.DEL_YN  = 'N'
						AND A.CNCL_YN = 'N'
						AND A.DLPY_INST_AMT > 0
				)
			    GROUP BY CSTM_CD, DEPT_CD, NTFC_PT_CD
			) A, TB_POTI_ORGN B
			WHERE 	A.CSTM_CD = B.ORGN_CD
			<if test="sctrCd != null and sctrCd != ''">
				AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
			</if>
			<if test='cstmCd != null and cstmCd !=""'>
				AND  A.CSTM_CD = #{cstmCd}
			</if>
			<if test='deptCd != null and deptCd !=""'>
				AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
				OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
				OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
						 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
			</if>
			GROUP BY A.CSTM_CD, A.DEPT_CD, A.RCVE_DT, B.ORGN_NM
			ORDER BY 1, 2, 3
		<include refid="pagination.footer" />
    </select>

	<!--
    Historique des encaissements par catégorie !== 세목별수납현황 조회 ==!
    -->
	<select id="selectColStatsTxtmList" parameterType="alpass.ipt.col.stats.vo.ColStatsTxtmVo" resultType="alpass.ipt.col.stats.vo.ColStatsTxtmVo">
		/* selectColStatsTxtmList */
		<include refid="pagination.header" />
		SELECT 	  AA.SCTR_CD
		    	, FN_GET_ORGN_NM(AA.SCTR_CD) AS SCTR_NM
		     	, AA.CSTM_CD
				, FN_GET_ORGN_NM(AA.CSTM_CD) AS CSTM_NM
				, AA.RCVE_AMT
		FROM	(
			SELECT (
				SELECT  B.ORGN_CD
				FROM 	TB_POTI_ORGN B, TB_POTI_ORGN C
				WHERE	C.HSRK_ORGN_MGMT_CD = B.ORGN_MGMT_CD
					AND C.ORGN_CD = RCVE.CSTM_CD
					AND B.DEL_YN = 'N'
					AND C.DEL_YN = 'N'
				) AS SCTR_CD
				, RCVE.CSTM_CD
				, SUM(BRKD.RCVE_AMT) AS RCVE_AMT
			FROM TB_COLI_TAX_CD_PR_RCVE_BRKD BRKD
			   , TB_COLI_RCVE RCVE
			   , TB_COLI_NTFC NTFC
			WHERE BRKD.NTFC_NO = RCVE.NTFC_NO
			  AND RCVE.NTFC_NO  = NTFC.NTFC_NO
			  AND TO_CHAR(TO_DATE(BRKD.RCVE_DT, 'YYYYMMDD'), 'MM/YYYY') = #{monthSelect}
			<if test="sctrCd != null and sctrCd != ''">
				AND RCVE.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
			</if>
			<if test='cstmCd != null and cstmCd !=""'>
				AND RCVE.CSTM_CD = #{cstmCd}
			</if>
			<if test='deptCd != null and deptCd !=""'>
				AND (RCVE.DEPT_CD = #{deptCd} OR RCVE.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
					OR RCVE.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
				OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
				AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
				CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
					 THEN NTFC.NTFC_PT_CD = 'A'
					 ELSE NTFC.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
				END
				ELSE TRUE END
			</if>
			GROUP BY RCVE.CSTM_CD
		) AA
		<include refid="pagination.footer" />
	</select>


	<!--
    Consulter les détails de l'état actuel des encaissements par catégorie avec le code de compte comptable !== 계정코드로 세목별수납현황 상세조회 ==!
    -->
	<select id="selectColStatsTxtmDtlByAccdCd" parameterType="alpass.ipt.col.stats.vo.ColStatsTxtmVo" resultType="alpass.ipt.col.stats.vo.ColStatsTxtmVo">
		/* selectColStatsTxtmDtlByAccdCd */
		WITH TMP AS (
			SELECT 	  A.ACCT_CD
					, A.ACCT_DTL_CD
					, A.TAX_CD_NM
					, A.TAX_CD
					, C.PART_DIVS_BASE_DESC
					, A.RCVE_AMT AS RCVE_AMT
					, NVL(	CASE WHEN INSTR(C.PART_DIVS_BASE_DESC, '/') = 0 THEN A.RCVE_AMT
							ELSE A.RCVE_AMT * TO_NUMBER(SUBSTR(C.PART_DIVS_BASE_DESC, 1, INSTR(C.PART_DIVS_BASE_DESC, '/') -1)) / TO_NUMBER(SUBSTR(C.PART_DIVS_BASE_DESC, INSTR(C.PART_DIVS_BASE_DESC, '/') +1, CHAR_LENGTH(C.PART_DIVS_BASE_DESC) -1))
					END, 0) AS THIS_RCVE_AMT
					, NVL(	CASE WHEN INSTR(C.PART_DIVS_BASE_DESC, '/') = 0 THEN B.RCVE_AMT
							ELSE B.RCVE_AMT * TO_NUMBER(SUBSTR(C.PART_DIVS_BASE_DESC, 1, INSTR(C.PART_DIVS_BASE_DESC, '/') -1)) / TO_NUMBER(SUBSTR(C.PART_DIVS_BASE_DESC, INSTR(C.PART_DIVS_BASE_DESC, '/') +1, CHAR_LENGTH(C.PART_DIVS_BASE_DESC) -1))
					END, 0) AS BEFO_RCVE_AMT
					, CASE WHEN INSTR(C.PART_DIVS_BASE_DESC, '/') = 0 THEN TO_NUMBER(C.PART_DIVS_BASE_DESC)
					ELSE TO_NUMBER(SUBSTR(C.PART_DIVS_BASE_DESC, 1, INSTR(C.PART_DIVS_BASE_DESC, '/') -1))
					END AS DIST_RATIO
			FROM (
				SELECT	  ACCT_CD
						, ACCT_DTL_CD
						, TAX_CD_NM
						, TAX_CD
						, SUM(RCVE_AMT) AS RCVE_AMT
						, SNB_TP_CD
				FROM (	SELECT	  NVL(SCTR_CD, CSTM_CD) AS SCTR_CD
								, FN_GET_ORGN_NM(NVL(SCTR_CD, CSTM_CD)) AS SCTR_NM
								, CSTM_CD
								, FN_GET_ORGN_NM(CSTM_CD) AS CSTM_NM
								, ACCT_CD
								, ACCT_DTL_CD
								, TAX_CD_NM
								, TAX_CD
								, RCVE_DT
								, RCVE_AMT
								, SNB_TP_CD
						FROM (	SELECT	(	SELECT  B.ORGN_CD
											FROM 	TB_POTI_ORGN B, TB_POTI_ORGN C
											WHERE	C.HSRK_ORGN_MGMT_CD = B.ORGN_MGMT_CD
											AND C.ORGN_CD = RCVE.RCVE_CSTM_CD
											AND B.DEL_YN = 'N'
											AND C.DEL_YN = 'N'
										) AS SCTR_CD
										, RCVE.RCVE_CSTM_CD AS CSTM_CD
										, RCVE.ACCT_CD
										, RCVE.ACCT_DTL_CD
										, RCVE.RCVE_DT
										, TAXD.TAX_CD
										, TAXD.TAX_CD_NM
										, NVL(RCVE.RCVE_AMT, 0) AS RCVE_AMT
										, SNB_TP_CD
								FROM  TB_COLI_TAX_CD_PR_RCVE_BRKD RCVE
									, TB_CLRI_TAX_CD TAXD
									, TB_COLI_NTFC NTFC
								WHERE 	REPLACE(RCVE.TAX_CD, '.', '')  = REPLACE(TAXD.TAX_CD, '.', '')
									AND RCVE.NTFC_NO = NTFC.NTFC_NO
									AND TAXD.DEL_YN  = 'N'
									AND RCVE.DEL_YN  = 'N'
									AND NTFC.DEL_YN  = 'N'
									AND RCVE.RCVE_CSTM_CD = #{cstmCd}
									<if test='acctCdList != null and acctCdList.size() > 0'>
										AND   RCVE.ACCT_CD IN <foreach collection="acctCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
									</if>
									AND ABS(RCVE.RCVE_AMT) > 0
									AND TO_CHAR(TO_DATE(RCVE.RCVE_DT, 'YYYYMMDD'), 'MM/YYYY') = #{monthSelect}
					)
				)
				-- GROUP BY GROUPING SETS ((SCTR_CD, SCTR_NM, CSTM_CD, CSTM_NM, ACCT_CD), (SCTR_CD, SCTR_NM, CSTM_CD, CSTM_NM, ACCT_CD, ACCT_DTL_CD, TAX_CD_NM, TAX_CD))
				GROUP BY ((SCTR_CD, SCTR_NM, CSTM_CD, CSTM_NM, ACCT_CD, ACCT_DTL_CD, TAX_CD_NM, TAX_CD, SNB_TP_CD))
			) A FULL OUTER JOIN (
			SELECT	  ACCT_CD
					, ACCT_DTL_CD
					, TAX_CD_NM
					, TAX_CD
					, SUM(RCVE_AMT) RCVE_AMT
					, SNB_TP_CD
			FROM (	SELECT	  NVL(SCTR_CD, CSTM_CD) AS SCTR_CD
							, FN_GET_ORGN_NM(NVL(SCTR_CD, CSTM_CD)) AS SCTR_NM
							, CSTM_CD
							, FN_GET_ORGN_NM(CSTM_CD) AS CSTM_NM
							, ACCT_CD
							, ACCT_DTL_CD
							, TAX_CD_NM
							, TAX_CD
							, RCVE_DT
							, RCVE_AMT
							, SNB_TP_CD
					FROM (	SELECT	(	SELECT  B.ORGN_CD
										FROM 	TB_POTI_ORGN B, TB_POTI_ORGN C
										WHERE	C.HSRK_ORGN_MGMT_CD = B.ORGN_MGMT_CD
											AND C.ORGN_CD = RCVE.RCVE_CSTM_CD
											AND B.DEL_YN = 'N'
											AND C.DEL_YN = 'N'
									) AS SCTR_CD
									, RCVE.RCVE_CSTM_CD AS CSTM_CD
									, RCVE.ACCT_CD
									, RCVE.ACCT_DTL_CD
									, RCVE.RCVE_DT
									, TAXD.TAX_CD
									, TAXD.TAX_CD_NM
									, NVL(RCVE.RCVE_AMT, 0) AS RCVE_AMT
									, SNB_TP_CD
							FROM  TB_COLI_TAX_CD_PR_RCVE_BRKD RCVE
								, TB_CLRI_TAX_CD TAXD
								, TB_COLI_NTFC NTFC
							WHERE 	REPLACE(RCVE.TAX_CD, '.', '')  = REPLACE(TAXD.TAX_CD, '.', '')
								AND RCVE.NTFC_NO = NTFC.NTFC_NO
								AND TAXD.DEL_YN  = 'N'
								AND RCVE.DEL_YN  = 'N'
								AND NTFC.DEL_YN  = 'N'
								AND RCVE.RCVE_CSTM_CD = #{cstmCd}
								<if test='acctCdList != null and acctCdList.size() > 0'>
									AND   RCVE.ACCT_CD IN <foreach collection="acctCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
								</if>
								AND ABS(RCVE.RCVE_AMT) > 0
								AND TO_CHAR(TO_DATE(RCVE.RCVE_DT, 'YYYYMMDD'), 'MM/YYYY') = TO_CHAR(ADD_MONTHS(TO_DATE(#{monthSelect}, 'MM/YYYY'), -1), 'MM/YYYY')
					)
			)
			-- GROUP BY GROUPING SETS ((SCTR_CD, SCTR_NM, CSTM_CD, CSTM_NM, ACCT_CD), (SCTR_CD, SCTR_NM, CSTM_CD, CSTM_NM, ACCT_CD, ACCT_DTL_CD, TAX_CD_NM, TAX_CD))
			GROUP BY ((SCTR_CD, SCTR_NM, CSTM_CD, CSTM_NM, ACCT_CD, ACCT_DTL_CD, TAX_CD_NM, TAX_CD, SNB_TP_CD))
			) B
			ON A.ACCT_CD = B.ACCT_CD AND A.ACCT_DTL_CD = B.ACCT_DTL_CD AND A.TAX_CD = B.TAX_CD
			JOIN TB_COLI_CLTD_ACCT_CD C ON A.ACCT_CD = C.ACCT_CD AND A.ACCT_DTL_CD = C.ACCT_DTL_CD AND A.TAX_CD = C.TAX_CD AND A.SNB_TP_CD = C.SNB_TP_CD
		)
		SELECT * FROM TMP
		UNION ALL
		SELECT 	  NULL AS ACCT_CD
				, NULL AS ACCT_DTL_CD
				, FN_GET_LBL_NM('L_SUM_AMT', #{langCd}) AS TAX_CD_NM
				, NULL AS TAX_CD
				, NULL AS PART_DIVS_BASE_DESC
				, SUM(RCVE_AMT) AS RCVE_AMT
				, SUM(THIS_RCVE_AMT) AS THIS_RCVE_AMT
				, SUM(BEFO_RCVE_AMT) AS BEFO_RCVE_AMT
				, NULL AS DIST_RATIO
		FROM TMP
		ORDER BY ACCT_CD, ACCT_DTL_CD ASC
	</select>

	<!--
	Consulter les détails de l'état actuel des encaissements par catégorie avec le code de taxe !== 세금코드로 세목별수납현황 상세조회 ==!
	-->
	<select id="selectColStatsTxtmDtlByTaxCd" parameterType="alpass.ipt.col.stats.vo.ColStatsTxtmVo" resultType="alpass.ipt.col.stats.vo.ColStatsTxtmVo">
		/* selectColStatsTxtmDtlByTaxCd */
		SELECT	  TAX_CD_NM
				, TAX_CD
				, '100' AS DIST_RATIO
				, SUM(RCVE_AMT) AS RCVE_AMT
				, SUM(RCVE_AMT) AS THIS_RCVE_AMT
				, SUM(BEFO_RCVE_AMT) AS BEFO_RCVE_AMT
		FROM (	SELECT 	  NVL(SCTR_CD, CSTM_CD) AS SCTR_CD
						, FN_GET_ORGN_NM(NVL(SCTR_CD, CSTM_CD)) AS SCTR_NM
						, CSTM_CD
						, FN_GET_ORGN_NM(CSTM_CD) AS CSTM_NM
						, ACCT_CD
						, ACCT_DTL_CD
						, TAX_CD_NM
						, TAX_CD
						, RCVE_AMT
						, BEFO_RCVE_AMT
				FROM (	SELECT	(	SELECT  B.ORGN_CD
									FROM 	TB_POTI_ORGN B, TB_POTI_ORGN C
									WHERE	C.HSRK_ORGN_MGMT_CD = B.ORGN_MGMT_CD
										AND C.ORGN_CD = RCVE.RCVE_CSTM_CD
										AND B.DEL_YN = 'N'
										AND C.DEL_YN = 'N'
								) AS SCTR_CD
								, RCVE.RCVE_CSTM_CD AS CSTM_CD
								, RCVE.ACCT_CD
								, RCVE.ACCT_DTL_CD
								, RCVE.RCVE_DT
								, TAXD.TAX_CD
								, TAXD.TAX_CD_NM
								, NVL(RCVE.RCVE_AMT, 0) AS RCVE_AMT
								, NVL(PREMONTH.RCVE_AMT, 0) AS BEFO_RCVE_AMT
						FROM  TB_COLI_TAX_CD_PR_RCVE_BRKD RCVE
							, TB_CLRI_TAX_CD TAXD
							, TB_COLI_NTFC NTFC
							, (
								SELECT	(	SELECT  B.ORGN_CD
											FROM 	TB_POTI_ORGN B, TB_POTI_ORGN C
											WHERE	C.HSRK_ORGN_MGMT_CD = B.ORGN_MGMT_CD
												AND C.ORGN_CD = RCVE.RCVE_CSTM_CD
												AND B.DEL_YN = 'N'
												AND C.DEL_YN = 'N'
										) AS SCTR_CD
										, RCVE.RCVE_CSTM_CD AS CSTM_CD
										, RCVE.ACCT_CD
										, RCVE.ACCT_DTL_CD
										, RCVE.RCVE_DT
										, TAXD.TAX_CD
										, TAXD.TAX_CD_NM
										, RCVE.RCVE_AMT AS RCVE_AMT
								FROM  TB_COLI_TAX_CD_PR_RCVE_BRKD RCVE
									, TB_CLRI_TAX_CD TAXD
									, TB_COLI_NTFC NTFC
								WHERE 	REPLACE(RCVE.TAX_CD, '.', '')  = REPLACE(TAXD.TAX_CD, '.', '')
									AND RCVE.NTFC_NO = NTFC.NTFC_NO
									AND TAXD.DEL_YN  = 'N'
									AND RCVE.DEL_YN  = 'N'
									AND NTFC.DEL_YN  = 'N'
									AND RCVE.RCVE_CSTM_CD = #{cstmCd}
									AND REPLACE(RCVE.TAX_CD, '.', '')  = REPLACE(#{taxCd}, '.', '')
									AND ABS(RCVE.RCVE_AMT) > 0
									AND TO_CHAR(TO_DATE(RCVE.RCVE_DT, 'YYYYMMDD'), 'MM/YYYY') = TO_CHAR(ADD_MONTHS(TO_DATE(#{monthSelect}, 'MM/YYYY'), -1), 'MM/YYYY')
							) PREMONTH
						WHERE 	REPLACE(RCVE.TAX_CD, '.', '')  = REPLACE(TAXD.TAX_CD, '.', '')
						AND RCVE.NTFC_NO = NTFC.NTFC_NO
						AND TAXD.DEL_YN  = 'N'
						AND RCVE.DEL_YN  = 'N'
						AND NTFC.DEL_YN  = 'N'
						AND RCVE.RCVE_CSTM_CD = #{cstmCd}
						AND REPLACE(RCVE.TAX_CD, '.', '')  = REPLACE(#{taxCd}, '.', '')
						AND ABS(RCVE.RCVE_AMT) > 0
						AND TO_CHAR(TO_DATE(RCVE.RCVE_DT, 'YYYYMMDD'), 'MM/YYYY') = #{monthSelect}
						AND RCVE.ACCT_CD = PREMONTH.ACCT_CD(+)
						AND RCVE.ACCT_DTL_CD = PREMONTH.ACCT_DTL_CD(+)
				)
		)
		GROUP BY ((SCTR_CD, SCTR_NM, CSTM_CD, CSTM_NM, TAX_CD_NM, TAX_CD))
	</select>

	<!--
    Consultation de l'encaissement par rapport à l'année précédente !== 전년대비수납이행현황 조회 ==!
    -->
	<select id="selectColStatsBfyearList" parameterType="alpass.ipt.col.stats.vo.ColStatsBfyearVo" resultType="alpass.ipt.col.stats.vo.ColStatsBfyearVo">
		/* selectColStatsBfyearList */
		<include refid="pagination.header" />
		SELECT  (	SELECT 	B.ORGN_CD
		        	FROM 	TB_POTI_ORGN B, TB_POTI_ORGN C
		        	WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
						AND C.ORGN_CD = CSTM_CD
						AND B.DEL_YN = 'N'
						AND C.DEL_YN = 'N'
				) AS SCTR_CD,
		    	(	SELECT 	B.ORGN_NM
					FROM 	TB_POTI_ORGN B, TB_POTI_ORGN C
					WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
						AND C.ORGN_CD = CSTM_CD
						AND B.DEL_YN = 'N'
						AND C.DEL_YN = 'N'
				) AS SCTR_NM,
		    	FN_GET_ORGN_NM(CSTM_CD) AS CSTM_NM,
				(SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = DEPT_CD) AS DEPT_NM,
				RCVE_DT,
				CSTM_CD,
				SUM(TAMT1) AS T1,
				SUM(C1) AS C1,
				SUM(TAMT2) AS T2,
				SUM(C2) AS C2,
				SUM(TAMT3) AS T3,
				SUM(C3) AS C3,
				SUM(TAMT4) AS T4,
				SUM(C4) AS C4
		FROM	(
			SELECT 	'' AS CSTM_CD,
			       	'' AS DEPT_CD,
			       	'' AS RCVE_DT,
			       	'' AS RDT,
					TO_NUMBER(#{rcveYy}) AS TAMT1,
					TO_NUMBER(#{rcveYy}) AS C1,
					TO_NUMBER(#{cmprTrgtYy1}) AS TAMT2,
					TO_NUMBER(#{cmprTrgtYy1}) AS C2,
					TO_NUMBER(#{cmprTrgtYy2}) AS TAMT3,
					TO_NUMBER(#{cmprTrgtYy2}) AS C3,
					TO_NUMBER(#{cmprTrgtYy3}) AS TAMT4,
					TO_NUMBER(#{cmprTrgtYy3}) AS C4
			FROM  DUAL
			UNION ALL
			SELECT 	A.CSTM_CD AS CSTM_CD,
					A.DEPT_CD,
			        <choose>
						<when test='inqtTpCd == "01"'>
							TO_CHAR(TO_DATE(B.RCVE_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "02"'>
							TO_CHAR(TO_DATE(SUBSTR(B.RCVE_DT, 1, 6),'YYYYMM'),'MM/YYYY') AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "03"'>
							TO_CHAR(TO_DATE(B.RCVE_DT, 'YYYYMMDD'), 'Q') ||
							( 	SELECT	LBL_NM FROM TB_COM_LBL_LANG
								WHERE  	LANG_CD = #{langCd}
									AND LBL_ID='L_QRT'
							) AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "04"'>
							TO_CHAR(TO_DATE(SUBSTR(B.RCVE_DT, 1, 4),'YYYY'),'YYYY') AS RCVE_DT,
						</when>
					</choose>
			       	B.RCVE_DT AS RDT,
			       	SUM(B.RCVE_AMT) AS TAMT1,
			       	COUNT(DISTINCT A.NTFC_NO) AS C1,
			       	0 AS TAMT2,
			       	0 AS C2,
			       	0 AS TAMT3,
			       	0 AS C3,
			       	0 AS TAMT4,
			       	0 AS C4
			FROM	TB_COLI_NTFC A , TB_COLI_RCVE B
			WHERE 	A.CNCL_YN = 'N'
				AND A.RCVE_YN = 'Y'
				AND A.DEL_YN = 'N'
				AND A.NTFC_NO = B.NTFC_NO
				AND #{rcveYy} = substr(B.RCVE_DT, 0,4) -- 수납년도 및 비교년도
				AND B.DEL_YN = 'N'
				<if test="sctrCd != null and sctrCd != ''">
					AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
				</if>
				<if test='cstmCd != null and cstmCd !=""'>
					AND  A.CSTM_CD = #{cstmCd}
				</if>
				<if test='deptCd != null and deptCd !=""'>
					AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
					OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
					OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
					AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
						 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
					ELSE TRUE END
				</if>
				<if test='ntfcPtCdList != null and ntfcPtCdList.size() > 0'>
					AND A.NTFC_PT_CD IN <foreach collection="ntfcPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
				</if>
				<if test='rcveDtFrom != null and rcveDtFrom !="" and rcveDtTo != null and rcveDtTo !="" '>
					AND B.RCVE_DT BETWEEN TO_CHAR(TO_DATE(#{rcveDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{rcveDtTo},'DD/MM/YYYY'),'YYYYMMDD')
				</if>
			GROUP BY A.CSTM_CD, B.RCVE_DT, A.DEPT_CD

			UNION ALL

			SELECT 	A.CSTM_CD AS CSTM_CD,
					A.DEPT_CD,
					<choose>
						<when test='inqtTpCd == "01"'>
							TO_CHAR(TO_DATE(B.RCVE_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "02"'>
							TO_CHAR(TO_DATE(SUBSTR(B.RCVE_DT, 1, 6),'YYYYMM'),'MM/YYYY') AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "03"'>
							TO_CHAR(TO_DATE(B.RCVE_DT, 'YYYYMMDD'), 'Q') ||
							( 	SELECT	LBL_NM FROM TB_COM_LBL_LANG
								WHERE  	LANG_CD = #{langCd}
									AND LBL_ID='L_QRT'
							) AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "04"'>
							TO_CHAR(TO_DATE(SUBSTR(B.RCVE_DT, 1, 4),'YYYY'),'YYYY') AS RCVE_DT,
						</when>
					</choose>
			       	B.RCVE_DT AS RDT,
					0 AS TAMT1,
			       	0 AS C1,
					SUM(B.RCVE_AMT) AS TAMT2,
					COUNT(DISTINCT A.NTFC_NO) AS C2,
			       	0 AS TAMT3,
			       	0 AS C3,
			       	0 AS TAMT4,
			       	0 AS C4
			FROM	TB_COLI_NTFC A , TB_COLI_RCVE B
			WHERE 	A.CNCL_YN = 'N'
				AND A.RCVE_YN = 'Y'
				AND A.DEL_YN = 'N'
				AND A.NTFC_NO = B.NTFC_NO
				AND #{cmprTrgtYy1} = substr(B.RCVE_DT, 0,4) -- 수납년도 및 비교년도
				AND B.DEL_YN = 'N'
				<if test="sctrCd != null and sctrCd != ''">
					AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
				</if>
				<if test='cstmCd != null and cstmCd !=""'>
					AND  A.CSTM_CD = #{cstmCd}
				</if>
				<if test='deptCd != null and deptCd !=""'>
					AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
					OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
					OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
					AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
						 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
					ELSE TRUE END
				</if>
				<if test='ntfcPtCdList != null and ntfcPtCdList.size() > 0'>
					AND A.NTFC_PT_CD IN <foreach collection="ntfcPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
				</if>
				<if test='rcveDtFrom != null and rcveDtFrom !="" and rcveDtTo != null and rcveDtTo !="" '>
					AND B.RCVE_DT BETWEEN TO_CHAR(TO_DATE(#{rcveDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{rcveDtTo},'DD/MM/YYYY'),'YYYYMMDD')
				</if>
			GROUP BY A.CSTM_CD, B.RCVE_DT, A.DEPT_CD

			UNION ALL

			SELECT 	A.CSTM_CD AS CSTM_CD,
					A.DEPT_CD,
					<choose>
						<when test='inqtTpCd == "01"'>
							TO_CHAR(TO_DATE(B.RCVE_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "02"'>
							TO_CHAR(TO_DATE(SUBSTR(B.RCVE_DT, 1, 6),'YYYYMM'),'MM/YYYY') AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "03"'>
							TO_CHAR(TO_DATE(B.RCVE_DT, 'YYYYMMDD'), 'Q') ||
							( 	SELECT	LBL_NM FROM TB_COM_LBL_LANG
								WHERE  	LANG_CD = #{langCd}
									AND LBL_ID='L_QRT'
							) AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "04"'>
							TO_CHAR(TO_DATE(SUBSTR(B.RCVE_DT, 1, 4),'YYYY'),'YYYY') AS RCVE_DT,
						</when>
					</choose>
			       	B.RCVE_DT AS RDT,
			       	0 AS TAMT1,
			       	0 AS C1,
			       	0 AS TAMT2,
			       	0 AS C2,
					SUM(B.RCVE_AMT) AS TAMT3,
					COUNT(DISTINCT A.NTFC_NO) AS C3,
			       	0 AS TAMT4,
			       	0 AS C4
			FROM	TB_COLI_NTFC A , TB_COLI_RCVE B
			WHERE 	A.CNCL_YN = 'N'
				AND A.RCVE_YN = 'Y'
				AND A.DEL_YN = 'N'
				AND A.NTFC_NO = B.NTFC_NO
				AND #{cmprTrgtYy2} = substr(B.RCVE_DT, 0,4) -- 수납년도 및 비교년도
				AND B.DEL_YN = 'N'
				<if test="sctrCd != null and sctrCd != ''">
					AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
				</if>
				<if test='cstmCd != null and cstmCd !=""'>
					AND  A.CSTM_CD = #{cstmCd}
				</if>
				<if test='deptCd != null and deptCd !=""'>
					AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
					OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
					OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
					AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
						 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
					ELSE TRUE END
				</if>
				<if test='ntfcPtCdList != null and ntfcPtCdList.size() > 0'>
					AND A.NTFC_PT_CD IN <foreach collection="ntfcPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
				</if>
				<if test='rcveDtFrom != null and rcveDtFrom !="" and rcveDtTo != null and rcveDtTo !="" '>
					AND B.RCVE_DT BETWEEN TO_CHAR(TO_DATE(#{rcveDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{rcveDtTo},'DD/MM/YYYY'),'YYYYMMDD')
				</if>
			GROUP BY A.CSTM_CD, B.RCVE_DT, A.DEPT_CD

			UNION ALL

			SELECT 	A.CSTM_CD AS CSTM_CD,
					A.DEPT_CD,
					<choose>
						<when test='inqtTpCd == "01"'>
							TO_CHAR(TO_DATE(B.RCVE_DT, 'YYYYMMDD'), 'DD/MM/YYYY') AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "02"'>
							TO_CHAR(TO_DATE(SUBSTR(B.RCVE_DT, 1, 6),'YYYYMM'),'MM/YYYY') AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "03"'>
							TO_CHAR(TO_DATE(B.RCVE_DT, 'YYYYMMDD'), 'Q') ||
							( 	SELECT	LBL_NM FROM TB_COM_LBL_LANG
								WHERE  	LANG_CD = #{langCd}
									AND LBL_ID='L_QRT'
							) AS RCVE_DT,
						</when>
						<when test='inqtTpCd == "04"'>
							TO_CHAR(TO_DATE(SUBSTR(B.RCVE_DT, 1, 4),'YYYY'),'YYYY') AS RCVE_DT,
						</when>
					</choose>
			       	B.RCVE_DT AS RDT,
			       	0 AS TAMT1,
			       	0 AS C1,
			       	0 AS TAMT2,
			       	0 AS C2,
			       	0 AS TAMT3,
			       	0 AS C3,
					SUM(B.RCVE_AMT) AS TAMT4,
					COUNT(DISTINCT A.NTFC_NO) AS C4
			FROM	TB_COLI_NTFC A , TB_COLI_RCVE B
			WHERE 	A.CNCL_YN = 'N'
				AND A.RCVE_YN = 'Y'
				AND A.DEL_YN = 'N'
				AND A.NTFC_NO = B.NTFC_NO
				AND #{cmprTrgtYy3} = substr(B.RCVE_DT, 0,4) -- 수납년도 및 비교년도
				AND B.DEL_YN = 'N'
				<if test="sctrCd != null and sctrCd != ''">
					AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
				</if>
				<if test='cstmCd != null and cstmCd !=""'>
					AND  A.CSTM_CD = #{cstmCd}
				</if>
				<if test='deptCd != null and deptCd !=""'>
					AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
					OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
					OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
					AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
						 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
					ELSE TRUE END
				</if>
				<if test='ntfcPtCdList != null and ntfcPtCdList.size() > 0'>
					AND A.NTFC_PT_CD IN <foreach collection="ntfcPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
				</if>
				<if test='rcveDtFrom != null and rcveDtFrom !="" and rcveDtTo != null and rcveDtTo !="" '>
					AND B.RCVE_DT BETWEEN TO_CHAR(TO_DATE(#{rcveDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{rcveDtTo},'DD/MM/YYYY'),'YYYYMMDD')
				</if>
			GROUP BY A.CSTM_CD, B.RCVE_DT, A.DEPT_CD
		)
		GROUP BY CSTM_CD, RCVE_DT, DEPT_CD
		ORDER BY CSTM_CD, RCVE_DT, DEPT_CD
		<include refid="pagination.footer" />
	</select>

	<!--
    Consulter la liste des encaissements par type d'avis de paiement !== 고지유형별 수납 목록 조회 ==!
    -->
	<select id="selectNtfcPtPrRcvePcdnList" parameterType="alpass.ipt.col.stats.vo.ColNtfcPtPrRcvePcdnSrchVo" resultType="alpass.ipt.col.stats.vo.ColNtfcPtPrRcvePcdnSrchVo">
		/* selectNtfcPtPrRcvePcdnList */
		<include refid="pagination.header" />
			SELECT (SELECT 	B.ORGN_CD
					FROM 	TB_POTI_ORGN B,
						 	TB_POTI_ORGN C
					WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
						AND C.ORGN_CD           = A.CSTM_CD
						AND B.DEL_YN            = 'N'
						AND C.DEL_YN            = 'N'
					) AS SCTR_CD
				, (	SELECT 	B.ORGN_NM
					FROM 	TB_POTI_ORGN B,
							TB_POTI_ORGN C
					WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
						AND C.ORGN_CD           = A.CSTM_CD
						AND B.DEL_YN            = 'N'
						AND C.DEL_YN            = 'N'
				) AS SCTR_NM
				, A.CSTM_CD AS CSTM_CD
				, B.ORGN_NM AS CSTM_NM
				, A.NTFC_PT_CD AS NTFC_PT_CD
				, A.DEPT_CD
				, (SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.DEPT_CD) AS DEPT_NM
				, C.CD_VDVAL_NM AS NTFC_PT_NM
				, SUM(A.NTFC_CNT) AS NTFC_SUM_CNT
				, SUM(A.NTFC_AMT) AS NTFC_SUM_AMT
				, SUM(A.RCVE_CNT) AS RCVE_SUM_CNT
				, SUM(A.RCVE_AMT) AS RCVE_SUM_AMT
				, SUM(A.NRCVE_CNT) AS NRCVE_SUM_CNT
				, SUM(A.NRCVE_AMT) AS NRCVE_SUM_AMT
				, CASE WHEN SUM(A.NTFC_CNT) = 0 THEN 0 ELSE ROUND((SUM(A.RCVE_CNT)/SUM(A.NTFC_CNT))*100, 5) END AS CNT_RATE
				, CASE WHEN SUM(A.NTFC_AMT) = 0 THEN 0 ELSE ROUND((SUM(A.RCVE_AMT)/SUM(A.NTFC_AMT))*100, 5) END AS AMT_RATE
			FROM
			(
			/********************************************************************************/
			/* 원고지기준 : 체납가산금 정보는 모두 제외함                                   */
			/* 통계산정시 해당 계좌일련번호가(AC_SRNO)가 체납가산금액 부과대상 AC_SRNO라면  */
			/* 해당 계좌일련번호에 부과된 체납가산금 금액은 빼고 산정함                     */
			/********************************************************************************/
			SELECT CSTM_CD
			, NTFC_PT_CD
			, DEPT_CD
			, COUNT(DISTINCT NTFC_NO) AS NTFC_CNT
			, SUM(NTFC_AMT) AS NTFC_AMT
			, COUNT(DISTINCT DECODE(RCVE_YN, 'Y', NTFC_NO)) AS RCVE_CNT
			, SUM(DECODE(RCVE_YN, 'Y', NTFC_AMT, 0)) AS RCVE_AMT
			, COUNT(DISTINCT DECODE(RCVE_YN, 'N', NTFC_NO)) AS NRCVE_CNT
			, SUM(DECODE(RCVE_YN, 'N', NTFC_AMT, 0)) AS NRCVE_AMT
			FROM
			(
			SELECT A.CSTM_CD,
			A.NTFC_PT_CD,
			A.DEPT_CD,
			A.NTFC_NO,
			A.TAMT AS NTFC_AMT,                                     /* 전체고지금액-체납금액제외 */                                    /* 전체고지금액-체납금액제외 */
			A.RCVE_YN
			FROM TB_COLI_NTFC A                     /* 고지 */
			WHERE 1 = 1
			<if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
				AND A.NTFC_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
			</if>
			<if test='ntfcPtCdList != null and ntfcPtCdList.size() > 0'>
				AND A.NTFC_PT_CD IN <foreach collection="ntfcPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
			</if>
			<if test="sctrCd != null and sctrCd != ''">
				AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
			</if>
			<if test='cstmCd != null and cstmCd !=""'>
				AND  A.CSTM_CD = #{cstmCd}
			</if>
			<if test='deptCd != null and deptCd !=""'>
				AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
				OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
				OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
						 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
			</if>
			AND A.CNCL_YN = 'N'
			AND A.DEL_YN  = 'N'
			UNION ALL
			/********************************************************************************/
			/* 체납가산금기준                                                               */
			/* 체납일자(DLPY_DT)를 고지일자로 가정하여 통계 산정함.                         */
			/* 체납은 최종차수 기준으로 통계 산정함, 즉 이전 차수 고지서는 소멸된 것으로 함.*/
			/********************************************************************************/
			SELECT A.CSTM_CD,
			A.NTFC_PT_CD,
			A.DEPT_CD,
			A.NTFC_NO,
			A.DLPY_INST_AMT AS NTFC_AMT,
			A.RCVE_YN
			FROM TB_COLI_NTFC A
			WHERE 1 = 1
			<if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
				AND	A.DLPY_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
			</if>
			<if test='ntfcPtCdList != null and ntfcPtCdList.size() > 0'>
				AND A.NTFC_PT_CD IN <foreach collection="ntfcPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
			</if>
			<if test="sctrCd != null and sctrCd != ''">
				AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
			</if>
			<if test='cstmCd != null and cstmCd !=""'>
				AND  A.CSTM_CD = #{cstmCd}
			</if>
			<if test='deptCd != null and deptCd !=""'>
				AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
				OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
				OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN A.NTFC_PT_CD = 'A'
						 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
			</if>
			AND A.DEL_YN  = 'N'
			AND A.CNCL_YN = 'N'
			AND A.DLPY_INST_AMT > 0
			)
			GROUP BY CSTM_CD, NTFC_PT_CD, DEPT_CD
			) A, TB_POTI_ORGN B, TB_COM_COMN_CD_D_LANG C
			WHERE A.CSTM_CD = B.ORGN_CD
			AND   A.NTFC_PT_CD = C.CD_VDVAL
			AND   C.COMN_CD = 'COL_0003'
			AND   C.LANG_CD = #{langCd}
			GROUP BY A.CSTM_CD, B.ORGN_NM, A.NTFC_PT_CD, C.CD_VDVAL_NM, A.DEPT_CD
		<include refid="pagination.footer" />
	</select>

	<!--
	Consulter la liste des encaissements par type d'avis de paiement !== 지불유형별 수납 목록 조회 ==!
	-->
	<select id="selectColPymnPtPrRcvePcdnList" parameterType="alpass.ipt.col.stats.vo.ColPymnPtPrRcvePcdnSrchVo" resultType="alpass.ipt.col.stats.vo.ColPymnPtPrRcvePcdnSrchVo">
		/* selectColPymnPtPrRcvePcdnList */
		<include refid="pagination.header" />
			SELECT 	SCTR_CD,
					SCTR_NM,
					CSTM_CD,
					CSTM_NM,
					DEPT_CD,
					DEPT_NM,
					RCVE_DT,
					PYMN_PT_CD,
					SUM(CSH_AMT) AS CSH_AMT,
					SUM(CHCK_AMT) AS CHCK_AMT,
					SUM(GRNY_BOND_AMT) AS GRNY_BOND_AMT,
					SUM(POST_ALTR_AC_AMT) AS POST_ALTR_AC_AMT,
					SUM(ELCT_PYMN_CARD_AMT+ELCT_PYMN_VIRE_AMT) AS ELCT_PYMN_AMT,
					SUM(TAMT) AS TAMT,
					SCTR_CD||NVL(CSTM_CD, 'ZZZZZ')||NVL(RCVE_DT, '31/12/9999') AS SORT_KEY
			FROM (
				SELECT 	NVL(SCTR_CD, CSTM_CD) AS SCTR_CD,
						FN_GET_ORGN_NM(NVL(SCTR_CD, CSTM_CD)) AS SCTR_NM,
						CSTM_CD,
						FN_GET_ORGN_NM(CSTM_CD) AS CSTM_NM,
						DEPT_CD,
						FN_GET_ORGN_NM(DEPT_CD) AS DEPT_NM,
						TO_CHAR(TO_DATE(SUBSTR(RCVE_DT, 1, 8),'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT,
						PYMN_PT_CD,
						CSH_AMT,
						CHCK_AMT,
						GRNY_BOND_AMT,
						POST_ALTR_AC_AMT,
						ELCT_PYMN_CARD_AMT,
						ELCT_PYMN_VIRE_AMT,
						PYMN_AMT AS TAMT
				FROM (
					<include refid="selectColPymnPtPrRcvePcdnList_include" />
				)
			)
			WHERE 1 = 1
			GROUP BY GROUPING SETS ((SCTR_CD, SCTR_NM, CSTM_CD, CSTM_NM, DEPT_CD, DEPT_NM, RCVE_DT, PYMN_PT_CD))
			ORDER BY SORT_KEY
		<include refid="pagination.footer" />
	</select>

	<sql id="selectColPymnPtPrRcvePcdnList_include">
		/* selectColPymnPtPrRcvePcdnList_include */
		SELECT (  	SELECT 	B.ORGN_CD
				  	FROM 	TB_POTI_ORGN B,
					   		TB_POTI_ORGN C
					WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
						AND C.ORGN_CD           = A.CSTM_CD
						AND B.DEL_YN            = 'N'
						AND C.DEL_YN            = 'N'
			   	) AS SCTR_CD,                   /* 섹터 */
			   	A.CSTM_CD,                      /* 세관 */
				A.DEPT_CD,
			   	A.RCVE_DT,                      /* 수납일자 */
				CASE WHEN A.RCVE_PT_CD = '003' AND 	B.PYMN_PT_CD = '001' 	THEN B.PYMN_AMT ELSE 0 END AS CSH_AMT,				/* 세관창구수납 AND 현금 : 현금 */
				CASE WHEN A.RCVE_PT_CD = '003' AND 	B.PYMN_PT_CD = '002' 	THEN B.PYMN_AMT ELSE 0 END AS CHCK_AMT,				/* 세관창구수납 AND 수표 : 수표 */
				CASE WHEN 							B.PYMN_PT_CD = '003' 	THEN B.PYMN_AMT ELSE 0 END AS GRNY_BOND_AMT,		/* TODO : 보증채권 */
				CASE WHEN 							B.PYMN_PT_CD = '005' 	THEN B.PYMN_AMT ELSE 0 END AS POST_ALTR_AC_AMT,		/* 우편대체계좌 */
				CASE WHEN A.RCVE_PT_CD = '001' AND 	B.PYMN_PT_CD IN ('006','007')	THEN B.PYMN_AMT ELSE 0 END AS ELCT_PYMN_CARD_AMT,	/* 카드수납 */
				CASE WHEN A.RCVE_PT_CD = '001' AND 	B.PYMN_PT_CD = '008'			THEN B.PYMN_AMT ELSE 0 END AS ELCT_PYMN_VIRE_AMT,	/* 계좌이체 */
				A.RCVE_PT_CD,                   /* 수납유형코드|Code de type d'encaissement : 001|전자수납|Paiement électronique, 002|은행창구수납|Paiement au guichet de banque, 003|세관창구수납|Paiement au guichet de douane */
				B.PYMN_PT_CD,                   /* 지불유형코드|Code de méthode de paiement : 001|현금|En espèce, 002|수표|Chèque, 003|보증채권|Obligations Cautionnées (Traites), 004|국고국연결계좌:CCRD TW, 005|우편대체계좌, 006|TPE, 007|CIB, 008|Virement bancaire */
				B.PYMN_AMT,
				A.NTFC_DT
		FROM (	SELECT 	A.RCVE_NO,
						MAX(B.CSTM_CD) AS CSTM_CD,
						MAX(B.DEPT_CD) AS DEPT_CD,
						MAX(A.RCVE_PT_CD) AS RCVE_PT_CD,
						MAX(A.RCVE_DT) AS RCVE_DT,
						MAX(B.NTFC_DT) AS NTFC_DT
				FROM 	TB_COLI_RCVE A,
						TB_COLI_NTFC B
				WHERE 	A.NTFC_NO  = B.NTFC_NO
					AND A.DEL_YN   = 'N'        /* 삭제여부(N) */
					AND B.CNCL_YN  = 'N'        /* 소멸여부(N) */
					AND B.DEL_YN   = 'N'        /* 삭제여부(N) */
					<if test="sctrCd != null and sctrCd != ''">
						AND  A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
					</if>
					<if test='cstmCd != null and cstmCd !=""'>
						AND  A.CSTM_CD = #{cstmCd}
					</if>
					<if test='deptCd != null and deptCd !=""'>
						AND  (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
						OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
						OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
						AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
						CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 	 THEN B.NTFC_PT_CD = 'A'
							 ELSE B.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
						END
						ELSE TRUE END
					</if>
					GROUP BY A.RCVE_NO
			) A,
			TB_COLI_PYMN B                     	/* 지불 */
		WHERE 	A.RCVE_NO = B.RCVE_NO
		  	AND B.DEL_YN = 'N' 							/* 삭제여부(N) */
			<if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
				AND   A.NTFC_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
			</if>
			<if test='pymnPtCdList != null and pymnPtCdList.size() > 0'>
				AND  B.PYMN_PT_CD IN <foreach collection="pymnPtCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
			</if>
	</sql>

	<!--
    Consulter la liste des encaissements par paiements immédiats et à crédits !==즉시납부 및 신용납부 목록 조회==!
    -->
	<select id="selectColStatsImdtList" parameterType="alpass.ipt.col.stats.vo.ColImdtPayCrdtPayLstVo" resultType="alpass.ipt.col.stats.vo.ColImdtPayCrdtPayLstVo">
		/* selectColStatsImdtList */
		<include refid="pagination.header" />
		SELECT 	(	SELECT 	B.ORGN_CD
					FROM 	TB_POTI_ORGN B,
							TB_POTI_ORGN C
					WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
						AND C.ORGN_CD           = A.CSTM_CD
						AND B.DEL_YN            = 'N'
						AND C.DEL_YN            = 'N'
				) AS SCTR_CD,
		    	(	SELECT 	B.ORGN_NM
					FROM 	TB_POTI_ORGN B,
							TB_POTI_ORGN C
					WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
						AND C.ORGN_CD           = A.CSTM_CD
						AND B.DEL_YN            = 'N'
						AND C.DEL_YN            = 'N'
				) AS SCTR_NM,
		    	A.CSTM_CD AS CSTM_CD,
		    	B.ORGN_NM AS CSTM_NM,
		    	A.DEPT_CD,
		    	(SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.DEPT_CD) AS DEPT_NM,
		    	A.RCVE_DT AS NTFC_DT,
		    	SUM(A.NTFC_CNT) AS NTFC_SUM_CNT,
		    	SUM(A.NTFC_AMT) AS NTFC_SUM_AMT,
		    	SUM(A.RCVE_CNT) AS RCVE_SUM_CNT,
		    	SUM(A.RCVE_AMT) AS RCVE_SUM_AMT,
		    	SUM(A.NRCVE_CNT) AS NRCVE_SUM_CNT,
		    	SUM(A.NRCVE_AMT) AS NRCVE_SUM_AMT,
		    	ROUND((SUM(A.RCVE_CNT)/SUM(A.NTFC_CNT))*100, 5) AS CNT_RATE,
		    	ROUND((SUM(A.RCVE_AMT)/SUM(A.NTFC_AMT))*100, 5) AS AMT_RATE,
				MAX(NTFC_NO) AS NTFC_NO
		FROM 	(
		/********************************************************************************/
		/* 원고지기준 : 체납가산금 정보는 모두 제외함                                   */
		/* 통계산정시 해당 계좌일련번호가(AC_SRNO)가 체납가산금액 부과대상 AC_SRNO라면  */
		/* 해당 계좌일련번호에 부과된 체납가산금 금액은 빼고 산정함                     */
		/********************************************************************************/
			SELECT 	CSTM_CD,
			        DEPT_CD,
		            NTFC_PT_CD,
			        LISTAGG(RCVE_DT, ',') AS RCVE_DT,
			        COUNT(DISTINCT NTFC_NO) AS NTFC_CNT,
			        SUM(NTFC_AMT) AS NTFC_AMT,
			        COUNT(DISTINCT DECODE(RCVE_YN, 'Y', NTFC_NO)) AS RCVE_CNT,
			        SUM(DECODE(RCVE_YN, 'Y', NTFC_AMT, 0)) AS RCVE_AMT,
			        COUNT(DISTINCT DECODE(RCVE_YN, 'N', NTFC_NO)) AS NRCVE_CNT,
			        SUM(DECODE(RCVE_YN, 'N', NTFC_AMT, 0)) AS NRCVE_AMT,
			        MG_TP_CD,
					MAX(NTFC_NO) AS NTFC_NO
			FROM	(
				SELECT 	A.CSTM_CD,
						A.DEPT_CD,
						A.NTFC_PT_CD,
						TO_CHAR(TO_DATE(AA.RCVE_DT, 'YYYY/MM/DD'),'YYYY') AS RCVE_DT,
						A.NTFC_NO,
						A.TAMT AS NTFC_AMT,                                     /* 전체고지금액-체납금액제외 */
						A.RCVE_YN,
						AAA.MG_TP_CD
				FROM 	TB_COLI_NTFC A, TB_COLI_RCVE AA, TB_CLRI_DED_MG AAA
				WHERE 	1 = 1
					AND A.NTFC_NO = AA.NTFC_NO (+)
					<if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
						AND   A.NTFC_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
					</if>
					AND A.CNCL_YN = 'N'
					AND A.DEL_YN  = 'N'
					AND A.DCLR_NO = AAA.DTL_DCSH_NO
					<if test='rcveNo != null and rcveNo !="" '>
						AND AA.RCVE_NO = #{rcveNo}
					</if>
				UNION ALL
				/********************************************************************************/
				/* 체납가산금기준                                                               */
				/* 체납일자(DLPY_DT)를 고지일자로 가정하여 통계 산정함.                         */
				/* 체납은 최종차수 기준으로 통계 산정함, 즉 이전 차수 고지서는 소멸된 것으로 함.*/
				/********************************************************************************/
				SELECT 	A.CSTM_CD,
						A.DEPT_CD,
						A.NTFC_PT_CD,
						TO_CHAR(TO_DATE(AA.RCVE_DT, 'YYYY/MM/DD'),'YYYY') AS RCVE_DT,
						A.NTFC_NO,
						A.DLPY_INST_AMT AS NTFC_AMT,
						A.RCVE_YN,
						AAA.MG_TP_CD
				FROM 	TB_COLI_NTFC A, TB_COLI_RCVE AA, TB_CLRI_DED_MG AAA
				WHERE 	1 = 1
					AND	A.NTFC_NO = AA.NTFC_NO (+)
					<if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
						AND   A.DLPY_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
					</if>
					AND A.DEL_YN  = 'N'
					AND A.CNCL_YN = 'N'
					AND A.DLPY_INST_AMT > 0
					AND A.DCLR_NO = AAA.DTL_DCSH_NO
					<if test='rcveNo != null and rcveNo !="" '>
						AND AA.RCVE_NO = #{rcveNo}
					</if>
			)
			GROUP BY CSTM_CD, DEPT_CD, NTFC_PT_CD, RCVE_DT, MG_TP_CD
		) A, TB_POTI_ORGN B
		WHERE 	A.CSTM_CD = B.ORGN_CD
		<if test="sctrCd != null and sctrCd != ''">
			AND A.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
		</if>
		<if test='cstmCd != null and cstmCd !=""'>
			AND A.CSTM_CD = #{cstmCd}
		</if>
		<if test='deptCd != null and deptCd !=""'>
			AND (A.DEPT_CD = #{deptCd} OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
				OR A.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
			OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
			CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
				 THEN A.NTFC_PT_CD = 'A'
				 ELSE A.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
			END
			ELSE TRUE END
		</if>
		<if test='mgTpCdList != null and mgTpCdList.size() > 0'>
			AND A.MG_TP_CD IN <foreach collection="mgTpCdList" item="item" open="(" close=")" separator=",">#{item}</foreach>
		</if>
		GROUP BY A.CSTM_CD, A.DEPT_CD, A.RCVE_DT, B.ORGN_NM
		ORDER BY 1, 2, 3
		<include refid="pagination.footer" />
	</select>

</mapper>