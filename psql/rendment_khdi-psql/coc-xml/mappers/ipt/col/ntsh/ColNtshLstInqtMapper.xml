<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="alpass.ipt.col.ntsh.mapper.ColNtshLstInqtMapper">

    <!--
       고지 목록을 조회한다 !==고지 목록을 조회한다==!
    -->
    <select id="selectColNtshLstInqtList" parameterType="alpass.ipt.col.ntsh.vo.ColNtshLstInqtVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshLstInqtVo">
        /** ColNtshLstInqtMapper_selectColNtshLstInqtList_COL **/
        <include refid="pagination.header" />
        SELECT
        NTFC.NTFC_NO                                                               /** N° d'avis !== 고지번호 ==! */
        , (	SELECT 	B.ORGN_CD
            FROM 	TB_POTI_ORGN B,
                    TB_POTI_ORGN C
            WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
                AND C.ORGN_CD           = NTFC.CSTM_CD
                AND B.DEL_YN            = 'N'
                AND C.DEL_YN            = 'N'
        ) AS SCTR_CD                                                               /** Code de Sector !== 섹터코드 ==! */
        , (	SELECT 	B.ORGN_NM
            FROM 	TB_POTI_ORGN B,
                    TB_POTI_ORGN C
            WHERE 	C.UPR_ORGN_MGMT_CD = B.ORGN_MGMT_CD
                AND C.ORGN_CD           = NTFC.CSTM_CD
                AND B.DEL_YN            = 'N'
                AND C.DEL_YN            = 'N'
        ) AS SCTR_NM                                                                /** Code de Sector !== 섹터명 ==! */
        , NTFC.CSTM_CD                                                              /** Code du bureau !== 세관코드 ==! */
        , FN_GET_ORGN_NM(NTFC.CSTM_CD) AS CSTM_NM
        , NTFC.DEPT_CD
        , (SELECT FN_GET_ORGN_NM(orgn_cd) FROM
            (SELECT orgn_cd FROM TB_POTI_ORGN
            WHERE ORGN_CD = DECODE(NTFC.TXRE_DEPT_CD, NULL, NTFC.DEPT_CD, NTFC.TXRE_DEPT_CD)
            AND DEL_YN = 'N'
            AND LENGTH(RIT_AC_NO) = '20'
            AND ORGN_TP_CD = 'REC'
            AND ROWNUM = 1
            UNION
            SELECT orgn_cd
            FROM TB_POTI_ORGN
            WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = DECODE(NTFC.TXRE_DEPT_CD, NULL, NTFC.DEPT_CD, NTFC.TXRE_DEPT_CD)) LIKE '%'||ORGN_MGMT_CD||'%' AND ORGN_TP_CD = 'REC')
            WHERE ROWNUM = 1) AS DEPT_NM	/** Nom Du Bureau !== 부서명 ==! */
        , NTFC.NTFC_PT_CD                                                           /** Code de type d'avis !== 고지유형코드 ==! */
        , FN_GET_CD_VDVAL_NM('COL_0003', NTFC.NTFC_PT_CD, #{langCd}) AS NTFC_PT_NM /** Désignation du code de type d'avis !== 고지유형코드명 ==! */
        , TO_CHAR(TO_DATE(NTFC.NTFC_DT,'YYYYMMDD'),'DD/MM/YYYY') AS NTFC_DT         /** Date de notification !== 고지일자 ==! */
        , TO_CHAR(TO_DATE(NTFC.PAY_TMLM_DT,'YYYYMMDD'),'DD/MM/YYYY') AS PAY_TMLM_DT /** Delai de paiement !== 납부기한일자 ==! */
        , NTFC.DLPY_INST_AMT                                                        /** Montant des intérêts de retard !== 체납이자금액 ==! */
        , NTFC.ODLPY_INST_AMT                                                       /** Montant des intérêts de retard de l'avis original !== 원고지체납이자금액 ==! */
        , NTFC.FINE_AMT                                                             /** Montant d'amende !== 벌금금액 ==! */
        , NTFC.OTHS_PCFE_AMT                                                        /** Montant des autres frais exigibles !== 기타수수료금액 ==! */
        , NTFC.TAMT                                                                 /** Montant total !== 총금액 ==! */
        , NTFC.DRWB_AMT                                                             /** Montant remboursé après la modification de déclaration !== 환급금액 ==! */
        , NTFC.TXPR_IDFY_NO_TP_CD                                                   /** Code de caterogie de NIU !== 납세자식별번호구분코드 ==! */
        , NTFC.TXPR_IDFY_NO                                                         /** NIU !== 납세자식별번호 ==! */
        , NTFC.TXPR_NM                                                              /** Nom du responsable financier !== 납세자명 ==! */
        , (SELECT CO_ADDR FROM TB_COM_CO WHERE NIF = NTFC.TXPR_IDFY_NO) AS CO_ADDR  /** Adresse !== 주소  ==! */
        , NTFC.REFF_NO_PT_CD                                                        /** Code de type de numero de reference !== 참조번호유형코드 ==! */
        , FN_GET_CD_VDVAL_NM('COL_0021', NTFC.REFF_NO_PT_CD, #{langCd}) AS REFF_NO_PT_NM /** Code de type de numéro de référence !== 참조번호유형코드명 ==! */
        , NTFC.REFF_NO                                                              /** N° de reference !== 참조번호 ==! */
        , TO_CHAR(TO_DATE(NTFC.REFF_NO_DT,'YYYYMMDD'),'DD/MM/YYYY') AS REFF_NO_DT   /** Date de référence !== 참조번호일자 ==! */
        , NTFC.DCER_CD                                                              /** Code du declarant !== 신고인코드 ==!*/
        , NTFC.RCVE_YN                                                              /** Encaisse (ON) !== 수납여부 ==! */
        , NTFC.PAY_TMLM_XTNS_YN                                                     /** Echeance prorogee (ON) !== 납부기한연장여부 ==! */
        , NTFC.DLPY_YN                                                              /** Paiement retarde (ON) !== 체납여부 ==! */
        , NTFC.DLPY_INST_ADJU_YN                                                    /** Intérêts de retard ajustés (O/N) !== 체납이자조정여부 ==! */
        , NTFC.NTFC_DIVD_YN                                                         /** Avis echelonne (ON) !== 고지분할여부 ==! */
        , NTFC.RECP_PBLS_YN                                                         /** Quittance delivree (ON) !== 영수증발행여부 ==! */
        , NTFC.CNCL_YN                                                              /** Annule (ON) !== 취소여부 ==! */
        , TO_CHAR(TO_DATE(NTFC.CNCL_DT,'YYYYMMDD'),'DD/MM/YYYY') AS CNCL_DT
        , NTFC.NTFC_CNCL_RSN_CD                                                     /** Code de motif d’annulation d’avis !== 고지취소사유코드 ==! */
        , NTFC.ONTFC_NO                                                             /** N° de l'avis original !== 원고지번호 ==! */
        , NTFC.DFPM_PAY_YN                                                          /** Recours au credit d'enlevement (ON) !== 후불납부여부 ==! */
        , NTFC.NTFC_PRCS_STTS_CD                                                    /** Code de statut de traitement d'avis !== 고지처리상태코드 ==! */
        , FN_GET_CD_VDVAL_NM('COL_0001', NTFC.NTFC_PRCS_STTS_CD, #{langCd}) AS NTFC_PRCS_STTS_CD_NM        /** Code de statut de traitement d'avis !== 고지처리상태코드명 ==! */
        , NTFC.DEL_YN                                                               /** Suppression ON !== 삭제여부 ==! */
        , NTFC.FRST_REGST_ID                                                        /** ID du premier enregistrant  !== 최초등록자ID ==! */
        , TO_CHAR(NTFC.FRST_RGSR_DTTM, 'DD/MM/YYYY hh24:mi') AS frstRgsrDttmForReport
        , NTFC.FRST_RGSR_DTTM                                                       /** Date et heure de premier enregistrement !== 최초등록일시 ==! */
        , NTFC.LAST_CHPR_ID                                                         /** ID du modificateur final !== 최종변경자ID ==! */
        , NTFC.LAST_CHG_DTTM                                                        /** Date et heure de modification finale !== 최종변경일시 ==! */
        , NTFC.DCLR_NO
        ,( SELECT
            TO_CHAR(TO_DATE(DCLR_DT,'YYYYMMDD'),'DD/MM/YYYY') DCLR_DT
            FROM   TB_CLRI_DED_COMN
            WHERE  DTL_DCSH_NO = NTFC.DCLR_NO) DCLR_DT
        , RCVE.RCVE_NO                                                              /** N° d'encaissement !== 수납번호 ==! */
        , RCVE.RCVE_PT_CD                                                           /** Code de type d'encaissement !== 수납유형코드 ==! */
        , FN_GET_CD_VDVAL_NM('COL_0014', RCVE.RCVE_PT_CD , #{langCd}) AS RCVE_PT_NM
        , RCVE.RCVE_AMT                                                             /** Montant encaisse !== 수납금액 ==! */
        , TO_CHAR(TO_DATE(RCVE.RCVE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT         /** Date de stockage !== 수납일자 ==! */
        , RCVE.HNWR_RCVE_RSN_CN                                                     /** Contenu du motif d'enregistrement manuel !== 수작업수납사유내용 ==! */
        , RCVE.ATCH_FILE_ID                                                         /** Id Du Fichier Joint !== 첨부파일ID ==! */
        , NTFC.MG_TP_CD
        , DECODE(NVL(CLT.CNT, 0), 0, 'N', 'Y') AS IS_CLT /** 반출증 존재 여부  */
        , DECODE(NVL(VHCL.CNT, 0), 0, 'N', 'Y') AS IS_M846 /** M846 존재 여부 */
        , FINE.FINE_LVY_RQST_NO
        , NTFC.DCLR_NO
        , NVL(NTFC.PCFE_AMT, 0) AS PCFE_AMT
        , NVL(NTFC.CRDT_INST_AMT, 0) AS CRDT_INST_AMT
        FROM  TB_COLI_NTFC NTFC
        LEFT  JOIN TB_COLI_RCVE RCVE ON NTFC.NTFC_NO = RCVE.NTFC_NO AND RCVE.DEL_YN ='N'
        LEFT OUTER JOIN TB_COLI_FINE FINE ON NTFC.NTFC_NO = FINE.NTFC_NO
        LEFT OUTER JOIN (SELECT NTFC_NO, COUNT(*) CNT FROM TB_COLI_CLT_PBLS GROUP BY NTFC_NO) CLT ON NTFC.NTFC_NO = CLT.NTFC_NO
        LEFT OUTER JOIN (SELECT DTL_DCSH_NO, COUNT(*) CNT FROM TB_CLRI_DED_VHCL GROUP BY DTL_DCSH_NO) VHCL ON NTFC.DCLR_NO = VHCL.DTL_DCSH_NO
        WHERE  NTFC.DEL_YN = 'N'
        AND NTFC.NTFC_PRCS_STTS_CD != 'A01'
        <if test="sctrCd != null and sctrCd != ''">
            AND  NTFC.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
        </if>
        <if test="uprOrgnCd != null and uprOrgnCd != ''">
            AND  NTFC.CSTM_CD = #{uprOrgnCd}
        </if>
        <if test="orgnCd != null and orgnCd != ''">
            AND  (NTFC.DEPT_CD = #{orgnCd} OR NTFC.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) LIKE '%'||ORGN_MGMT_CD||'%')
                                           OR NTFC.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) = 'C'
						 THEN NTFC.NTFC_PT_CD = 'A'
                         ELSE NTFC.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
        </if>
            <!-- AND  NTFC.DEPT_CD = #{orgnCd} -->
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND    NTFC.NTFC_NO LIKE #{ntfcNo} ||'%'
        </if>
        <if test='reffNo != null and reffNo !="" '>
            AND    NTFC.REFF_NO LIKE #{reffNo}||'%'
        </if>
        <if test='cstmCd != null and cstmCd !="" '>
            AND    NTFC.CSTM_CD = #{cstmCd}
        </if>
        <if test='deptCd != null and deptCd !="" '>
            AND  (NTFC.DEPT_CD = #{deptCd} OR NTFC.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
                                           OR NTFC.DEPT_CD IN (
                                            SELECT ORGN_CD FROM TB_POTI_ORGN
                                            WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
                                            OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
						 THEN NTFC.NTFC_PT_CD = 'A'
                         ELSE NTFC.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
        </if>
        <if test='txprIdfyNo != null and txprIdfyNo !="" '>
            AND    NTFC.TXPR_IDFY_NO LIKE #{txprIdfyNo}||'%'
        </if>
        <if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
            AND    NTFC.NTFC_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='reffNoPtCd != null and reffNoPtCd !="" '>
            AND    NTFC.REFF_NO_PT_CD = #{reffNoPtCd}
        </if>
        <if test='reffNoDtFrom != null and reffNoDtFrom !="" and reffNoDtTo != null and reffNoDtTo !="" '>
            AND    NTFC.REFF_NO_DT BETWEEN TO_CHAR(TO_DATE(#{reffNoDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{reffNoDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='rcveYn != null and rcveYn !="" '>
            AND    NTFC.RCVE_YN = #{rcveYn}
        </if>
        <if test='txprIdfyNoTpCd != null and txprIdfyNoTpCd !="" '>
            AND    NTFC.TXPR_IDFY_NO_TP_CD = #{txprIdfyNoTpCd}
        </if>
        <if test='txprIdfyNo != null and txprIdfyNo !="" '>
            AND    NTFC.TXPR_IDFY_NO = #{txprIdfyNo}
        </if>
        <if test='ntfcPtCdChk != null and ntfcPtCdChk.size() > 0'>
            AND    NTFC.NTFC_PT_CD IN  <foreach collection="ntfcPtCdChk" item="ntfcPtCd" open="(" close=")" separator=",">#{ntfcPtCd}</foreach>
        </if>
        <if test='dlpyYn != null and dlpyYn !="" '>
            AND    NTFC.DLPY_YN = #{dlpyYn}
        </if>
        <if test='ntfcDivdYn != null and ntfcDivdYn !="" '>
            AND    NTFC.NTFC_DIVD_YN = #{ntfcDivdYn}
        </if>
        <if test='ontfcNo != null and ontfcNo != ""'>
            AND   NTFC.ONTFC_NO = #{ontfcNo}
        </if>
        <if test='payTmlmXtnsYn != null and payTmlmXtnsYn !="" '>
            AND NTFC.PAY_TMLM_XTNS_YN = #{payTmlmXtnsYn}
        </if>
        <if test='rcveNo != null and rcveNo !="" '>
            AND RCVE.RCVE_NO = #{rcveNo}
        </if>
        ORDER BY NTFC.NTFC_DT DESC, NTFC.NTFC_NO ASC, NTFC.TXPR_IDFY_NO ASC, NTFC.DCER_CD ASC
        <include refid="pagination.footer" />
    </select>

    <!--
       고지 목록을 조회한다 !==고지 목록을 조회한다==!
    -->
    <select id="selectClrNtshLstInqtList" parameterType="alpass.ipt.col.ntsh.vo.ColNtshLstInqtVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshLstInqtVo">
        /** ColNtshLstInqtMapper_selectColNtshLstInqtList_CLR **/
        <include refid="pagination.header" />
        SELECT
        NTFC.NTFC_NO                                                              /** N° d'avis !== 고지번호 ==! */
        , NTFC.CSTM_CD                                                              /** Code du bureau !== 세관코드 ==! */
        , FN_GET_ORGN_NM(NTFC.CSTM_CD) AS CSTM_NM
        , NTFC.DEPT_CD
        , NTFC.NTFC_PT_CD                                                           /** Code de type d'avis !== 고지유형코드 ==! */
        , TO_CHAR(TO_DATE(NTFC.NTFC_DT,'YYYYMMDD'),'DD/MM/YYYY') AS NTFC_DT         /** Date de notification !== 고지일자 ==! */
        , TO_CHAR(TO_DATE(NTFC.PAY_TMLM_DT,'YYYYMMDD'),'DD/MM/YYYY') AS PAY_TMLM_DT /** Delai de paiement !== 납부기한일자 ==! */
        , NTFC.DLPY_INST_AMT                                                        /** Montant des intérêts de retard !== 체납이자금액 ==! */
        , NTFC.ODLPY_INST_AMT                                                       /** Montant des intérêts de retard de l'avis original !== 원고지체납이자금액 ==! */
        , NTFC.FINE_AMT                                                             /** Montant d'amende !== 벌금금액 ==! */
        , NTFC.OTHS_PCFE_AMT                                                        /** Montant des autres frais exigibles !== 기타수수료금액 ==! */
        , NTFC.TAMT                                                                 /** Montant total !== 총금액 ==! */
        , NTFC.DRWB_AMT                                                             /** Montant remboursé après la modification de déclaration !== 환급금액 ==! */
        , NTFC.TXPR_IDFY_NO_TP_CD                                                   /** Code de caterogie de NIU !== 납세자식별번호구분코드 ==! */
        , NTFC.TXPR_IDFY_NO                                                         /** NIU !== 납세자식별번호 ==! */
        , NTFC.TXPR_NM                                                              /** Nom du responsable financier !== 납세자명 ==! */
        , NTFC.REFF_NO_PT_CD                                                        /** Code de type de numero de reference !== 참조번호유형코드 ==! */
        , NTFC.REFF_NO                                                              /** N° de reference !== 참조번호 ==! */
        , NTFC.RCVE_YN                                                              /** Encaisse (ON) !== 수납여부 ==! */
        , NTFC.PAY_TMLM_XTNS_YN                                                     /** Echeance prorogee (ON) !== 납부기한연장여부 ==! */
        , NTFC.DLPY_YN                                                              /** Paiement retarde (ON) !== 체납여부 ==! */
        , NTFC.DLPY_INST_ADJU_YN                                                    /** Intérêts de retard ajustés (O/N) !== 체납이자조정여부 ==! */
        , NTFC.NTFC_DIVD_YN                                                         /** Avis echelonne (ON) !== 고지분할여부 ==! */
        , NTFC.RECP_PBLS_YN                                                         /** Quittance delivree (ON) !== 영수증발행여부 ==! */
        , NTFC.CNCL_YN                                                              /** Annule (ON) !== 취소여부 ==! */
        , NTFC.NTFC_CNCL_RSN_CD                                                     /** Code de motif d’annulation d’avis !== 고지취소사유코드 ==! */
        , NTFC.ONTFC_NO                                                             /** N° de l'avis original !== 원고지번호 ==! */
        , NTFC.DFPM_PAY_YN                                                          /** Recours au credit d'enlevement (ON) !== 후불납부여부 ==! */
        , NTFC.NTFC_PRCS_STTS_CD                                                    /** Code de statut de traitement d'avis !== 고지처리상태코드 ==! */
        , FN_GET_CD_VDVAL_NM('COL_0001', NTFC.NTFC_PRCS_STTS_CD, #{langCd}) AS NTFC_PRCS_STTS_CD_NM        /** Code de statut de traitement d'avis !== 고지처리상태코드명 ==! */
        , NTFC.DEL_YN                                                               /** Suppression ON !== 삭제여부 ==! */
        , NTFC.FRST_REGST_ID                                                        /** ID du premier enregistrant  !== 최초등록자ID ==! */
        , NTFC.FRST_RGSR_DTTM                                                       /** Date et heure de premier enregistrement !== 최초등록일시 ==! */
        , NTFC.LAST_CHPR_ID                                                         /** ID du modificateur final !== 최종변경자ID ==! */
        , NTFC.LAST_CHG_DTTM                                                        /** Date et heure de modification finale !== 최종변경일시 ==! */
        , NTFC.DCLR_NO
        , TO_CHAR(TO_DATE(DED.DCLR_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DCLR_DT
        , DED.bl_no
        , DED.dcer_cd
        , RCVE.RCVE_NO                                                              /** Date et heure de modification finale !== 수납번호 ==! */
        , RCVE.RCVE_PT_CD                                                           /** Date et heure de modification finale !== 최종변경일시 ==! */
        , RCVE.RCVE_AMT                                                             /** Date et heure de modification finale !== 최종변경일시 ==! */
        , TO_CHAR(TO_DATE(RCVE.RCVE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT         /** Date et heure de modification finale !== 최종변경일시 ==! */
        , RCVE.HNWR_RCVE_RSN_CN                                                     /** Date et heure de modification finale !== 최종변경일시 ==! */
        , RCVE.ATCH_FILE_ID                                                         /** Date et heure de modification finale !== 최종변경일시 ==! */
        , NTFC.MG_TP_CD
        FROM  TB_COLI_NTFC NTFC
        LEFT  JOIN TB_COLI_RCVE RCVE ON NTFC.NTFC_NO = RCVE.NTFC_NO
        LEFT  JOIN TB_CLRI_DED_COMN DED ON DED.dtl_dcsh_no = NTFC.DCLR_NO
        WHERE  NTFC.DEL_YN = 'N' AND DED.del_yn = 'N'
        <if test='dclrNo != null and dclrNo !="" '>
            AND    NTFC.DCLR_NO = #{dclrNo}
        </if>
        <if test='dclrDtFrom != null and dclrDtFrom !="" and dclrDtTo != null and dclrDtTo !="" '>
            AND    DED.DCLR_DT BETWEEN TO_CHAR(TO_DATE(#{dclrDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{dclrDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND    NTFC.NTFC_NO = #{ntfcNo}
        </if>
        <if test='cstmCd != null and cstmCd !="" '>
            AND    NTFC.CSTM_CD = #{cstmCd}
        </if>
        <if test='deptCd != null and deptCd !="" '>
            AND    NTFC.DEPT_CD = #{deptCd}
        </if>
        <if test='txprIdfyNo != null and txprIdfyNo !="" '>
            AND    NTFC.TXPR_IDFY_NO LIKE #{txprIdfyNo}||'%'
        </if>
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND    NTFC.NTFC_NO LIKE #{ntfcNo}||'%'
        </if>
        <if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
            AND    NTFC.NTFC_DT BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='rcveYn != null and rcveYn !="" '>
            AND    NTFC.RCVE_YN = #{rcveYn}
        </if>
        <if test='txprIdfyNo != null and txprIdfyNo !="" '>
            AND    NTFC.TXPR_IDFY_NO = #{txprIdfyNo}
        </if>
        <if test='ntfcPtCdChk != null and ntfcPtCdChk.size() > 0'>
            AND    NTFC.NTFC_PT_CD IN  <foreach collection="ntfcPtCdChk" item="ntfcPtCd" open="(" close=")" separator=",">#{ntfcPtCd}</foreach>
        </if>

        <if test='dlpyYn != null and dlpyYn !="" '>
            AND    NTFC.DLPY_YN = #{dlpyYn}
        </if>
        <if test='ntfcDivdYn != null and ntfcDivdYn !="" '>
            AND    NTFC.NTFC_DIVD_YN = #{ntfcDivdYn}
        </if>
        <if test='ontfcNo != null and ontfcNo != ""'>
            AND   NTFC.ONTFC_NO = #{ontfcNo}
        </if>
        <if test='payTmlmXtnsYn != null and payTmlmXtnsYn !="" '>
            AND NTFC.PAY_TMLM_XTNS_YN = #{payTmlmXtnsYn}
        </if>
        ORDER BY NTFC.NTFC_DT DESC, NTFC.NTFC_NO ASC, NTFC.TXPR_IDFY_NO ASC, NTFC.DCER_CD ASC
        <include refid="pagination.footer" />
    </select>

    <!--
       고지 목록을 조회한다 !==고지 목록을 조회한다==!
    -->
    <select id="selectColNtshLstInqt" parameterType="alpass.ipt.col.ntsh.vo.ColNtshLstInqtVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshLstInqtVo">
        /** ColNtshLstInqtMapper_selectColNtshLstInqt **/
        SELECT
        NTFC.NTFC_NO                                                              /** N° d'avis !== 고지번호 ==! */
        , NTFC.CSTM_CD                                                              /** Code du bureau !== 세관코드 ==! */
        , FN_GET_ORGN_NM(NTFC.CSTM_CD) AS CSTM_NM
        , NTFC.DEPT_CD
        , NTFC.NTFC_PT_CD                                                           /** Code de type d'avis !== 고지유형코드 ==! */
        , TO_CHAR(TO_DATE(NTFC.NTFC_DT,'YYYYMMDD'),'DD/MM/YYYY') AS NTFC_DT         /** Date de notification !== 고지일자 ==! */
        , TO_CHAR(TO_DATE(NTFC.PAY_TMLM_DT,'YYYYMMDD'),'DD/MM/YYYY') AS PAY_TMLM_DT /** Delai de paiement !== 납부기한일자 ==! */
        , NTFC.DLPY_INST_AMT                                                        /** Montant des intérêts de retard !== 체납이자금액 ==! */
        , NTFC.ODLPY_INST_AMT                                                       /** Montant des intérêts de retard de l'avis original !== 원고지체납이자금액 ==! */
        , NTFC.FINE_AMT                                                             /** Montant d'amende !== 벌금금액 ==! */
        , NTFC.OTHS_PCFE_AMT                                                        /** Montant des autres frais exigibles !== 기타수수료금액 ==! */
        , NTFC.TAMT                                                                 /** Montant total !== 총금액 ==! */
        , NTFC.DRWB_AMT                                                             /** Montant remboursé après la modification de déclaration !== 환급금액 ==! */
        , NTFC.TXPR_IDFY_NO_TP_CD                                                   /** Code de caterogie de NIU !== 납세자식별번호구분코드 ==! */
        , NTFC.TXPR_IDFY_NO                                                         /** NIU !== 납세자식별번호 ==! */
        , NTFC.TXPR_NM                                                              /** Nom du responsable financier !== 납세자명 ==! */
        , NTFC.REFF_NO_PT_CD                                                        /** Code de type de numero de reference !== 참조번호유형코드 ==! */
        , NTFC.REFF_NO                                                              /** N° de reference !== 참조번호 ==! */
        , NTFC.DCER_CD                                                              /** Code du declarant !== 신고인코드 ==!*/
        , NTFC.RCVE_YN                                                              /** Encaisse (ON) !== 수납여부 ==! */
        , NTFC.PAY_TMLM_XTNS_YN                                                     /** Echeance prorogee (ON) !== 납부기한연장여부 ==! */
        , NTFC.DLPY_YN                                                              /** Paiement retarde (ON) !== 체납여부 ==! */
        , NTFC.DLPY_INST_ADJU_YN                                                    /** Intérêts de retard ajustés (O/N) !== 체납이자조정여부 ==! */
        , NTFC.NTFC_DIVD_YN                                                         /** Avis echelonne (ON) !== 고지분할여부 ==! */
        , NTFC.RECP_PBLS_YN                                                         /** Quittance delivree (ON) !== 영수증발행여부 ==! */
        , NTFC.CNCL_YN                                                              /** Annule (ON) !== 취소여부 ==! */
        , NTFC.NTFC_CNCL_RSN_CD                                                     /** Code de motif d’annulation d’avis !== 고지취소사유코드 ==! */
        , NTFC.ONTFC_NO                                                             /** N° de l'avis original !== 원고지번호 ==! */
        , NTFC.DFPM_PAY_YN                                                          /** Recours au credit d'enlevement (ON) !== 후불납부여부 ==! */
        , NTFC.NTFC_PRCS_STTS_CD                                                    /** Code de statut de traitement d'avis !== 고지처리상태코드 ==! */
        , FN_GET_CD_VDVAL_NM('COL_0001', NTFC.NTFC_PRCS_STTS_CD, #{langCd}) AS NTFC_PRCS_STTS_CD_NM        /** Code de statut de traitement d'avis !== 고지처리상태코드명 ==! */
        , NTFC.DEL_YN                                                               /** Suppression ON !== 삭제여부 ==! */
        , NTFC.FRST_REGST_ID                                                        /** ID du premier enregistrant  !== 최초등록자ID ==! */
        , NTFC.FRST_RGSR_DTTM                                                       /** Date et heure de premier enregistrement !== 최초등록일시 ==! */
        , NTFC.LAST_CHPR_ID                                                         /** ID du modificateur final !== 최종변경자ID ==! */
        , NTFC.LAST_CHG_DTTM                                                        /** Date et heure de modification finale !== 최종변경일시 ==! */
        ,( SELECT
        TO_CHAR(TO_DATE(DCLR_DT,'YYYYMMDD'),'DD/MM/YYYY') DCLR_DT
        FROM   TB_CLRI_DED_COMN
        WHERE  DTL_DCSH_NO = NTFC.DCLR_NO) DCLR_DT
        , RCVE.RCVE_NO                                                              /** Date et heure de modification finale !== 수납번호 ==! */
        , RCVE.RCVE_PT_CD                                                           /** Date et heure de modification finale !== 최종변경일시 ==! */
        , RCVE.RCVE_AMT                                                             /** Date et heure de modification finale !== 최종변경일시 ==! */
        , RCVE.RCVE_DT                                                              /** Date et heure de modification finale !== 최종변경일시 ==! */
        , RCVE.HNWR_RCVE_RSN_CN                                                     /** Date et heure de modification finale !== 최종변경일시 ==! */
        , RCVE.ATCH_FILE_ID                                                         /** Date et heure de modification finale !== 최종변경일시 ==! */
        FROM  TB_COLI_NTFC NTFC
        LEFT  JOIN TB_COLI_RCVE RCVE ON NTFC.NTFC_NO = RCVE.NTFC_NO
        WHERE  NTFC.DEL_YN = 'N'
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND    NTFC.NTFC_NO = #{ntfcNo}
        </if>
        ORDER BY NTFC.NTFC_NO
    </select>

    <!--
       고지 금액 상세 내역을 조회한다 !==고지 금액 상세 내역을 조회한다==!
    -->
    <select id="selectColNtshAmtList" parameterType="alpass.ipt.col.ntsh.vo.ColNtshAmtVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshAmtVo">
        /** ColNtshLstInqtMapper_selectColNtshAmtList **/
        <include refid="pagination.header" />
        SELECT *
        FROM (
            SELECT  TAX.TAX_CD
                  , ( TRUNC(SUM(TAX.PAY_TAX_AMT)) -
                      TRUNC(SUM(NVL((
                        SELECT SUM(PAY_TAX_AMT)
                        FROM  TB_CLRI_DED_VLUT_AUDT_TAX PRE_TAX
                            , (
                                SELECT * FROM TB_CLRI_DED_VLUT_AUDT_COMN
                                WHERE DTL_DCSH_NO = (
                                    SELECT DCLR_NO
                                    FROM TB_COLI_NTFC
                                    WHERE NTFC_NO = #{ntfcNo}
                                      AND DEL_YN = 'N'
                                      AND CNCL_YN = 'N'
                                )
                                AND NTFC_NO IS NOT NULL
                                AND VLUT_PRCS_STTS_CD = 'D08'
                            ) PRE_COMN
                        WHERE PRE_TAX.DEL_YN = 'N'
                          AND PRE_TAX.PAY_KND_CD = '1'
                          AND PRE_COMN.DTL_DCSH_NO = PRE_TAX.DTL_DCSH_NO
                          AND PRE_COMN.PRC_EV_DGCNT = PRE_TAX.PRC_EV_DGCNT
                          AND PRE_TAX.PRC_EV_DGCNT = (
                            SELECT MAX(PRC_EV_DGCNT)
                            FROM TB_CLRI_DED_VLUT_AUDT_COMN A, TB_COLI_NTFC B
                            WHERE A.NTFC_NO = B.NTFC_NO
                              AND A.DTL_DCSH_NO = PRE_COMN.DTL_DCSH_NO
                              AND A.PRC_EV_DGCNT <![CDATA[ < ]]> (TO_NUMBER(COMN.PRC_EV_DGCNT))
                              AND B.CNCL_YN = 'N'
                              AND B.DEL_YN = 'N'
                              AND A.NTFC_NO IS NOT NULL
                              AND A.VLUT_PRCS_STTS_CD = 'D08'
                          )
                          AND TAX.PDLS_NO = PRE_TAX.PDLS_NO
                          AND TAX.TAX_CD = PRE_TAX.TAX_CD
                      ),0)))
                  )PAY_TAX_AMT
                  , (SELECT TAX_CD_NM FROM TB_CLRI_TAX_CD WHERE TAX_CD = TAX.TAX_CD AND ROWNUM = 1) AS TAX_NM
                  , TRUNC(SUM(TAX.TXBS_AMT)) TXBS_AMT                                  /**  !== 과세기준금액 ==! */
            FROM  TB_COLI_NTFC NTFC
                , TB_CLRI_DED_VLUT_AUDT_COMN COMN
                , TB_CLRI_DED_VLUT_AUDT_TAX TAX
            WHERE TAX.DEL_YN  = 'N'
              AND TAX.PAY_KND_CD = '1'
              AND NTFC.NTFC_NO = COMN.NTFC_NO
              AND NTFC.NTFC_PT_CD = 'G'
              AND COMN.DTL_DCSH_NO = TAX.DTL_DCSH_NO
              AND COMN.PRC_EV_DGCNT = TAX.PRC_EV_DGCNT
            <if test='ntfcNo != null and ntfcNo !="" '>
              AND NTFC.NTFC_NO = #{ntfcNo}
            </if>
              AND COMN.DTL_DCSH_NO = NTFC.DCLR_NO
            GROUP BY TAX.TAX_CD
            ORDER BY TRUNC(SUM(TAX.TXBS_AMT))
        )
        UNION ALL
        SELECT A.OTHS_PCFE_TAX_CD AS TAX_CD                 /** Code de taxe concernant les autres frais exigibles !== 기타수수료세금코드 ==! */
             , A.OTHS_PCFE_AMT       AS PAY_TAX_AMT         /** Montant des autres frais exigibles !== 기타수수료금액 ==! */
             , B.OTHS_PCFE_CD_NM  AS TAX_NM
             , '0' AS TXBS_AMT
        FROM   TB_COLI_OTHS_PCFE_BSS A
             , TB_COLI_OTHS_PCFE_BSS_CD B                  
        WHERE  A.DEL_YN = 'N'                               /** Suppression ON !== 삭제여부 ==! */
        AND    A.OTHS_PCFE_CD  = B.OTHS_PCFE_CD             /** Code des autres frais exigibles !== 기타수수료코드 ==! */
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND      A.NTFC_NO = #{ntfcNo}
        </if>
        UNION ALL
        SELECT A.FINE_TAX_CD AS TAX_CD                      /** Code de taxe concernant la redevance des amendes !== 벌금수수료세금코드 ==! */
             , A.FINE_AMT       AS PAY_TAX_AMT              /** Montant des amend !== 벌금금액 ==! */
             , B.VLTN_CD_NM   AS TAX_NM
             , '0' AS TXBS_AMT
        FROM   TB_COLI_FINE_BSS A
             , TB_COLI_VLTN_CD B                  
        WHERE  A.DEL_YN = 'N'                               /** Suppression ON !== 삭제여부 ==! */
        AND    A.VLTN_CD  = B.VLTN_CD                       /** Code des amend !== 벌금 코드 ==! */
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND      A.NTFC_NO = #{ntfcNo}
        </if>
        <include refid="pagination.footer" />
    </select>

    <!--
       고지 내용 영수증 이력을 조회한다 !==고지 내용 영수증 이력을 조회한다==!
    -->
    <select id="selectColNtshRecpPblsHistList" parameterType="alpass.ipt.col.ntsh.vo.ColNtshDetailCnVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshRecpPblsHistVo">
        /** ColNtshLstInqtMapper_selectColNtshRecpPblsHistList **/
        <include refid="pagination.header" />
        SELECT
            PBLS.RCVE_NO                                                      /** N° d'encaissement !== 수납번호 ==! */
            , PBLSN.NTFC_NO                                                     /** N° d'avis !== 고지번호 ==! */
            , PBLS.PBLS_DGCNT                                                   /** Nombre de fois de delivrances !== 발행차수 ==! */
            , PBLS.CSTM_CD                                                      /** Code du bureau !== 세관코드 ==! */
            , FN_GET_ORGN_NM(PBLS.CSTM_CD) AS CSTM_NM
            , TO_CHAR(PBLS.PBLS_DTTM,'DD/MM/YYYY HH24:MI:SS') AS PBLS_DT /** Date d'emission !== 발행일자 ==! */
            , PBLS.PBLH_ID                                                      /** ID de personne delivrant !== 발행자ID ==! */
            , (SELECT EMP_NM FROM TB_POTI_EMP WHERE PBSR_NO = PBLS.PBLH_ID) AS EMP_NM /** Nom de l'employé !==직원명==! */
            , NTFC.TXPR_NM
            , (SELECT TO_CHAR(TO_DATE(RCVE.RCVE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT
                FROM TB_COLI_RCVE RCVE
                WHERE RCVE.RCVE_NO = PBLS.RCVE_NO
                AND RCVE.NTFC_NO = NTFC.NTFC_NO LIMIT 1) RCVE_DT
        FROM  TB_COLI_RECP_PBLS PBLS
            , TB_COLI_RECP_PBLS_NTFC PBLSN
        LEFT JOIN TB_COLI_NTFC NTFC ON PBLSN.NTFC_NO = NTFC.NTFC_NO AND NTFC.DEL_YN  = 'N'
        WHERE PBLS.DEL_YN  = 'N'
        AND   PBLS.RCVE_NO = PBLSN.RCVE_NO
        AND   PBLS.PBLS_DGCNT = PBLSN.PBLS_DGCNT
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND    NTFC.NTFC_NO = #{ntfcNo}
        </if>
        ORDER BY PBLS.PBLS_DTTM DESC
        <include refid="pagination.footer" />
    </select>

    <update id="updateColNtshLstInqt" parameterType="alpass.ipt.col.ntsh.vo.ColNtshLstInqtVo">
        /** ColNtshLstInqtMapper_updateColNtshLstInqt **/
        UPDATE  TB_COLI_NTFC
        SET  NTFC_PRCS_STTS_CD = #{ntfcPrcsSttsCd}
           , RCVE_YN = #{rcveYn}
           , LAST_CHPR_ID = #{lastChprId}
           , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE NTFC_NO = #{ntfcNo}
    </update>

    <update id="updateColNtshDrwbAmt" parameterType="alpass.ipt.col.ntsh.vo.ColNtshLstInqtVo">
        /** ColNtshLstInqtMapper_updateColNtshDrwbAmt **/
        UPDATE TB_COLI_NTFC
        SET DRWB_AMT = NVL(DRWB_AMT, 0) + #{drwbAmt}
          , LAST_CHPR_ID = #{lastChprId}
          , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE NTFC_NO = (SELECT RCVE.NTFC_NO FROM TB_COLI_RCVE RCVE WHERE RCVE.RCVE_NO = #{rcveNo} AND ROWNUM = 1)
          AND NTFC_PT_CD IN ('G', 'C')
    </update>

    <!--
       영수증 이력을 추가한다 !==영수증 이력을 추가한다==!
    -->
    <insert id="insertColNtshRecpPbls" parameterType="alpass.ipt.col.com.vo.ColRecpPblsVo">
        /* ColNtshLstInqtMapper_insertColNtshRecpPbls */
        INSERT INTO TB_COLI_RECP_PBLS (
            RCVE_NO
            , PBLS_DGCNT
            , CSTM_CD
            , DEPT_CD
            , PBLS_DTTM
            , PBLH_ID
            , DEL_YN
            , FRST_REGST_ID
            , FRST_RGSR_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
        ) VALUES (
            #{rcveNo}
            , (SELECT NVL(MAX(PBLS_DGCNT), 1) + 1 FROM TB_COLI_RECP_PBLS WHERE RCVE_NO = #{rcveNo})
            , #{cstmCd}
            , #{deptCd}
            , SYSTIMESTAMP
            , #{pblhId}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
        )
    </insert>

    <!--
       영수증 발행 고지를 추가한다 !==영수증 발행 고지를 추가한다==!
    -->
    <insert id="insertColNtshRecpPblsNtfc" parameterType="alpass.ipt.col.com.vo.ColRecpPblsNtfcVo">
        /* ColNtshLstInqtMapper_insertColNtshRecpPblsNtfc */
        INSERT INTO TB_COLI_RECP_PBLS_NTFC (
            RCVE_NO
            , PBLS_DGCNT
            , NTFC_NO
            , DEL_YN
            , FRST_REGST_ID
            , FRST_RGSR_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
        ) VALUES (
            #{rcveNo}
            , (SELECT NVL(MAX(PBLS_DGCNT), 1) FROM TB_COLI_RECP_PBLS WHERE RCVE_NO = #{rcveNo})
            , #{ntfcNo}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
        )
    </insert>
</mapper>