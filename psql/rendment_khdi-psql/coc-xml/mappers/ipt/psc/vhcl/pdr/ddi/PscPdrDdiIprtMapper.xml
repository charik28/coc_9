<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="alpass.ipt.psc.vhcl.pdr.ddi.mapper.PscPdrDdiIprtMapper">

  <!--
    Consultation de la liste de gestion des cibles de visite physique  !== 검사대상관리 목록 조회 ==!
    (Beak SangYeol)
    -->
  <select id="selectIprtList" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtSrchVo" resultType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtVo">
    /* selectIprtList */
    <include refid="pagination.header" ></include>
    SELECT AA.*
    FROM (
      SELECT ROWNUM NO
        , A.DTL_DCSH_NO
        , TO_CHAR(TO_DATE(A.DCLR_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DCLR_DT
        , A.DCLR_PT_CD
        , A.CSCL_PLN_CD
        , A.DCER_CD
        , ( SELECT DCER_CO_NM
            FROM   TB_CLRI_DED_CO AA
            WHERE  AA.DTL_DCSH_NO = A.DTL_DCSH_NO ) AS DCER_CO_NM
        , A.TXPR_IDFY_NO
        , ( SELECT TXPR_CO_NM
            FROM   TB_CLRI_DED_CO BB
            WHERE  BB.DTL_DCSH_NO = A.DTL_DCSH_NO ) AS TXPR_CO_NM
        , ( SELECT COUNT(1)
            FROM   TB_CLRI_DED_PDLS CC
            WHERE  CC.DTL_DCSH_NO = A.DTL_DCSH_NO
            AND    CC.DEL_YN='N' ) AS PDLS_GCNT
        , A.PRCS_STTS_CD
        , ( SELECT DSCL_YN
            FROM   TB_CLRI_DED_INSC_RSLT DD
            WHERE  DD.DTL_DCSH_NO = A.DTL_DCSH_NO
            AND  DD.VIST_INSC_RQST_DGCNT = (SELECT MAX(VIST_INSC_RQST_DGCNT) FROM TB_CLRI_DED_INSC_RSLT AA WHERE  DD.DTL_DCSH_NO = AA.DTL_DCSH_NO)
            AND    DD.DEL_YN = 'N' ) AS DSCL_YN
        , NVL(( SELECT IPRT_PRCS_STTS_CD
                FROM   TB_CLRI_DED_INSC_RSLT EE
                WHERE  EE.DTL_DCSH_NO = A.DTL_DCSH_NO
                AND  EE.VIST_INSC_RQST_DGCNT = (SELECT MAX(VIST_INSC_RQST_DGCNT) FROM TB_CLRI_DED_INSC_RSLT AA WHERE  EE.DTL_DCSH_NO = AA.DTL_DCSH_NO)
                AND  EE.DEL_YN = 'N' ), '' ) AS IPRT_PRCS_STTS_CD
        , (SELECT MAX(VIST_INSC_RQST_DGCNT) FROM TB_CLRI_DED_INSC_RSLT FF WHERE  FF.DTL_DCSH_NO = A.DTL_DCSH_NO) AS VIST_INSC_RQST_DGCNT
      FROM   TB_CLRI_DED_COMN A
      WHERE  A.DEL_YN='N'
      /*AND    A.SELC_RSLT_CD = 'R'*/
      AND    (
          A.AUDT_EMP_ID = #{pbsrNo}
      OR
          A.INSC_EMP_ID = #{pbsrNo}
      )
      AND ( A.PRCS_STTS_CD = 'D02'
            OR
            ((A.PRCS_STTS_CD = 'F01' OR A.PRCS_STTS_CD = 'F02') AND cscl_pstp_yn = 'N')
          )
      AND EXISTS (
        SELECT 1
        FROM TB_CARI_CAG_DCSH_BL B
        WHERE B.DEL_YN = 'N'
        AND B.CAG_MGMT_NO = A.CAG_MGMT_NO
      )
      AND EXISTS(
                SELECT 'Y'
                FROM TB_CLRI_DED_PRCS_BRKD C
                WHERE A.DTL_DCSH_NO = C.DTL_DCSH_NO
                AND C.PRCS_STTS_CD = 'D02'
                )
      /*AND A.CSCL_PLN_CD = 'PMD'*/
      <if test="dclrDtFrom != null and dclrDtFrom != ''">
        AND		A.DCLR_DT <![CDATA[ >= ]]> TO_CHAR(TO_DATE(#{dclrDtFrom},'DD/MM/YYYY') , 'YYYYMMDD')
        AND		A.DCLR_DT <![CDATA[ <= ]]> TO_CHAR(TO_DATE(#{dclrDtTo},'DD/MM/YYYY') , 'YYYYMMDD')
      </if>

      <if test="dtlDcshNo != null and dtlDcshNo != ''">
        AND    A.DTL_DCSH_NO = #{dtlDcshNo}
      </if>
      <if test='iprtPrcsSttsCd != null and !"".equals(iprtPrcsSttsCd)'>
        AND EXISTS
          ( SELECT 'X'
            FROM TB_CLRI_DED_INSC_RSLT D
            WHERE D.DTL_DCSH_NO = A.DTL_DCSH_NO
            AND D.DEL_YN ='N'
            AND D.vist_insc_rqst_dgcnt = (SELECT MAX(vist_insc_rqst_dgcnt) FROM TB_CLRI_DED_INSC_RSLT AA WHERE  D.DTL_DCSH_NO = AA.DTL_DCSH_NO)
            AND D.IPRT_PRCS_STTS_CD = #{iprtPrcsSttsCd}
          )
      </if>
    ) AA
    <if test="dsclYn != null and dsclYn != ''">
        WHERE AA.DSCL_YN = #{dsclYn}
    </if>
    ORDER BY AA.DCLR_DT DESC
    <include refid="pagination.footer" ></include>
  </select>

  <!--
    Consultation de la liste de gestion des cibles de visite physique  !== 검사대상관리 목록 조회 ==!
    (Beak SangYeol)
    -->
  <select id="selectIsprIprtList" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtSrchVo" resultType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtVo">
    /* selectIsprIprtList */
    <include refid="pagination.header" ></include>
    SELECT AA.*
    FROM (
      SELECT ROWNUM NO
        , A.DTL_DCSH_NO
        , TO_CHAR(TO_DATE(A.DCLR_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DCLR_DT
        , A.DCLR_PT_CD
        , A.CSCL_PLN_CD
        , A.DCER_CD
        , ( SELECT DCER_CO_NM FROM TB_CLRI_DED_CO AA WHERE AA.DTL_DCSH_NO = A.DTL_DCSH_NO ) AS DCER_CO_NM
        , A.TXPR_IDFY_NO
        , ( SELECT TXPR_CO_NM FROM TB_CLRI_DED_CO BB WHERE BB.DTL_DCSH_NO = A.DTL_DCSH_NO ) AS TXPR_CO_NM
        , ( SELECT COUNT(1) FROM   TB_CLRI_DED_PDLS CC WHERE CC.DTL_DCSH_NO = A.DTL_DCSH_NO AND CC.DEL_YN='N' ) AS PDLS_GCNT
        , A.PRCS_STTS_CD
        , ( SELECT DSCL_YN FROM TB_CLRI_DED_INSC_RSLT DD WHERE DD.DTL_DCSH_NO = A.DTL_DCSH_NO AND DD.VIST_INSC_RQST_DGCNT = (SELECT MAX(VIST_INSC_RQST_DGCNT) FROM TB_CLRI_DED_INSC_RSLT FF WHERE FF.DTL_DCSH_NO = A.DTL_DCSH_NO) AND DD.DEL_YN = 'N' ) AS DSCL_YN
        , NVL(( SELECT IPRT_PRCS_STTS_CD FROM TB_CLRI_DED_INSC_RSLT EE WHERE EE.DTL_DCSH_NO = A.DTL_DCSH_NO AND EE.VIST_INSC_RQST_DGCNT = (SELECT MAX(VIST_INSC_RQST_DGCNT) FROM TB_CLRI_DED_INSC_RSLT FF WHERE FF.DTL_DCSH_NO = A.DTL_DCSH_NO) AND EE.DEL_YN = 'N' ), '' ) AS IPRT_PRCS_STTS_CD
        , (SELECT MAX(VIST_INSC_RQST_DGCNT) FROM TB_CLRI_DED_INSC_RSLT FF WHERE FF.DTL_DCSH_NO = A.DTL_DCSH_NO) AS VIST_INSC_RQST_DGCNT
      FROM   TB_CLRI_DED_COMN A
      WHERE  A.DEL_YN='N'
      /*AND    A.SELC_RSLT_CD = 'R'*/
      AND    A.INSC_EMP_ID = #{pbsrNo}
      AND    ( A.PRCS_STTS_CD = 'D02'
               OR
               A.PRCS_STTS_CD = 'F01' AND CSCL_PSTP_YN = 'N'
             )
      /*AND A.CSCL_PLN_CD = 'PMD'*/
     <!--  AND EXISTS (
        SELECT 1
        FROM TB_CARI_CAG_DCSH_BL B
        WHERE B.DEL_YN = 'N'
        AND B.CAG_MGMT_NO = A.CAG_MGMT_NO
      ) -->
      <if test="dclrDtFrom != null and dclrDtFrom != ''">
        AND		A.DCLR_DT <![CDATA[ >= ]]> TO_CHAR(TO_DATE(#{dclrDtFrom},'DD/MM/YYYY') , 'YYYYMMDD')
        AND		A.DCLR_DT <![CDATA[ <= ]]> TO_CHAR(TO_DATE(#{dclrDtTo},'DD/MM/YYYY') , 'YYYYMMDD')
      </if>
      <if test="dtlDcshNo != null and dtlDcshNo != ''">
        AND    A.DTL_DCSH_NO = #{dtlDcshNo}
      </if>
      <if test='iprtPrcsSttsCd != null and !"".equals(iprtPrcsSttsCd)'>
        AND EXISTS
          ( SELECT 'X'
            FROM   TB_CLRI_DED_INSC_RSLT D
            WHERE   D.DTL_DCSH_NO = A.DTL_DCSH_NO
            AND     D.DEL_YN ='N'
            AND     D.IPRT_PRCS_STTS_CD = #{iprtPrcsSttsCd}
          )
      </if>
    ) AA
    <if test="dsclYn != null and dsclYn != ''">
      WHERE AA.DSCL_YN = #{dsclYn}
    </if>
    ORDER BY AA.DCLR_DT DESC
    <include refid="pagination.footer" ></include>
  </select>

  <!--
    Consultation en détail des cibles de visite physique
    !== 검사대상관리 상세 조회 ==!
    (Beak SangYeol)
  -->
  <select id="selectIprtDetl" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtVo" resultType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtDetlVo">
    /* selectIprtDetl */
    SELECT
      A.DTL_DCSH_NO                 /** N° déc. !== 신고번호 ==!*/
      , TO_CHAR(TO_DATE(A.DCLR_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS DCLR_DT   /** date de DAU !== 신고일자 ==!*/
      , A.REFF_NO               /** N° de référence !== 참조번호  ==! */
      , A.MDFY_DGCNT            /** Nombre de fois de la modification !== 정정차수  ==! */
      , A.DCLR_PT_CD            /** Code de type de déclaration !== 신고유형코드   ==! */
      , A.EPC_CD                /** Code EPC !== EPC코드    ==! */
      , ( SELECT EPC_NM FROM ALPASSINT.TB_CLRI_EPC_CD WHERE EPC_CD = A.EPC_CD AND NVL(A.RQST_DT,TO_CHAR(CURRENT_DATE,'YYYYMMDD')) BETWEEN EPC_APLY_STRT_DT AND EPC_APLY_END_DT) AS EPC_NM
      /**, A.DCLR_SCTR_CD Code de Secteur !== 섹터코드 ==! */
      , A.DCLR_CSTM_CD          /**  Code de bureau de déclaration  !== 신고세관코드     ==! */
      , (SELECT A.DCLR_CSTM_CD||' | '||ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.DCLR_CSTM_CD AND ROWNUM=1) AS DCLR_CSTM_NM
      , A.DEPT_CD               /** Bureau de douane !== 신고부서 ==! */
      , (SELECT A.DEPT_CD||' | '||ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_CD = A.DEPT_CD AND ROWNUM=1) AS DEPT_NM
      , A.CAG_MGMT_NO           /** CRN !== 화물관리번호 ==! */
      , A.CSCL_PLN_CD           /**  Code de plan de dédouanement  !== 통관계획코드      ==! */
      , A.DCSH_FM_CD            /**  Code de formulaire de la déclaration  !== 신고서양식코드       ==! */
      , A.PDLS_GCNT             /**  Nombre d'articles  !== 품목개수         ==! */
      , A.PCKG_TGCNT            /**  Nombre total de colis  !== 포장총개수         ==! */
      , A.CNTR_CAG_YN           /**  Cargaison conteneurisée ON   !== 컨테이너화물여부   ==! */
      , A.AL_TTWG               /**  Poids brut total   !== 전체총중량   ==! */
      , A.AL_NTWG               /**  Poids net total   !== 전체순중량    ==! */
      , A.EXPPN_IDFY_NO_TP_CD   /**  Code de type du N° d'identification de l'exportateur   !== 수출자식별번호구분코드   ==! */
      , A.EXPPN_IDFY_NO         /**  N° d'identification de l'exportateur !== 수출자식별번호   ==! */
      , A.IMPPN_IDFY_NO_TP_CD   /**  Code de type du N° d'identification de l'importateur !== 수입자식별번호구분코드   ==! */
      , A.IMPPN_IDFY_NO         /**  N° d'identification de l'importateur !== 수입자식별번호  ==! */
      , A.TXPR_IDFY_NO          /**  NIU !== 납세자식별번호   ==! */
      , A.DCER_CD               /**  Code du déclarant !== 신고인코드  ==! */
      , A.CSM_CNTY_CD           /**  Code de pays d'expédition !== 탁송국가코드  ==! */
      , A.TRDE_DLNG_CNTY_CD     /**  Code de pays de transaction !== 무역거래국가코드   ==! */
      , A.EXP_CNTY_CD           /**  Code de pays exportateur !== 수출국가코드    ==! */
      , A.DSTN_CNTY_CD          /**  Code de pays destinataire !== 목적지국가코드     ==! */
      , A.TRNP_METH_KND_CD      /**  Code de type du moyen de transport !== 운송수단종류코드    ==! */
      , A.TRNP_METH_IDFY_NO     /**  N° d'identification du moyen de transport !== 운송수단식별번호  ==! */
      , A.TRNP_METH_NAT_CD      /**  Code de pays du moyen de transport  !==  운송수단국적코드  ==! */
      , A.SHIP_NM               /**  Nom du navire  !== 선박명  ==! */
      , A.CAG_MGMT_NO           /**  CRN  !== 화물관리번호   ==! */
      , A.BL_NO                 /**  N° de BL !== BL번호    ==! */
      , TO_CHAR(TO_DATE(A.ARVL_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS ARVL_DT
      , A.DIVD_CSCL_TP_CD       /** Code d'indicateur du dédouanement partiel !== 분할통관구분코드    ==! */
      , A.LDNP_CD               /** Code de lieu de chargement !== 선적지코드    ==! */
      , A.CNTR_GCNT             /** Nombre de conteneurs !== 컨테이너개수    ==! */
      , A.DISPR_CD              /** Code de lieu de déchargement !== 하역지코드   ==! */
      , TO_CHAR(TO_DATE(A.LDUN_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS LDUN_DT  /** Date de déchargement !== 하역일자   ==! */
      , A.RLBR_CSTM_CD          /** Code du bureau d'entrée et de sortie !== 반출입세관코드   ==! */
      , A.CMDT_STGE_LOCT_CD     /** TODO번역필요 !== 물품장치위치코드   ==! */
      , A.BNBN_CMDT_WRHS_CD     /** TODO번역필요 !== 보세물품창고코드   ==! */
      , A.BF_BNBN_CMDT_WRHS_CD  /** TODO번역필요 !== 이전보세물품창고코드   ==! */
      , A.PSMGT_FFMN_XPIR_PRID  /** Période d'échéance de l'apurement de régime suspensif !== 사후관리이행만료기간  ==! */
      , A.DLVR_COND_CD          /** Code de la condition de livraison !== 인도조건코드  ==! */
      , A.DLVR_PLC_CD           /** Code du lieu de livraison !== 인도장소코드  ==! */
      , A.INVC_NO               /** N° de facture !== 송장번호  ==! */
      , TO_CHAR(TO_DATE(A.INVC_PBLS_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS INVC_PBLS_DT  /** Date de l'émission de la facture !== 송장발행일자  ==! */
      , A.PYMN_MEAN_CD          /** Code de mode de paiement !== 지불방법코드  ==! */
      , A.PYMN_BNK_CD           /** Code de banque de paiement !== 지불은행코드 ==! */
      , A.PYMN_BNK_BRNH_CD      /** Code d'agnce de banque de paiement !== 지불은행지점코드 ==! */
      , A.PYMN_AC_NO            /** N° de compte de paiement !== 지불계좌번호 ==! */
      , A.DLNG_COND1_CD         /** Code de condition de transaction 1 !== 거래조건1코드 ==! */
      , A.DLNG_COND2_CD         /** Code de condition de transaction 2 !== 거래조건2코드 ==! */
      , A.PRC_DCSH_WRTE_YN      /** Déclaration de la valeur saisie ON !== 가격신고서기재여부 ==! */
      , A.OWHS_PRC_EV_YN        /** Auto-liquidation ON !== 자가가격평가여부 ==! */
      , A.DCER_WRTE_CN          /** Texte libre réservé au déclarant !== 신고인기재내용 ==! */
      , A.PRCS_STTS_CD          /** Code de statut de traitement !== 처리상태코드==! */
      , A.DEPT_CD               /** Code de section !== 부서코드==! */
      , A.AUDT_EMP_ID           /** ID de la personne vérifiant !== 심사직원ID==! */
      , (SELECT emp_fmnm || emp_nm FROM TB_POTI_EMP WHERE PBSR_NO = A.AUDT_EMP_ID) AS AUDT_EMP_NM      /** Nom du la personne vérifiant !== 심사직원명==! */
      , A.INSC_EMP_ID             /** ID de l'inspecteur !==검사직원ID==! */
      , (SELECT emp_fmnm || emp_nm FROM TB_POTI_EMP WHERE PBSR_NO = A.INSC_EMP_ID) AS INSC_EMP_NM      /** Nom du l'inspecteur !==검사직원명==! */
      , A.SELC_RSLT_CD          /** Code de résultat de ciblage !== 선별결과코드==! */
      , A.PSMGT_TRGT_YN         /** Cible du suivi ON !== 사후관리대상여부==! */
      , A.PSMGT_FFMN_CMPL_YN    /** Régime suspensif apuré ON !== 사후관리이행완료여부==! */
      , TO_CHAR(TO_DATE(A.PSMGT_FFMN_CMPL_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS PSMGT_FFMN_CMPL_DT  /** Date de l'apurement de régime suspensif !== 사후관리이행완료일자==! */
      , A.PSMGT_FFMN_XPIR_PRID  /** Période d'échéance de l'apurement de régime suspensif !== 사후관리이행만료기간==! */
      , A.HIST_SRNO             /** N° de séquence de l'histoire !== 이력일련번호==! */
      , TO_CHAR(TO_DATE(A.EXP_FFMN_CMPL_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS EXP_FFMN_CMPL_DT  /** Date de l'accomplissement de l'apurement d'exportation !== 수출이행완료일자==! */
      , TO_CHAR(TO_DATE(A.EXP_FFMN_XPIR_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS EXP_FFMN_XPIR_DT  /** Date d'échéance de l'apurement d'exportation !== 수출이행만료일자==! */
      , TO_CHAR(TO_DATE(A.ASMT_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS ASMT_DT  /** Date de la liquidation !== 가격평가심사일자==! */
      , A.ACPT_YN               /** Enlèvement autorisé ON !== 수리여부==! */
      , TO_CHAR(TO_DATE(A.ACPT_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS ACPT_DT /** Date de l'autorisation d'enlèvement des marchandises !== 수리일자==! */
      , A.RLSE_YN               /** Enlevé ON !== 반출여부==! */
      , TO_CHAR(TO_DATE(A.RLSE_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS RLSE_DT  /** Date d'enlèvement !== 반출일자==! */
      , A.ATR_DCLR_RCPN_YN      /** Déclaration modifiée reçue ON !== 수정신고수신여부==! */
      , A.CNCL_DCLR_RCPN_YN     /** Déclaration de l'annulation reçue ON !== 취소신고수신여부==! */
      , A.CSCL_PSTP_YN          /** Dédouanement suspendu ON !== 통관보류여부==! */
      , A.DPUT_YN               /** Contentieux ON !== 쟁송여부==! */
      , A.PRVI_DCLR_APRE_YN     /** Déclaration provisoire autorisée ON !== 잠정신고승인여부==! */
      , A.NEW_SYS_YN            /** Nouveau système ON !== 신규시스템여부==! */
      , A.DEL_YN                /** Suppression ON !== 삭제여부==! */
      , TO_CHAR(TO_DATE(A.RQST_DT, 'YYYYMMDD'),'DD/MM/YYYY') AS RQST_DT /** Date de demande !== 신청일자==! */
      , TO_CHAR(FRST_RGSR_DTTM, 'DD/MM/YYYY') AS FRST_RGSR_DTTM  /** Date et heure de premier enregistrement !== 최초등록일시==! */
      , FRST_REGST_ID           /** ID du premier enregistrant  !== 최초등록자ID==! */
      , (SELECT EMP_NM FROM TB_POTI_EMP WHERE PBSR_NO = A.FRST_REGST_ID) AS FRST_REGST_NM          /* Nom du premier enregistrant  !== 최초등록자이름 ==! */
      , TO_CHAR(LAST_CHG_DTTM, 'DD/MM/YYYY') AS LAST_CHG_DTTM   /** Date et heure de modification finale !== 최종변경일시==! */
      , LAST_CHPR_ID            /** ID du modificateur final  !== 최종변경자IDID==! */
      , (SELECT EMP_NM FROM TB_POTI_EMP WHERE PBSR_NO = A.LAST_CHPR_ID) AS LAST_CHPR_NM          /* Nom du modificateur final !== 최종변경자이름 ==! */
      , (SELECT
           NVL2(MAX(S1.CO_NM), A.DCER_CD || ' | ' || MAX(S1.CO_NM), A.DCER_CD)
         FROM
           TB_COM_CO S1
            , TB_COM_CO_DCLR_CD S2
         WHERE
           S1.NIF = S2.NIF
           AND    S2.CO_DCLR_TP_CD = 'H'
           AND    S2.CO_DCLR_CD = A.DCER_CD) AS DCER_NM                                                 /** Nom de l'entreprise !== 업체명 ==! */
      , (SELECT EXPPN_CO_NM FROM ALPASSINT.TB_CLRI_DED_CO WHERE DEL_YN ='N' AND DTL_DCSH_NO = A.DTL_DCSH_NO) AS EXPPN_CO_NM  /** Nom de société de l'exportateur !== 수출자업체명 ==! */
      , (SELECT IMPPN_CO_NM FROM ALPASSINT.TB_CLRI_DED_CO WHERE DTL_DCSH_NO = A.DTL_DCSH_NO AND DEL_YN = 'N') AS IMPPN_CO_NM
      , A.INSC_PLC_TP_CD
      , (SELECT TXPR_CO_NM FROM ALPASSINT.TB_CLRI_DED_CO WHERE DTL_DCSH_NO = A.DTL_DCSH_NO AND DEL_YN = 'N') AS TXPR_CO_NM
      , (SELECT DCER_CO_NM FROM ALPASSINT.TB_CLRI_DED_CO WHERE DTL_DCSH_NO = A.DTL_DCSH_NO AND DEL_YN = 'N') AS DCER_CO_NM
      , (SELECT NIF FROM ALPASSINT.TB_COM_CO_USER WHERE USER_ID = (SELECT FRST_REGST_ID FROM ALPASSINT.TB_CLRI_DED_COMN WHERE DTL_DCSH_NO = A.DTL_DCSH_NO )) AS NIF
      , A.TRNP_METH_KND_CD
    FROM TB_CLRI_DED_COMN A
    WHERE A.DTL_DCSH_NO = #{dtlDcshNo}
    AND A.DEL_YN = 'N'
  </select>

  <!--
    @TODO 변역필요
    !== 검사 목록 조회 ==!
    (Beak SangYeol)
    -->
  <select id="selectInscList" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtVo" resultType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtDetlVo">
    /* selectInscList */
    SELECT
      B.DTL_DCSH_NO
       , B.VIST_INSC_PLC_NM
       , B.INFM_YN
       , B.DCER_ATND_YN
       , B.INFM_CN
       , B.VIST_INSC_RQST_DGCNT
       , TO_CHAR(B.INSC_PRNG_DTTM,  'DD/MM/YYYY HH24:MI:SS') AS INSC_PRNG_DTTM
       , TO_CHAR(B.DCER_INSC_REQST_DTTM,  'DD/MM/YYYY HH24:MI:SS') AS DCER_INSC_REQST_DTTM
       , TO_CHAR(B.ADOR_INSC_REQST_DTTM,  'DD/MM/YYYY HH24:MI:SS') AS ADOR_INSC_REQST_DTTM
       , TO_CHAR(B.INSC_FIX_DTTM,  'DD/MM/YYYY HH24:MI:SS') AS INSC_FIX_DTTM
       , B.DEL_YN
       , B.DCER_SPOT_ISPR_NM
       , ( SELECT IPRT_PRCS_STTS_CD FROM TB_CLRI_DED_INSC_RSLT A WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO AND A.VIST_INSC_RQST_DGCNT = B.VIST_INSC_RQST_DGCNT ) AS IPRT_PRCS_STTS_CD
       , ( SELECT DSCL_YN FROM TB_CLRI_DED_INSC_RSLT A WHERE  A.DTL_DCSH_NO = B.DTL_DCSH_NO AND A.VIST_INSC_RQST_DGCNT = B.VIST_INSC_RQST_DGCNT ) AS DSCL_YN
    FROM TB_CLRI_DED_INSC_INFM B
    WHERE B.DTL_DCSH_NO = #{dtlDcshNo}
    AND B.DEL_YN = 'N'
    ORDER BY B.VIST_INSC_RQST_DGCNT DESC
  </select>

  <!--
    Consultation des notifications de visite physique
    !== 검사통보 조회 ==!
    (Beak SangYeol)
    -->
  <select id="selectInscInfm" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtVo" resultType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtInscVo">
    /* selectInscInfm */
    SELECT
      B.DTL_DCSH_NO
      , B.VIST_INSC_PLC_NM
      , B.INFM_YN
      , B.DCER_ATND_YN
      , B.INFM_CN
      , TO_CHAR(B.INSC_PRNG_DTTM,  'DD/MM/YYYY HH24:MI:SS') AS INSC_PRNG_DTTM
      , TO_CHAR(B.DCER_INSC_REQST_DTTM,  'DD/MM/YYYY HH24:MI:SS') AS DCER_INSC_REQST_DTTM
      , TO_CHAR(B.ADOR_INSC_REQST_DTTM,  'DD/MM/YYYY HH24:MI:SS') AS ADOR_INSC_REQST_DTTM
      , TO_CHAR(B.INSC_FIX_DTTM,  'DD/MM/YYYY HH24:MI:SS') AS INSC_FIX_DTTM
      , B.DEL_YN
      , (SELECT iprt_prcs_stts_cd FROM TB_CLRI_DED_INSC_RSLT A WHERE A.DTL_DCSH_NO = B.DTL_DCSH_NO AND A.VIST_INSC_RQST_DGCNT = B.VIST_INSC_RQST_DGCNT) AS IPRT_PRCS_STTS_CD
      , B.DCER_SPOT_ISPR_NM
      , B.VIST_INSC_RQST_DGCNT
    FROM TB_CLRI_DED_INSC_INFM B
    WHERE B.DTL_DCSH_NO = #{dtlDcshNo}
    AND B.VIST_INSC_RQST_DGCNT = #{vistInscRqstDgcnt}
  </select>

  <!--
    @TODO 변역필요
    !== 검사통보 등록/수정 ==!
    (Beak SangYeol)
    -->
  <insert id="mergeInscInfm" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtInscVo">
    /* insertInscInfm */
    INSERT INTO TB_CLRI_DED_INSC_INFM (
      DTL_DCSH_NO
      <if test="vistInscPlcNm != null and vistInscPlcNm != ''">
        , VIST_INSC_PLC_NM
      </if>
      <if test="infmYn != null and infmYn != ''">
        , INFM_YN
      </if>
      <if test="dcerAtndYn != null and dcerAtndYn != ''">
        , DCER_ATND_YN
      </if>
      <if test="infmCn != null and infmCn != ''">
        , INFM_CN
      </if>
      <if test="inscPrngDttm != null and inscPrngDttm != ''">
        , INSC_PRNG_DTTM
      </if>
      <if test="adorInscReqstDttm != null and adorInscReqstDttm != ''">
        , ADOR_INSC_REQST_DTTM
      </if>
      <if test="inscFixDttm != null and inscFixDttm != ''">
        , INSC_FIX_DTTM
      </if>
      <if test="aprvId != null and aprvId != ''">
        , APRV_ID
      </if>
      , DEL_YN
      , FRST_REGST_ID
      , FRST_RGSR_DTTM
      , LAST_CHPR_ID
      , LAST_CHG_DTTM
      , VIST_INSC_RQST_DGCNT
    ) VALUES (
      #{dtlDcshNo}
      <if test="vistInscPlcNm != null and vistInscPlcNm != ''">
        , #{vistInscPlcNm}
      </if>
      <if test="infmYn != null and infmYn != ''">
        , #{infmYn}
      </if>
      <if test="dcerAtndYn != null and dcerAtndYn != ''">
        , #{dcerAtndYn}
      </if>
      <if test="infmCn != null and infmCn != ''">
        , #{infmCn}
      </if>
      <if test="inscPrngDttm != null and inscPrngDttm != ''">
        , TO_TIMESTAMP(#{inscPrngDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="adorInscReqstDttm != null and adorInscReqstDttm != ''">
        , TO_TIMESTAMP(#{adorInscReqstDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="inscFixDttm != null and inscFixDttm != ''">
        , TO_TIMESTAMP(#{inscFixDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="aprvId != null and aprvId != ''">
        , #{aprvId}
      </if>
      , 'N'
      , #{frstRegstId}
      , SYSTIMESTAMP
      , #{lastChprId}
      , SYSTIMESTAMP
      , #{vistInscRqstDgcnt}
    )
    ON CONFLICT (DTL_DCSH_NO, VIST_INSC_RQST_DGCNT)
    DO UPDATE SET
      LAST_CHPR_ID = #{lastChprId}
      , LAST_CHG_DTTM = SYSTIMESTAMP
      <if test="vistInscPlcNm != null and vistInscPlcNm != ''">
        , VIST_INSC_PLC_NM = #{vistInscPlcNm}
      </if>
      <if test="infmYn != null and infmYn != ''">
        , INFM_YN = #{infmYn}
      </if>
      <if test="dcerAtndYn != null and dcerAtndYn != ''">
        , DCER_ATND_YN = #{dcerAtndYn}
      </if>
      <if test="infmCn != null and infmCn != ''">
        , INFM_CN = #{infmCn}
      </if>
      <if test="inscPrngDttm != null and inscPrngDttm != ''">
        , INSC_PRNG_DTTM = TO_TIMESTAMP(#{inscPrngDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="adorInscReqstDttm != null and adorInscReqstDttm != ''">
        , ADOR_INSC_REQST_DTTM = TO_TIMESTAMP(#{adorInscReqstDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="inscFixDttm != null and inscFixDttm != ''">
        , INSC_FIX_DTTM = TO_TIMESTAMP(#{inscFixDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
  </insert>

  <!--
    Enregistrement/modification de la programmation finale de visite physique
    !== 검사확정 등록/수정 ==!
    (Beak SangYeol)
    -->
  <insert id="mergeInscDtrm" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtInscVo">
    /* insertInscDtrm */
    INSERT INTO TB_CLRI_DED_INSC_INFM (
      DTL_DCSH_NO
      , VIST_INSC_RQST_DGCNT
      <if test="vistInscPlcNm != null and vistInscPlcNm != ''">
        , VIST_INSC_PLC_NM
      </if>
      <if test="infmYn != null and infmYn != ''">
        , INFM_YN
      </if>
      <if test="dcerAtndYn != null and dcerAtndYn != ''">
        , DCER_ATND_YN
      </if>
      <if test="infmCn != null and infmCn != ''">
        , INFM_CN
      </if>
      <if test="inscPrngDttm != null and inscPrngDttm != ''">
        , INSC_PRNG_DTTM
      </if>
      <if test="adorInscReqstDttm != null and adorInscReqstDttm != ''">
        , ADOR_INSC_REQST_DTTM
      </if>
      <if test="inscFixDttm != null and inscFixDttm != ''">
        , INSC_FIX_DTTM
      </if>
      , DEL_YN
      , FRST_REGST_ID
      , FRST_RGSR_DTTM
      , LAST_CHPR_ID
      , LAST_CHG_DTTM
      ) VALUES (
      #{dtlDcshNo}
      , #{vistInscRqstDgcnt}
      <if test="vistInscPlcNm != null and vistInscPlcNm != ''">
        , #{vistInscPlcNm}
      </if>
      <if test="infmYn != null and infmYn != ''">
        , #{infmYn}
      </if>
      <if test="dcerAtndYn != null and dcerAtndYn != ''">
        , #{dcerAtndYn}
      </if>
      <if test="infmCn != null and infmCn != ''">
        , #{infmCn}
      </if>
      <if test="inscPrngDttm != null and inscPrngDttm != ''">
        , TO_TIMESTAMP(#{inscPrngDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="adorInscReqstDttm != null and adorInscReqstDttm != ''">
        , TO_TIMESTAMP(#{adorInscReqstDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="inscFixDttm != null and inscFixDttm != ''">
        , TO_TIMESTAMP(#{inscFixDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      , 'N'
      , #{frstRegstId}
      , SYSTIMESTAMP
      , #{lastChprId}
      , SYSTIMESTAMP
    )
    ON CONFLICT (dtl_dcsh_no, VIST_INSC_RQST_DGCNT)
    DO UPDATE SET
      LAST_CHPR_ID = #{lastChprId}
      , LAST_CHG_DTTM = SYSTIMESTAMP
      <if test="vistInscPlcNm != null and vistInscPlcNm != ''">
        , VIST_INSC_PLC_NM = #{vistInscPlcNm}
      </if>
      <if test="infmYn != null and infmYn != ''">
        , INFM_YN = #{infmYn}
      </if>
      <if test="dcerAtndYn != null and dcerAtndYn != ''">
        , DCER_ATND_YN = #{dcerAtndYn}
      </if>
      <if test="infmCn != null and infmCn != ''">
        , INFM_CN = #{infmCn}
      </if>
      <if test="inscPrngDttm != null and inscPrngDttm != ''">
        , INSC_PRNG_DTTM = TO_TIMESTAMP(#{inscPrngDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="adorInscReqstDttm != null and adorInscReqstDttm != ''">
        , ADOR_INSC_REQST_DTTM = TO_TIMESTAMP(#{adorInscReqstDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
      <if test="inscFixDttm != null and inscFixDttm != ''">
        , INSC_FIX_DTTM = TO_TIMESTAMP(#{inscFixDttm}, 'DD/MM/YYYY HH24:MI:SS')
      </if>
  </insert>

  <!--
    Consultation des résultats de la visite physique
    !== 검사결과 조회 ==!
    (Beak SangYeol)
    -->
  <select id="selectInscRslt" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtVo" resultType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtInscRsltVo">
    /* selectInscRslt */
    SELECT
      DTL_DCSH_NO
      , INSC_DT
      , DSCL_YN
      , VIST_INSC_RQRD_HR
      , VIST_INSC_PLC_NM
      , INSC_RSLT_CN
      , ISPR_INSC_RSLT_CN
      , IPRT_PRCS_STTS_CD
      , SPOT_ISPR_ID
      , SPOT_ATND_ISPR_ID
    FROM TB_CLRI_DED_INSC_RSLT
    WHERE DTL_DCSH_NO = #{dtlDcshNo}
    AND VIST_INSC_RQST_DGCNT = #{vistInscRqstDgcnt}
  </select>

  <!--
    Consultation des résultats de la visite physique
    !== 검사결과 조회 ==!
    (Beak SangYeol)
    -->
  <select id="selectVistInscRqstDgcnt" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtInscVo" resultType="int">
    /* selectVistInscRqstDgcnt */
    SELECT NVL(MAX(VIST_INSC_RQST_DGCNT)+1,1)
    FROM TB_CLRI_DED_INSC_INFM
    WHERE DTL_DCSH_NO = #{dtlDcshNo}
  </select>

  <!--
    Enregistrement/modification de résultats de la visite physique
    !== 검사결과 등록/수정 ==!
    (Beak SangYeol)
    -->
  <insert id="mergeInscRslt" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtInscRsltVo">
    /* mergeInscRslt */
    INSERT INTO TB_CLRI_DED_INSC_RSLT (
      DTL_DCSH_NO
      , INSC_DT
      , DSCL_YN
      <if test="inscRsltCn != null and inscRsltCn != ''">
        , INSC_RSLT_CN
      </if>
      <if test="isprInscRsltCn != null and isprInscRsltCn != ''">
        , ISPR_INSC_RSLT_CN
      </if>
      , IPRT_PRCS_STTS_CD
      <if test="spotIsprId != null and spotIsprId != ''">
        , SPOT_ISPR_ID
      </if>
      <if test="spotAtndIsprId != null and spotAtndIsprId != ''">
        , SPOT_ATND_ISPR_ID
      </if>
      , DEL_YN
      <if test="adorPrcsDttm != null and adorPrcsDttm != ''">
        , ADOR_PRCS_DTTM
      </if>
      <if test="dcerPrcsDttm != null and dcerPrcsDttm != ''">
        , DCER_PRCS_DTTM
      </if>
      <if test="ibobzOptrPrcsDttm != null and ibobzOptrPrcsDttm != ''">
        , IBOBZ_OPTR_PRCS_DTTM
      </if>
      <if test="isprPrcsDttm != null and isprPrcsDttm != ''">
        , ISPR_PRCS_DTTM
      </if>
      , FRST_REGST_ID
      , FRST_RGSR_DTTM
      , LAST_CHPR_ID
      , LAST_CHG_DTTM
      , VIST_INSC_RQST_DGCNT
    ) VALUES (
      #{dtlDcshNo}
      , TO_CHAR(SYSTIMESTAMP,'YYYYMMDD')
      , 'N'
      <if test="inscRsltCn != null and inscRsltCn != ''">
        , #{inscRsltCn}
      </if>
      <if test="isprInscRsltCn != null and isprInscRsltCn != ''">
        , #{isprInscRsltCn}
      </if>
        , #{iprtPrcsSttsCd}
      <if test="spotIsprId != null and spotIsprId != ''">
        , #{spotIsprId}
      </if>
      <if test="spotAtndIsprId != null and spotAtndIsprId != ''">
        , #{spotAtndIsprId}
      </if>
      , 'N'
      <if test="adorPrcsDttm != null and adorPrcsDttm != ''">
        , SYSTIMESTAMP
      </if>
      <if test="dcerPrcsDttm != null and dcerPrcsDttm != ''">
        , SYSTIMESTAMP
      </if>
      <if test="ibobzOptrPrcsDttm != null and ibobzOptrPrcsDttm != ''">
        , SYSTIMESTAMP
      </if>
      <if test="isprPrcsDttm != null and isprPrcsDttm != ''">
        , SYSTIMESTAMP
      </if>
      , #{frstRegstId}
      , SYSTIMESTAMP
      , #{lastChprId}
      , SYSTIMESTAMP
      , #{vistInscRqstDgcnt}
    )
    ON CONFLICT (DTL_DCSH_NO, VIST_INSC_RQST_DGCNT)
    DO UPDATE SET
    LAST_CHPR_ID = #{lastChprId}
    , LAST_CHG_DTTM = SYSTIMESTAMP
    , INSC_DT = TO_CHAR(SYSTIMESTAMP,'YYYYMMDD')
    <if test="inscRsltCn != null and inscRsltCn != ''">
      , INSC_RSLT_CN = #{inscRsltCn}
    </if>
    <if test="isprInscRsltCn != null and isprInscRsltCn != ''">
      , ISPR_INSC_RSLT_CN = #{isprInscRsltCn}
    </if>
    <if test="iprtPrcsSttsCd != null and iprtPrcsSttsCd != ''">
      , IPRT_PRCS_STTS_CD = #{iprtPrcsSttsCd}
    </if>
    <if test="dsclYn != null and dsclYn != ''">
      , DSCL_YN = #{dsclYn}
    </if>
    <if test="spotIsprId != null and spotIsprId != ''">
      , SPOT_ISPR_ID = #{spotIsprId}
    </if>
    <if test="spotAtndIsprId != null and spotAtndIsprId != ''">
      , SPOT_ATND_ISPR_ID = #{spotAtndIsprId}
    </if>
    <if test="adorPrcsDttm != null and adorPrcsDttm != ''">
      , ADOR_PRCS_DTTM = SYSTIMESTAMP
    </if>
    <if test="dcerPrcsDttm != null and dcerPrcsDttm != ''">
      , DCER_PRCS_DTTM = SYSTIMESTAMP
    </if>
    <if test="ibobzOptrPrcsDttm != null and ibobzOptrPrcsDttm != ''">
      , IBOBZ_OPTR_PRCS_DTTM = SYSTIMESTAMP
    </if>
    <if test="isprPrcsDttm != null and isprPrcsDttm != ''">
      , ISPR_PRCS_DTTM = SYSTIMESTAMP
    </if>
  </insert>

  <!--
    Consultation de la liste de gestion des cibles de visite physique  !== 검사대상관리 목록 조회 ==!
    (Beak SangYeol)
    -->
  <select id="selectPdlsMtrList" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtVo" resultType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtPdlsMtrVo">
    /* selectPdlsMtrList */
    <include refid="pagination.header" ></include>
    SELECT B.DTL_DCSH_NO
      , B.PDLS_NO
      , DECODE(NVL(C.BFCH_HS_CD,''), '', B.HS_CD, C.BFCH_HS_CD) AS BFCH_HS_CD
      , C.AFCH_HS_CD
      , DECODE(NVL(C.BFCH_ORCY_CNTY_CD,''), '', B.ORCY_CNTY_CD, C.BFCH_ORCY_CNTY_CD) AS BFCH_ORCY_CNTY_CD
      , C.AFCH_ORCY_CNTY_CD
      , DECODE(NVL(C.BFCH_QTY,0), 0, B.QTY, C.BFCH_QTY) AS BFCH_QTY
      , C.AFCH_QTY
      , DECODE(NVL(C.BFCH_PDLS_TTWG,0), 0, B.PDLS_TTWG, C.BFCH_PDLS_TTWG) AS BFCH_PDLS_TTWG
      , C.AFCH_PDLS_TTWG
      , A.SELC_RSLT_CD
      --, ( SELECT AA.SELC_RSLT_CD FROM   TB_RSMI_DED_PDLS_CHNL AA WHERE  AA.DTL_DCSH_NO  = B.DTL_DCSH_NO AND    AA.PDLS_NO = B.PDLS_NO    ) AS SELC_RSLT_CD
      , ( SELECT BB.SELC_CHG_YN FROM   TB_RSMI_DED_PDLS_CHNL BB WHERE  BB.DTL_DCSH_NO = B.DTL_DCSH_NO AND    BB.PDLS_NO = B.PDLS_NO  ) AS SELC_CHG_YN
      , C.INSC_1_RSLT_CD
      , C.INSC_2_RSLT_CD
      , C.INSC_3_RSLT_CD
      , C.INSC_4_RSLT_CD
      , C.INSC_5_RSLT_CD
      , C.INSC_6_RSLT_CD
      , C.CNTR_NO
      , C.PDLS_INSC_RSLT_CN
      , B.APC_CD
      , B.BRND_NM
      , B.QTA_APRE_NO
      , B.PRVL_CD
      , B.BF_DTL_DCSH_NO
      , B.BF_DTL_DCSH_DT
      , B.BF_PDLS_NO
      , B.PRC_DTRM_MEAN_CD
      , B.PDLS_PCKG_GCNT
      , B.PDLS_PCKG_UT_CD
      , C.VIST_INSC_RQST_DGCNT
    FROM   TB_CLRI_DED_COMN A
      , TB_CLRI_DED_PDLS B
      LEFT OUTER JOIN TB_CLRI_DED_PDLS_INSC_RSLT C
      ON (B.PDLS_NO = C.PDLS_NO AND C.DTL_DCSH_NO = B.DTL_DCSH_NO
        AND C.VIST_INSC_RQST_DGCNT = #{vistInscRqstDgcnt})
    WHERE  1=1
    AND A.DTL_DCSH_NO = #{dtlDcshNo}
    AND A.DEL_YN = 'N'
    AND B.DTL_DCSH_NO = A.DTL_DCSH_NO
    ORDER BY PDLS_NO
    <include refid="pagination.footer" ></include>
  </select>

  <!--
    Enregistrement/modification des articles cibles de la visite physique !== 검사대상관리 품목사항 등록/수정 ==!
    (Beak SangYeol)
    -->
  <update id="mergeIprtPdlsMtr" parameterType="alpass.ipt.psc.vhcl.pdr.ddi.vo.ClrPdrDdiIprtPdlsMtrDetlVo">
    /* mergeIprtPdlsMtr */
    INSERT INTO TB_CLRI_DED_PDLS_INSC_RSLT (
      PDLS_NO
      , DTL_DCSH_NO
      , VIST_INSC_RQST_DGCNT
      , BFCH_HS_CD
      , AFCH_HS_CD
      , BFCH_ORCY_CNTY_CD
      , AFCH_ORCY_CNTY_CD
      , BFCH_QTY
      , AFCH_QTY
      , BFCH_PDLS_TTWG
      , AFCH_PDLS_TTWG
      <if test="insc1RsltCd != null and insc1RsltCd != ''">
        , INSC_1_RSLT_CD
      </if>
      <if test="insc2RsltCd != null and insc2RsltCd != ''">
        , INSC_2_RSLT_CD
      </if>
      , CNTR_NO
      <if test="pdlsInscRsltCn != null and pdlsInscRsltCn != ''">
        , PDLS_INSC_RSLT_CN
      </if>
      , DEL_YN
      , FRST_REGST_ID
      , FRST_RGSR_DTTM
      , LAST_CHPR_ID
      , LAST_CHG_DTTM
    ) VALUES (
      #{pdlsNo}
      , #{dtlDcshNo}
      , #{vistInscRqstDgcnt}
      , DECODE(#{afchHsCd}, NULL, NULL, #{bfchHsCd})
      , #{afchHsCd}
      , DECODE(#{afchOrcyCntyCd}, NULL, NULL, #{bfchOrcyCntyCd})
      , #{afchOrcyCntyCd}
      , DECODE(#{afchQty}, NULL, NULL, #{bfchQty})
      , #{afchQty}
      ,DECODE(#{afchPdlsTtwg}, NULL, NULL, #{bfchPdlsTtwg})
      , #{afchPdlsTtwg}
      <if test="insc1RsltCd != null and insc1RsltCd != ''">
        , #{insc1RsltCd}
      </if>
      <if test="insc2RsltCd != null and insc2RsltCd != ''">
        , #{insc2RsltCd}
      </if>
      , #{cntrNo}
      <if test="pdlsInscRsltCn != null and pdlsInscRsltCn != ''">
        , #{pdlsInscRsltCn}
      </if>
      , 'N'
      , #{frstRegstId}
      , SYSTIMESTAMP
      , #{lastChprId}
      , SYSTIMESTAMP
    )
    ON CONFLICT (PDLS_NO, DTL_DCSH_NO, VIST_INSC_RQST_DGCNT)
    DO UPDATE SET
      LAST_CHPR_ID = #{lastChprId}
      , LAST_CHG_DTTM = SYSTIMESTAMP
      , BFCH_HS_CD        = DECODE(#{afchHsCd}, NULL, NULL, #{bfchHsCd})
      <if test="afchHsCd != null and afchHsCd != ''">
        , AFCH_HS_CD = #{afchHsCd}
      </if>
      , BFCH_ORCY_CNTY_CD = DECODE(#{afchOrcyCntyCd}, NULL, NULL, #{bfchOrcyCntyCd})
      <if test="afchOrcyCntyCd != null and afchOrcyCntyCd != ''">
        , AFCH_ORCY_CNTY_CD = #{afchOrcyCntyCd}
      </if>
      , BFCH_QTY          = DECODE(#{afchQty}, NULL, NULL, #{bfchQty})
      <if test="afchQty != null and afchQty != ''">
        , AFCH_QTY = #{afchQty}
      </if>
      , BFCH_PDLS_TTWG    = DECODE(#{afchPdlsTtwg}, NULL, NULL, #{bfchPdlsTtwg})
      <if test="afchPdlsTtwg != null and afchPdlsTtwg != ''">
        , AFCH_PDLS_TTWG = #{afchPdlsTtwg}
      </if>
      <if test="insc1RsltCd != null and insc1RsltCd != ''">
        , INSC_1_RSLT_CD = #{insc1RsltCd}
      </if>
      <if test="insc2RsltCd != null and insc2RsltCd != ''">
        , INSC_2_RSLT_CD = #{insc2RsltCd}
      </if>
      <if test="cntrNo != null and cntrNo != ''">
          , CNTR_NO = #{cntrNo}
      </if>
      <if test="pdlsInscRsltCn != null and pdlsInscRsltCn != ''">
          , PDLS_INSC_RSLT_CN = #{pdlsInscRsltCn}
      </if>
  </update>

  <update id="updateInscTrgt" parameterType="alpass.ipt.psc.vhcl.pdr.dre.vo.ClrDedCntrVo">
    /* updateInscTrgt */
    UPDATE TB_CLRI_DED_CNTR
    SET
      LAST_CHPR_ID = #{lastChprId}
      , LAST_CHG_DTTM = CURRENT_TIMESTAMP
      , INSC_TRGT_YN = 'Y'
    WHERE DEL_YN = 'N'
      AND	  CNTR_TP_CD = #{cntrTpCd}
      AND	  CNTR_NO = #{cntrNo}
      AND	  CNTR_SRNO = #{cntrSrno}
  </update>

  <!-- Consultation de la liste des conteneurs de DED !==DED 컨테이너 목록 조회==! -->
  <select id="selectInscDedCntrList" parameterType="alpass.ipt.psc.vhcl.pdr.dre.vo.ClrDedSrchVo" resultType="alpass.ipt.psc.vhcl.pdr.dre.vo.ClrDedCntrDcshVo">
    /* selectDedCntrList */
    SELECT
      A.DTL_DCSH_NO
         , A.CNTR_SRNO
         , A.CNTR_NO
         , A.CNTR_TP_CD
         ,  (
      SELECT PCKG_GCNT
      FROM (
            SELECT PCKG_GCNT
            FROM TB_CARI_CAG_DCSH_BL_CNTR D
            WHERE D.CAG_MGMT_NO = B.CAG_MGMT_NO
              AND D.CNTR_NO = A.CNTR_NO
              AND D.DEL_YN = 'N'
           )
      WHERE ROWNUM = 1
      ) AS PCKG_GCNT
         , (
     SELECT ECNTR_WGHT
     FROM (
            SELECT ECNTR_WGHT
            FROM TB_CARI_CAG_DCSH_BL_CNTR D
            WHERE 1=1
            AND D.CAG_MGMT_NO = B.CAG_MGMT_NO
            AND D.CNTR_NO = A.CNTR_NO
            AND D.DEL_YN = 'N'
     )
     WHERE ROWNUM = 1
     ) AS ECNTR_WGHT
        , (
        SELECT TTWG
        FROM (
        SELECT TTWG
        FROM TB_CARI_CAG_DCSH_BL_CNTR D
        WHERE D.CAG_MGMT_NO = B.CAG_MGMT_NO
        AND D.CNTR_NO = A.CNTR_NO
        AND D.DEL_YN = 'N'
        )
        WHERE ROWNUM = 1
        ) AS TTWG
         , A.CNTR_STFN_STTS_CD
         , A.SEAL_NO1
         , A.SEAL_NO2
         , A.SEAL_NO3
         , A.SEAL_CHPN1
         , A.SEAL_CHPN2
         , A.SEAL_CHPN3
         , NVL(A.INSC_TRGT_YN, 'N') AS INSC_TRGT_YN
         , NVL(A.INSC_TRGT_YN, 'N') AS CHK_SEL
         , (
      SELECT CNTR_SCN_URL
      FROM (
             SELECT CNTR_SCN_URL
             FROM TB_COM_CNTR_SCN_IMGE C
             WHERE C.CNTR_NO    = A.CNTR_NO
               AND C.IMEX_TP_CD = 'EXP'                        /* 수출 */
               AND C.REFF_NO    = A.DTL_DCSH_NO                     /* DED번호 */
               AND C.DEL_YN     = 'N'
             UNION ALL
             SELECT CNTR_SCN_URL
             FROM TB_COM_CNTR_SCN_IMGE C
             WHERE C.CNTR_NO    = A.CNTR_NO
               AND C.IMEX_TP_CD = 'IMP'                        /* 수입 */
               AND C.REFF_NO    = SUBSTR(B.CAG_MGMT_NO, 0, 15) /* MRN */
               AND C.DEL_YN     = 'N'
           )
      WHERE ROWNUM = 1
    ) AS CNTR_SCN_URL
    FROM	TB_CLRI_DED_CNTR A
       , TB_CLRI_DED_COMN B
    WHERE A.DTL_DCSH_NO = #{dtlDcshNo}
      AND A.DTL_DCSH_NO = B.DTL_DCSH_NO
      AND A.DEL_YN = 'N'
      AND B.DEL_YN = 'N'
      <if test="cntrChk != null and cntrChk != ''">
        AND A.INSC_TRGT_YN = 'Y'
      </if>
    ORDER BY A.CNTR_SRNO
  </select>

</mapper>
