<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="alpass.ipt.col.sale.mapper.ColSaleDstrtRecWtnncMgmtMapper">

    <!--
    Consulter la liste de la gestion du procès-verbal de destruction !==파기기록조서를 조회한다==!
    -->
    <select id="selectColSaleDstrtRecWtnncMgmtList" parameterType="alpass.ipt.col.sale.vo.ColSaleDstrtRecWtnncMgmtVo" resultType="alpass.ipt.col.sale.vo.ColSaleDstrtRecWtnncMgmtVo">
        /** ColSaleDstrtRecWtnncMgmtMapper_selectColSaleDstrtRecWtnncMgmtList **/
        <include refid="pagination.header" />
        SELECT
        DSTRT.DSTRT_REC_WTNNC_NO
        , DSTRT.INVN_MGMT_NO
        , DSTRT.PDLS_SRNO
        , DSTRT.CSTM_CD
        , FN_GET_ORGN_NM(DSTRT.CSTM_CD) AS CSTM_NM								/** Nom Du Bureau !== 세관명 ==! */
        , DSTRT.DEPT_CD
        , (SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD = UPPER(DSTRT.DEPT_CD)) AS DEPT_NM
        , DSTRT.REFF_NO_PT_CD
        , DSTRT.REFF_NO
        , TO_CHAR(TO_DATE(DSTRT.DSTRT_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DSTRT_DT
        , DSTRT.DSTRT_RSN
        , DSTRT.ATCH_FILE_ID
        , DSTRT.DSTRT_APRE_NO
        , TO_CHAR(TO_DATE(DSTRT.DSTRT_APRE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DSTRT_APRE_DT
        , DSTRT.CLTR_ID
        , DSTRT.DSTRT_MEAN_CN
        , DSTRT.ATDT_INFO_CN
        , TO_CHAR(TO_DATE(DSTRT.RGSR_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RGSR_DT
        , DSTRT.DSTRT_PLC_NM
        , DTL.LAST_USG_CD
        , DSTRT.FRST_REGST_ID								    				/** ID du premier enregistrant !== 최초등록자ID ==! */
        , DSTRT.FRST_RGSR_DTTM									    			/** Date et heure de premier enregistrement !== 생성일자 ==! */
        , DSTRT.LAST_CHPR_ID														/** ID du modificateur final !== 최종변경자ID ==! */
        , DSTRT.LAST_CHG_DTTM													/** Date et heure de modification finale !== 최종변경일시 ==! */
        FROM TB_COLI_DSTRT_REC_WTNNC DSTRT
        LEFT JOIN TB_COLI_CMDT_INVN_PCDN_DTL DTL ON DTL.INVN_MGMT_NO = DSTRT.INVN_MGMT_NO AND DTL.PDLS_SRNO = DSTRT.PDLS_SRNO
        WHERE  DSTRT.DEL_YN = 'N'
        <if test="sctrCd != null and sctrCd != ''">
            AND  DSTRT.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
        </if>
        <if test="uprOrgnCd != null and uprOrgnCd != ''">
            AND  DSTRT.CSTM_CD = #{uprOrgnCd}
        </if>
        <if test="orgnCd != null and orgnCd != ''">
            AND (DSTRT.DEPT_CD = #{orgnCd} OR DSTRT.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) LIKE '%'||ORGN_MGMT_CD||'%')
                                           OR DSTRT.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}))))
        </if>
        <if test='cstmCd != null and cstmCd !="" '>
            AND    DSTRT.CSTM_CD = #{cstmCd}
        </if>
        <if test="deptCd != null and deptCd != ''">
            AND (DSTRT.DEPT_CD = #{deptCd} OR DSTRT.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
                                           OR DSTRT.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
            OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
        </if>
        <if test='rgsrDtFrom != null and rgsrDtFrom !="" and rgsrDtTo != null and rgsrDtTo !="" '>
            AND    DSTRT.RGSR_DT BETWEEN TO_CHAR(TO_DATE(#{rgsrDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{rgsrDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        ORDER BY DSTRT.RGSR_DT desc, DSTRT.DSTRT_REC_WTNNC_NO ASC
        <include refid="pagination.footer" />
    </select>

    <!--
    Consulter les détails de la gestion du procès-verbal de destruction !==파기기록조서를 조회한다==!
    -->
    <select id="selectColSaleDstrtRecWtnncMgmt" parameterType="alpass.ipt.col.sale.vo.ColSaleDstrtRecWtnncMgmtVo" resultType="alpass.ipt.col.sale.vo.ColSaleDstrtRecWtnncMgmtVo">
        /** ColSaleDstrtRecWtnncMgmtMapper_selectColSaleDstrtRecWtnncMgmt **/
        SELECT
        DSTRT.DSTRT_REC_WTNNC_NO
        , DSTRT.INVN_MGMT_NO
        , DSTRT.CSTM_CD
        , FN_GET_ORGN_NM(DSTRT.CSTM_CD) AS CSTM_NM								/** Nom Du Bureau !== 세관명 ==! */
        , DSTRT.DEPT_CD
        , (SELECT ORGN_NM FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD = UPPER(DSTRT.DEPT_CD)) AS DEPT_NM
        , DSTRT.REFF_NO_PT_CD
        , DSTRT.REFF_NO
        , TO_CHAR(TO_DATE(DSTRT.DSTRT_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DSTRT_DT
        , DSTRT.DSTRT_RSN
        , DSTRT.ATCH_FILE_ID
        , DSTRT.DSTRT_APRE_NO
        , TO_CHAR(TO_DATE(DSTRT.DSTRT_APRE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DSTRT_APRE_DT
        , DSTRT.CLTR_ID
        , DSTRT.DSTRT_MEAN_CN
        , DSTRT.ATDT_INFO_CN
        , TO_CHAR(TO_DATE(DSTRT.RGSR_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RGSR_DT
        , DSTRT.DSTRT_PLC_NM
        , DSTRT.FRST_REGST_ID								    				/** ID du premier enregistrant !== 최초등록자ID ==! */
        , DSTRT.FRST_RGSR_DTTM									    			/** Date et heure de premier enregistrement !== 생성일자 ==! */
        , DSTRT.LAST_CHPR_ID														/** ID du modificateur final !== 최종변경자ID ==! */
        , DSTRT.LAST_CHG_DTTM													/** Date et heure de modification finale !== 최종변경일시 ==! */
        FROM TB_COLI_DSTRT_REC_WTNNC DSTRT
        WHERE  DSTRT.DEL_YN = 'N'
        <if test='dstrtRecWtnncNo != null and dstrtRecWtnncNo !="" '>
            AND    DSTRT.DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo}
        </if>
    </select>

    <!--
    Ajouter la gestion du procès-verbal de destruction !==파기기록조서를 추가한다==!
    -->
    <insert id="insertColSaleDstrtRecWtnncMgmt" parameterType="alpass.ipt.col.sale.vo.ColSaleDstrtRecWtnncMgmtVo">
        /** ColSaleDstrtRecWtnncMgmtMapper_insertColSaleDstrtRecWtnncMgmt **/
        INSERT INTO TB_COLI_DSTRT_REC_WTNNC (
            DSTRT_REC_WTNNC_NO
            , INVN_MGMT_NO
            , PDLS_SRNO
            , CSTM_CD                                                           /** Code du bureau !== 세관코드 ==! */
            , DEPT_CD
            , REFF_NO_PT_CD
            , REFF_NO
            , DSTRT_DT
            , DSTRT_RSN
            , ATCH_FILE_ID
            , DSTRT_APRE_NO
            , DSTRT_APRE_DT
            , CLTR_ID
            , DSTRT_MEAN_CN
            , ATDT_INFO_CN
            , RGSR_DT
            , DSTRT_PLC_NM
            , DEL_YN							    						/** Suppression ON !== 삭제여부  ==! */
            , FRST_REGST_ID								    				/** ID du premier enregistrant !== 최초등록자ID ==! */
            , FRST_RGSR_DTTM									    			/** Date et heure de premier enregistrement !== 생성일자 ==! */
            , LAST_CHPR_ID														/** ID du modificateur final !== 최종변경자ID ==! */
            , LAST_CHG_DTTM													/** Date et heure de modification finale !== 최종변경일시 ==! */
        ) VALUES (
            #{dstrtRecWtnncNo}
            , #{invnMgmtNo}
            , #{pdlsSrno}
            , #{cstmCd}
            , #{deptCd}
            , #{reffNoPtCd}
            , #{reffNo}
            , TO_CHAR(TO_DATE(#{dstrtDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , #{dstrtRsn}
            , #{atchFileId}
            , #{dstrtApreNo}
            , TO_CHAR(TO_DATE(#{dstrtApreDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , #{cltrId}
            , #{dstrtMeanCn}
            , #{atdtInfoCn}
            , TO_CHAR(TO_DATE(#{rgsrDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , #{dstrtPlcNm}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
        )
    </insert>

    <!--
    Modifier la gestion du procès-verbal de destruction !==파기기록조서를 수정한다==!
    -->
    <update id="updateColSaleDstrtRecWtnncMgmt" parameterType="alpass.ipt.col.sale.vo.ColSaleDstrtRecWtnncMgmtVo">
        /** ColSaleDstrtRecWtnncMgmtMapper_updateColSaleDstrtRecWtnncMgmt **/
        UPDATE  TB_COLI_DSTRT_REC_WTNNC SET
            INVN_MGMT_NO = #{invnMgmtNo}
          , PDLS_SRNO = #{pdlsSrno}
            , REFF_NO_PT_CD = #{reffNoPtCd}
            , REFF_NO = #{reffNo}
            , DSTRT_DT = TO_CHAR(TO_DATE(#{dstrtDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , DSTRT_RSN = #{dstrtRsn}
            , ATCH_FILE_ID = #{atchFileId}
            , DSTRT_APRE_NO = #{dstrtApreNo}
            , DSTRT_APRE_DT = TO_CHAR(TO_DATE(#{dstrtApreDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , CLTR_ID = #{cltrId}
            , DSTRT_MEAN_CN = #{dstrtMeanCn}
            , ATDT_INFO_CN = #{atdtInfoCn}
            , RGSR_DT = TO_CHAR(TO_DATE(#{rgsrDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , DSTRT_PLC_NM = #{dstrtPlcNm}
            , LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo}
    </update>

    <!--
    Supprimer la gestion du procès-verbal de destruction !==파기기록조서를 삭제한다==!
    -->
    <update id="deleteColSaleDstrtRecWtnncMgmt" parameterType="alpass.ipt.col.sale.vo.ColSaleDstrtRecWtnncMgmtVo">
        /** ColSaleDstrtRecWtnncMgmtMapper_deleteColSaleDstrtRecWtnncMgmt **/
        UPDATE  TB_COLI_DSTRT_REC_WTNNC SET
            DEL_YN = 'Y'
            , LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo}
    </update>

    <!--
    Consulter la liste des articles du procès-verbal de destruction !==파기기록조서품목을 조회한다==!
    -->
    <select id="selectColSaleDstrtRecWtnncPdlsList" parameterType="alpass.ipt.col.com.vo.ColDstrtRecWtnncPdlsVo" resultType="alpass.ipt.col.com.vo.ColDstrtRecWtnncPdlsVo">
        /** ColSaleDstrtRecWtnncMgmtMapper_selectColSaleDstrtRecWtnncPdlsList **/
        SELECT
        PDLS.DSTRT_REC_WTNNC_NO
        , PDLS.PDLS_SRNO
        , PDLS.DMGD_CMDT_NM
        , PDLS.DMGD_CMDT_QTY
        , PDLS.DMGD_CMDT_PRC
        , PDLS.WDRW_CMDT_NM
        , PDLS.WDRW_CMDT_QTY
        , PDLS.WDRW_CMDT_PRC
        , PDLS.FRST_REGST_ID								    				/** ID du premier enregistrant !== 최초등록자ID ==! */
        , PDLS.FRST_RGSR_DTTM									    			/** Date et heure de premier enregistrement !== 생성일자 ==! */
        , PDLS.LAST_CHPR_ID														/** ID du modificateur final !== 최종변경자ID ==! */
        , PDLS.LAST_CHG_DTTM													/** Date et heure de modification finale !== 최종변경일시 ==! */
        FROM   TB_COLI_DSTRT_REC_WTNNC_PDLS PDLS
        WHERE  PDLS.DEL_YN = 'N'
        <if test='dstrtRecWtnncNo != null and dstrtRecWtnncNo !="" '>
            AND    PDLS.DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo}
        </if>
        ORDER BY PDLS.DSTRT_REC_WTNNC_NO ASC
    </select>

    <!--
    Supprimer l'article du procès-verbal de destruction !==파기기록조서품목을 삭제한다==!
    -->
    <update id="deleteColSaleDstrtRecWtnncPdls" parameterType="alpass.ipt.col.com.vo.ColDstrtRecWtnncPdlsVo">
        /** ColSaleDstrtRecWtnncMgmtMapper_deleteColSaleDstrtRecWtnncPdls **/
        UPDATE TB_COLI_DSTRT_REC_WTNNC_PDLS SET
            DEL_YN = 'Y'
            , LAST_CHPR_ID = #{lastChprId}
            , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo}
    </update>

    <!--
    Ajouter l'article du procès-verbal de destruction !==파기기록조서품목을 추가한다==!
    -->
    <insert id="insertColSaleDstrtRecWtnncPdls" parameterType="alpass.ipt.col.com.vo.ColDstrtRecWtnncPdlsVo">
        /** ColSaleDstrtRecWtnncMgmtMapper_insertColSaleDstrtRecWtnncPdls **/
        INSERT INTO TB_COLI_DSTRT_REC_WTNNC_PDLS (
              DSTRT_REC_WTNNC_NO
            , PDLS_SRNO
            , DMGD_CMDT_NM
            , DMGD_CMDT_QTY
            , DMGD_CMDT_PRC
            , WDRW_CMDT_NM
            , WDRW_CMDT_QTY
            , WDRW_CMDT_PRC
            , DEL_YN							    						/** Suppression ON !== 삭제여부  ==! */
            , FRST_REGST_ID								    				/** ID du premier enregistrant !== 최초등록자ID ==! */
            , FRST_RGSR_DTTM									    			/** Date et heure de premier enregistrement !== 생성일자 ==! */
            , LAST_CHPR_ID														/** ID du modificateur final !== 최종변경자ID ==! */
            , LAST_CHG_DTTM													/** Date et heure de modification finale !== 최종변경일시 ==! */
        ) VALUES (
            #{dstrtRecWtnncNo}
            , (SELECT NVL(MAX(PDLS_SRNO), 0) + 1 FROM TB_COLI_DSTRT_REC_WTNNC_PDLS WHERE DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo})
            , #{dmgdCmdtNm}
            , #{dmgdCmdtQty}
            , #{dmgdCmdtPrc}
            , #{wdrwCmdtNm}
            , #{wdrwCmdtQty}
            , #{wdrwCmdtPrc}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
        )
    </insert>

    <!--
    Modifier l'article du procès-verbal de destruction !==파기기록조서품목을 수정한다==!
    -->
    <update id="updateColSaleDstrtRecWtnncPdls" parameterType="alpass.ipt.col.com.vo.ColDstrtRecWtnncPdlsVo">
        /* ColSaleDstrtRecWtnncMgmtMapper_updateColSaleDstrtRecWtnncPdls */
        UPDATE TB_COLI_DSTRT_REC_WTNNC_PDLS SET
            DMGD_CMDT_NM        = #{dmgdCmdtNm}
            , DMGD_CMDT_QTY     = #{dmgdCmdtQty}
            , DMGD_CMDT_PRC     = #{dmgdCmdtPrc}
            , WDRW_CMDT_NM      = #{wdrwCmdtNm}
            , WDRW_CMDT_QTY     = #{wdrwCmdtQty}
            , WDRW_CMDT_PRC     = #{wdrwCmdtPrc}
            , DEL_YN            = 'N'
            , LAST_CHPR_ID      = #{lastChprId}
            , LAST_CHG_DTTM     = SYSTIMESTAMP
        WHERE DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo}
        AND PDLS_SRNO = #{pdlsSrno}
    </update>

    <!--
    Ajouter et modifier l'article du procès-verbal de destruction !==파기기록조서품목을 추가 및 수정한다==!
    -->
    <insert id="insertColSaleDstrtRecWtnncPdlsAdd" parameterType="alpass.ipt.col.com.vo.ColDstrtRecWtnncPdlsVo">
        /* ColSaleDstrtRecWtnncMgmtMapper_insertColSaleDstrtRecWtnncPdlsAdd */
        MERGE INTO TB_COLI_DSTRT_REC_WTNNC_PDLS PDLS
            USING DUAL ON (PDLS.DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo}
                AND PDLS.PDLS_SRNO = #{pdlsSrno})
            WHEN MATCHED THEN
                UPDATE SET
                    DMGD_CMDT_NM        = #{dmgdCmdtNm}
                    , DMGD_CMDT_QTY     = #{dmgdCmdtqty}
                    , DMGD_CMDT_PRC     = #{dmgdCmdtPrc}
                    , WDRW_CMDT_NM      = #{wdrwCmdtNm}
                    , WDRW_CMDT_QTY     = #{wdrwCmdtqty}
                    , WDRW_CMDT_PRC     = #{wdrwCmdtprc}
                    , DEL_YN            = 'N'
                    , LAST_CHPR_ID      = #{lastChprId}
                    , LAST_CHG_DTTM     = SYSTIMESTAMP
            WHEN NOT MATCHED THEN
                INSERT (
                    DSTRT_REC_WTNNC_NO
                    , PDLS_SRNO
                    , DMGD_CMDT_NM
                    , DMGD_CMDT_QTY
                    , DMGD_CMDT_PRC
                    , WDRW_CMDT_NM
                    , WDRW_CMDT_QTY
                    , WDRW_CMDT_PRC
                    , DEL_YN							    						/** Suppression ON !== 삭제여부  ==! */
                    , FRST_REGST_ID								    				/** ID du premier enregistrant !== 최초등록자ID ==! */
                    , FRST_RGSR_DTTM									    			/** Date et heure de premier enregistrement !== 생성일자 ==! */
                    , LAST_CHPR_ID														/** ID du modificateur final !== 최종변경자ID ==! */
                    , LAST_CHG_DTTM													/** Date et heure de modification finale !== 최종변경일시 ==! */
                ) VALUES (
                    #{dstrtRecWtnncNo}
                    , (SELECT NVL(MAX(PDLS_SRNO), 0) + 1 FROM TB_COLI_DSTRT_REC_WTNNC_PDLS WHERE DSTRT_REC_WTNNC_NO = #{dstrtRecWtnncNo})
                    , #{dmgdCmdtNm}
                    , #{dmgdCmdtqty}
                    , #{dmgdCmdtPrc}
                    , #{wdrwCmdtNm}
                    , #{wdrwCmdtqty}
                    , #{wdrwCmdtprc}
                    , 'N'
                    , #{frstRegstId}
                    , SYSTIMESTAMP
                    , #{lastChprId}
                    , SYSTIMESTAMP
                )
    </insert>

</mapper>