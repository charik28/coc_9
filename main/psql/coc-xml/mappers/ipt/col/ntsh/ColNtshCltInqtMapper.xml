<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="alpass.ipt.col.ntsh.mapper.ColNtshCltInqtMapper">

    <!--
    Consulter la liste des bons à enlever !==반출증 목록 조회==!
    -->
    <select id="selectColNtshCltInqtList" parameterType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo">
        /** ColNtshCltInqtMapper_selectColNtshCltInqtList **/
        <include refid="pagination.header" />
        SELECT
		            CLT.CLT_NO                                                              /** N° de bon à enlever !== 반출증번호 ==! */
		            , CLT.CSTM_CD                                                           /** Code du bureau !== 세관코드 ==! */
		            , FN_GET_ORGN_NM(CLT.CSTM_CD) AS CSTM_NM								/** Nom Du Bureau !== 세관명 ==! */
		            , CLT.DEPT_CD
                    , (SELECT FN_GET_ORGN_NM(orgn_cd) FROM
                        (SELECT orgn_cd FROM TB_POTI_ORGN
                        WHERE ORGN_CD = CLT.DEPT_CD
                        AND DEL_YN = 'N'
                        AND LENGTH(RIT_AC_NO) = '20'
                        AND ORGN_TP_CD = 'REC'
                        AND ROWNUM = 1
                        UNION
                        SELECT orgn_cd
                        FROM TB_POTI_ORGN
                        WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = CLT.DEPT_CD) LIKE '%'||ORGN_MGMT_CD||'%' AND ORGN_TP_CD = 'REC')
                        WHERE ROWNUM = 1) AS DEPT_NM	/** Nom Du Bureau !== 부서명 ==! */
		            , CLT.REFF_NO_PT_CD                                                     /** Code de type de numero de reference !== 참조번호유형코드 ==! */
		            , CLT.REFF_NO                                                           /** N° de reference !== 참조번호 ==! */
		            , TO_CHAR(TO_DATE(CLT.REFF_NO_DT,'YYYYMMDD'),'DD/MM/YYYY') AS REFF_NO_DT		/** Date de référence !== 참조번호일자(결제요청서일자) ==! */
		            , CLT.DCER_CD															/** Code du declarant !== 신고인코드 ==!*/
		            , CLT.DCER_NM															/** Nom Du Déclarant !== 신고인명 ==!*/
		            , CLT.IMPPN_IDFY_NO_TP_CD												/** Code de type de NIF de l'importateur !== 수입자식별번호구분코드 ==!*/
		            , CLT.IMPPN_IDFY_NO														/** NIF de l'importateur !== 수입자식별번호 ==!*/
		            , CLT.IMPPN_NM															/** Nom de l'exportateur !== 수입자명 ==!*/
		            , CLT.EXPPN_IDFY_NO_TP_CD												/** Code de type de NIF de l'exportateur !== 수출자식별번호구분코드 ==!*/
		            , CLT.EXPPN_IDFY_NO														/** NIF de l'exportateur !== 수출자식별번호 ==!*/
		            , CLT.EXPPN_NM															/** Nom de l'exportateur !== 수출자명 ==!*/
		            , CLT.CAG_MGMT_NO														/** CRN !== 화물관리번호 ==! */
		            , CLT.PDLS_PCKG_GCNT													/** Nombre de colis !== 품목포장개수 ==! */
		            , CLT.PDLS_PCKG_UT_CD													/** Code de conditionnement !== 품목포장단위코드 ==! */
		            , CLT.CAG_NM															/** Désignation des marchandises !== 화물명 ==! */
		            , CLT.NTFC_NO															/** N° D'Avis !== 고지번호  ==! */
		            , CLT.RCVE_NO															/** N° d'encaissement !== 수납번호  ==! */
		            , TO_CHAR(TO_DATE(CLT.RCVE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT		/** Date de paiement !== 수납일자  ==! */
		            , CLT.IBOBZ_CD															/** Code de zone sous douane !== 보세구역코드 ==! */
		            , CLT.PRCS_STTS_CD														/** Code De Statut De Traitement !== 처리상태코드 ==! */
		            , TO_CHAR(TO_DATE(CLT.RGSR_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RGSR_DT		/** Date D'Enregistrement !== 등록일자 ==! */
		            , CLT.RMRK_CN															/** Contenu de la remarque !== 비고내용 ==! */
		            , CLT.ATCH_FILE_ID														/** Date et heure de modification finale !== 첨부파일ID ==! */
		            , CASE WHEN CLT.REFF_NO_PT_CD = '002' THEN (
		                SELECT A.EPC_CD                                                          /** Régime !== 레짐 ==! */
		                FROM  TB_CLRI_DED_COMN A
		                WHERE   A.DEL_YN = 'N'
		                AND   A.DTL_DCSH_NO = CLT.REFF_NO)
		                ELSE NULL END AS REGM_RQST_CD
		             , DCSH.TRNP_MEAN_CD
		             , DECODE(DCSH.HBL_NO, '', DCSH.BL_NO, DCSH.HBL_NO) BL_NO
		             , DCSH.MRN
		             , TO_CHAR(TRSN_DTTM,'YYYY') AS RGSR_YYYY
        FROM   TB_COLI_CLT_PBLS CLT
             	   , TB_COLI_NTFC NTFC
		           , (SELECT TRNP_MEAN_CD, TRSN_DTTM, HBL_NO, BL_NO, A.MRN, B.CAG_MGMT_NO
		                FROM TB_CARI_CAG_DCSH A, TB_CARI_CAG_DCSH_BL B
		 		      WHERE A.MRN = B.MRN
		 				   AND A.DEL_YN = 'N') DCSH
        WHERE  CLT.DEL_YN = 'N'
          AND   CLT.NTFC_NO = NTFC.NTFC_NO(+)
          AND   CLT.CAG_MGMT_NO	= DCSH.CAG_MGMT_NO(+)
        <if test="sctrCd != null and sctrCd != ''">
            AND  CLT.CSTM_CD LIKE SUBSTRING(#{sctrCd},1,3) || '%'
        </if>
        <if test="uprOrgnCd != null and uprOrgnCd != ''">
            AND  NTFC.CSTM_CD = #{uprOrgnCd}
        </if>
<!--        <if test="orgnCd != null and orgnCd != ''">-->
<!--            AND (CLT.DEPT_CD = #{orgnCd} OR CLT.DEPT_CD IN (SELECT ORGN_CD-->
<!--                                                       FROM TB_POTI_ORGN-->
<!--                                                     WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) LIKE '%'||ORGN_MGMT_CD||'%'))-->
<!--        </if>-->
        <if test="orgnCd != null and orgnCd != ''">
			AND  (NTFC.DEPT_CD = #{orgnCd} OR NTFC.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) LIKE '%'||ORGN_MGMT_CD||'%')
										   OR NTFC.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}))))
			AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
					CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{orgnCd}) = 'C'
						 THEN NTFC.NTFC_PT_CD = 'A'
						 ELSE NTFC.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
					END
				ELSE TRUE END
        </if>
        <if test='cstmCd != null and cstmCd !="" '>
            AND    CLT.CSTM_CD = #{cstmCd}
        </if>
        <if test='deptCd != null and deptCd !=""'>
            AND  (CLT.DEPT_CD = #{deptCd} OR CLT.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE (SELECT ACTV_CSTM_CD FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) LIKE '%'||ORGN_MGMT_CD||'%')
                                          OR CLT.DEPT_CD IN (SELECT ORGN_CD FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))
                                                                                              OR UPR_ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}))))
            AND CASE WHEN (SELECT COUNT(1) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_MGMT_CD IN (SELECT UNNEST(STRING_TO_ARRAY(ACTV_CSTM_CD,'|')) FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd})) AND ORGN_AUTH ='C') <![CDATA[ >= ]]> 1 THEN
                    CASE WHEN (SELECT ORGN_AUTH FROM TB_POTI_ORGN WHERE ORGN_CD = #{deptCd}) = 'C'
                         THEN NTFC.NTFC_PT_CD = 'A'
                         ELSE NTFC.NTFC_PT_CD <![CDATA[ <> ]]> 'A'
                    END
                ELSE TRUE END
        </if>
        <if test='reffNoPtCd != null and reffNoPtCd !="" '>
            AND    CLT.REFF_NO_PT_CD = #{reffNoPtCd}
        </if>
        <if test='reffNo != null and reffNo !="" '>
            AND    CLT.REFF_NO = #{reffNo}
        </if>
        <if test='dcerCd != null and dcerCd !="" '>
            AND    CLT.DCER_CD = #{dcerCd}
        </if>
        <if test='reffNoDtFrom != null and reffNoDtFrom !="" and reffNoDtTo != null and reffNoDtTo !="" '>
            AND  CLT.REFF_NO_DT  BETWEEN TO_CHAR(TO_DATE(#{reffNoDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{reffNoDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='ntfcPtCdChk != null and ntfcPtCdChk.size() > 0'>
            AND    NTFC.NTFC_PT_CD IN  <foreach collection="ntfcPtCdChk" item="ntfcPtCd" open="(" close=")" separator=",">#{ntfcPtCd}</foreach>
        </if>
        <if test='ntfcDtFrom != null and ntfcDtFrom !="" and ntfcDtTo != null and ntfcDtTo !="" '>
            AND  NTFC.NTFC_DT  BETWEEN TO_CHAR(TO_DATE(#{ntfcDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{ntfcDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        <if test='mgTpCd != null and mgTpCd =="20" '>
            AND    NTFC.MG_TP_CD = 'A'
        </if>
        <if test='mgTpCd != null and mgTpCd =="30" '>
            AND    NTFC.MG_TP_CD = 'B'
        </if>
        <if test='mgTpCd != null and mgTpCd =="10" '>
            AND    (NTFC.MG_TP_CD = 'C' OR NTFC.MG_TP_CD is null)
        </if>
        ORDER BY CLT.RCVE_DT desc, CLT.RGSR_DT desc, CLT.CLT_NO ASC
        <include refid="pagination.footer" />
    </select>

    <!--
    Consultatioon de la liste de déclaration !==신고서 목록 조회==!
    -->
    <select id="selectColNtshCltReffNo" parameterType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo">
        /** ColNtshCltInqtMapper_selectColNtshCltReffNo **/
        SELECT
             A.DCLR_CSTM_CD AS CSTM_CD                                                                 /** Code du bureau !== 세관코드 ==! */
             , A.DEPT_CD                                                               /** Code de service !== 부서코드 ==! */
             , A.EPC_CD AS REGM_RQST_CD                                                          /** Régime !== 레짐 ==! */
             , TO_CHAR(TO_DATE(A.DCLR_DT,'YYYYMMDD'),'DD/MM/YYYY') AS DCLR_DT          /** Date de déclaration !== 신고일자 ==! */
             , A.IMPPN_IDFY_NO_TP_CD                                                   /** l'importateur  !== 수입자 ==! */
             , A.IMPPN_IDFY_NO
             , E.IMPPN_CO_NM AS IMPPN_NM
             , A.EXPPN_IDFY_NO_TP_CD                                                    /** l'exportateur !== 수출자 ==! */
             , A.EXPPN_IDFY_NO
             , E.EXPPN_CO_NM AS EXPPN_NM
             , A.DCER_CD                                                                /** Déclarant !== 신고인 ==! */
             , E.DCER_CO_NM AS DCER_NM
             , A.CAG_MGMT_NO                                                            /** CRN !== CRN ==! */
             , C.PDLS_PCKG_GCNT                                                         /** Nombre de colis !== 품목포장개수 ==! */
             , C.PDLS_PCKG_UT_CD                                                        /** Code de conditionnement !== 포장단위코드 ==! */
             , REGEXP_SUBSTR(C.PDLS_NM,'[^,]+', 1, 1) CAG_NM                            /** Désignation des marchandises !== 화물명 ==! */
             , A.CMDT_STGE_LOCT_CD AS IBOBZ_CD                                          /** Lieu d'emmagasinage !== 장치장소 ==! */
             , D.RCVE_NO                                                                /** N° de la quittance !== 영수증번호 ==! */
             , TO_CHAR(TO_DATE(D.RCVE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT          /** Date de la quittance !== 영수증일자 ==! */
             , A.PRCS_STTS_CD
             , B.NTFC_NO
        FROM  TB_CLRI_DED_COMN A
           , TB_COLI_NTFC B
           , TB_CLRI_DED_PDLS C
           , TB_COLI_RCVE D
           , TB_CLRI_DED_CO E
           , TB_CLRI_DED_VLUT_AUDT_COMN F
        WHERE   A.DEL_YN = 'N'
          AND   A.DTL_DCSH_NO = B.DCLR_NO (+)
          AND   A.DTL_DCSH_NO = C.DTL_DCSH_NO (+)
          AND   B.NTFC_NO = D.NTFC_NO (+)
          AND   A.DTL_DCSH_NO = E.DTL_DCSH_NO (+)
          AND   A.DTL_DCSH_NO = F.DTL_DCSH_NO (+)
          AND   A.DTL_DCSH_NO = #{reffNo}
          AND   C.PDLS_NO(+) = '1'
    </select>

    <!--
    Ajouter un bon à enlever !==반출증 등록==!
    -->
    <insert id="insertColNtshCltInqt" parameterType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo">
        /** ColNtshCltInqtMapper_insertColNtshCltInqt **/

        INSERT INTO TB_COLI_CLT_PBLS (
            CLT_NO
            , CSTM_CD
            , DEPT_CD
            , REFF_NO_PT_CD
            , REFF_NO
            , REFF_NO_DT
            , DCER_CD
            , DCER_NM
            , IMPPN_IDFY_NO_TP_CD
            , IMPPN_IDFY_NO
            , IMPPN_NM
            , EXPPN_IDFY_NO_TP_CD
            , EXPPN_IDFY_NO
            , EXPPN_NM
            , CAG_MGMT_NO
            , CAG_NM
            , NTFC_NO
            , RCVE_NO
            , RCVE_DT
            , PRCS_STTS_CD
            , RGSR_DT
            , RMRK_CN
            , ATCH_FILE_ID
            , IBOBZ_CD
            , PDLS_PCKG_GCNT
            , PDLS_PCKG_UT_CD
            , DEL_YN
            , FRST_REGST_ID
            , FRST_RGSR_DTTM
            , LAST_CHPR_ID
            , LAST_CHG_DTTM
        ) VALUES (
            #{cltNo}
            , #{cstmCd}
            , #{deptCd}
            , #{reffNoPtCd}
            , #{reffNo}
            , TO_CHAR(TO_DATE(#{reffNoDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , #{dcerCd}
            , #{dcerNm}
            , #{imppnIdfyNoTpCd}
            , #{imppnIdfyNo}
            , #{imppnNm}
            , #{exppnIdfyNoTpCd}
            , #{exppnIdfyNo}
            , #{exppnNm}
            , #{cagMgmtNo}
            , #{cagNm}
            , #{ntfcNo}
            , #{rcveNo}
            , TO_CHAR(TO_DATE(#{rcveDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , #{prcsSttsCd}
            , TO_CHAR(TO_DATE(#{rgsrDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
            , #{rmrkCn}
            , #{atchFileId}
            , #{ibobzCd}
            , #{pdlsPckgGcnt}
            , #{pdlsPckgUtCd}
            , 'N'
            , #{frstRegstId}
            , SYSTIMESTAMP
            , #{lastChprId}
            , SYSTIMESTAMP
        )
    </insert>

    <!--
    Enregistrer le bon à enlever avec le numéro de référence !==참조번호로 반출증 등록==!
    -->
    <insert id="insertColNtshCltInqtReff" parameterType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo">
        /** ColNtshCltInqtMapper_insertColNtshCltInqtReff **/
        INSERT INTO TB_COLI_CLT_PBLS
        (
        CLT_NO
        , CSTM_CD
        , DEPT_CD
        , REFF_NO_PT_CD
        , REFF_NO
        , REFF_NO_DT
        , DCER_CD
        , DCER_NM
        , IMPPN_IDFY_NO_TP_CD
        , IMPPN_IDFY_NO
        , IMPPN_NM
        , EXPPN_IDFY_NO_TP_CD
        , EXPPN_IDFY_NO
        , EXPPN_NM
        , CAG_MGMT_NO
        , CAG_NM
        , NTFC_NO
        , RCVE_NO
        , RCVE_DT
        , PRCS_STTS_CD
        , RGSR_DT
        , RMRK_CN
        , ATCH_FILE_ID
        , IBOBZ_CD
        , PDLS_PCKG_GCNT
        , PDLS_PCKG_UT_CD
        , DEL_YN
        , FRST_REGST_ID
        , FRST_RGSR_DTTM
        , LAST_CHPR_ID
        , LAST_CHG_DTTM
        )
        SELECT
            #{cltNo}
             , B.CSTM_CD
             , A.DEPT_CD
             , '001'
             , #{reffNo}
             , A.DCLR_DT
             , A.DCER_CD
             , E.DCER_CO_NM
             , A.IMPPN_IDFY_NO_TP_CD
             , A.IMPPN_IDFY_NO
             , E.IMPPN_CO_NM
             , A.EXPPN_IDFY_NO_TP_CD
             , A.EXPPN_IDFY_NO
             , E.EXPPN_CO_NM
             , A.CAG_MGMT_NO
             , REGEXP_SUBSTR(C.PDLS_NM,'[^,]+', 1, 1)
             , B.NTFC_NO
             , D.RCVE_NO
             , D.RCVE_DT
             , A.PRCS_STTS_CD
             , TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD')
             , ''
             , D.ATCH_FILE_ID
             , A.CMDT_STGE_LOCT_CD
             , C.PDLS_PCKG_GCNT
             , C.PDLS_PCKG_UT_CD
             , 'N'
             , #{frstRegstId}
             , SYSTIMESTAMP
             , #{lastChprId}
             , SYSTIMESTAMP
        FROM  TB_CLRI_DED_COMN A
           , TB_COLI_NTFC B
           , TB_CLRI_DED_PDLS C
           , TB_COLI_RCVE D
           , TB_CLRI_DED_CO E
        WHERE A.DTL_DCSH_NO = B.REFF_NO (+)
          AND   A.DTL_DCSH_NO = C.DTL_DCSH_NO (+)
          AND   B.NTFC_NO = D.NTFC_NO (+)
          AND   A.DTL_DCSH_NO = E.DTL_DCSH_NO (+)
          AND   A.DTL_DCSH_NO = #{reffNo}
    </insert>

    <!--
    Modifier le bon à enlever !==반출증 수정==!
    -->
    <update id="updateColNtshCltInqt" parameterType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo">
        /** colNtshCltInqt_insertColNtshCltInqt **/
        UPDATE  TB_COLI_CLT_PBLS SET
            CSTM_CD = #{cstmCd}
           , DEPT_CD = #{deptCd}
           , REFF_NO_PT_CD = #{reffNoPtCd}
           , REFF_NO = #{reffNo}
           , REFF_NO_DT = TO_CHAR(TO_DATE(#{reffNoDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
           , DCER_CD = #{dcerCd}
           , DCER_NM = #{dcerNm}
           , IMPPN_IDFY_NO_TP_CD = #{imppnIdfyNoTpCd}
           , IMPPN_IDFY_NO = #{imppnIdfyNo}
           , IMPPN_NM = #{imppnNm}
           , EXPPN_IDFY_NO_TP_CD = #{exppnIdfyNoTpCd}
           , EXPPN_IDFY_NO = #{exppnIdfyNo}
           , EXPPN_NM = #{exppnNm}
           , CAG_MGMT_NO = #{cagMgmtNo}
           , CAG_NM = #{cagNm}
           , NTFC_NO = #{ntfcNo}
           , RCVE_NO = #{rcveNo}
           , RCVE_DT = TO_CHAR(TO_DATE(#{rcveDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
           , PRCS_STTS_CD = #{prcsSttsCd}
           , RGSR_DT = TO_CHAR(TO_DATE(#{rgsrDt} , 'DD/MM/YYYY'), 'YYYYMMDD')
           , RMRK_CN = #{rmrkCn}
           , ATCH_FILE_ID = #{atchFileId}
           , IBOBZ_CD = #{ibobzCd}
           , PDLS_PCKG_GCNT = #{pdlsPckgGcnt}
           , PDLS_PCKG_UT_CD = #{pdlsPckgUtCd}
           , LAST_CHPR_ID = #{lastChprId}
           , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE CLT_NO = #{cltNo}
    </update>

    <!--
    Consulter un bon à enlever !==반출증 상세조회==!
    -->
    <select id="selectColNtshCltInqt" parameterType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo" resultType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo">
        /** colNtshCltInqtMapper.selectColNtshCltInqt **/
        <include refid="pagination.header" />
        SELECT
        CLT.CLT_NO                                                              /** N° de bon à enlever !== 반출증번호 ==! */
        , CLT.CSTM_CD                                                           /** Code du bureau !== 세관코드 ==! */
        , FN_GET_ORGN_NM(CLT.CSTM_CD) AS CSTM_NM								/** Nom Du Bureau !== 세관명 ==! */
        , (SELECT ADMN_CD FROM TB_POTI_ORGN WHERE ORGN_CD = CLT.DEPT_CD AND DEL_YN = 'N')  AS ADMN_CD
        , CLT.DEPT_CD
        , REPLACE(FN_GET_ORGN_NM(CLT.DEPT_CD),'Bureau de douane ') AS DEPT_NM								/** Nom Du Bureau !== 세관명 ==! */
        , CLT.REFF_NO_PT_CD                                                     /** Code de type de numero de reference !== 참조번호유형코드 ==! */
        , CLT.REFF_NO                                                           /** N° de reference !== 참조번호 ==! */
        , TO_CHAR(TO_DATE(CLT.REFF_NO_DT,'YYYYMMDD'),'DD/MM/YYYY') AS REFF_NO_DT		/** Date de référence !== 참조번호일자(결제요청서일자) ==! */
        , CLT.DCER_CD															/** Code du declarant !== 신고인코드 ==!*/
        , CLT.DCER_NM															/** Nom Du Déclarant !== 신고인명 ==!*/
        , CLT.IMPPN_IDFY_NO_TP_CD												/** Code de type de NIF de l'importateur !== 수입자식별번호구분코드 ==!*/
        , CLT.IMPPN_IDFY_NO														/** NIF de l'importateur !== 수입자식별번호 ==!*/
        , CLT.IMPPN_NM															/** Nom de l'exportateur !== 수입자명 ==!*/
        , CLT.EXPPN_IDFY_NO_TP_CD												/** Code de type de NIF de l'exportateur !== 수출자식별번호구분코드 ==!*/
        , CLT.EXPPN_IDFY_NO														/** NIF de l'exportateur !== 수출자식별번호 ==!*/
        , CLT.EXPPN_NM															/** Nom de l'exportateur !== 수출자명 ==!*/
        , CLT.CAG_MGMT_NO														/** CRN !== 화물관리번호 ==! */
        , CLT.PDLS_PCKG_GCNT													/** Nombre de colis !== 품목포장개수 ==! */
        , CLT.PDLS_PCKG_UT_CD													/** Code de conditionnement !== 품목포장단위코드 ==! */
        , CLT.CAG_NM															/** Désignation des marchandises !== 화물명 ==! */
        , CLT.NTFC_NO															/** N° D'Avis !== 고지번호  ==! */
        , CLT.RCVE_NO															/** N° d'encaissement !== 수납번호  ==! */
        , TO_CHAR(TO_DATE(CLT.RCVE_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RCVE_DT		/** Date de paiement !== 수납일자  ==! */
        , CLT.IBOBZ_CD															/** Code de zone sous douane !== 보세구역코드 ==! */
        , CLT.PRCS_STTS_CD														/** Code De Statut De Traitement !== 처리상태코드 ==! */
        , TO_CHAR(TO_DATE(CLT.RGSR_DT,'YYYYMMDD'),'DD/MM/YYYY') AS RGSR_DT		/** Date D'Enregistrement !== 등록일자 ==! */
        , CLT.RMRK_CN															/** Contenu de la remarque !== 비고내용 ==! */
        , CLT.ATCH_FILE_ID														/** Date et heure de modification finale !== 첨부파일ID ==! */
        , NVL(CLT.RSOD_PRNT_NCNT, 0) AS RSOD_PRNT_NCNT
        , CASE WHEN CLT.REFF_NO_PT_CD = '002' THEN (
        SELECT A.EPC_CD                                                          /** Régime !== 레짐 ==! */
        FROM  TB_CLRI_DED_COMN A
        WHERE   A.DEL_YN = 'N'
        AND   A.DTL_DCSH_NO = CLT.REFF_NO)
        ELSE NULL END AS REGM_RQST_CD
        , DCSH.TRNP_MEAN_CD
        , DECODE(DCSH.HBL_NO, '', DCSH.BL_NO, DCSH.HBL_NO) BL_NO
        , DCSH.MRN
        , TO_CHAR(TRSN_DTTM,'YYYY') AS RGSR_YYYY
        , (select CD_VDVAL_NM FROM TB_COM_COMN_CD_D_LANG WHERE COMN_CD = 'CAR_0013' and LANG_CD = 'FR' and CD_VDVAL = DCSH.TRNP_MEAN_CD) AS TRNP_MEAN_NM
        , (select DCLR_PT_CD from TB_CLRI_DED_COMN A where A.DEL_YN ='N' and A.DTL_DCSH_NO = CLT.REFF_NO) as DCLR_PT_CD
        FROM   TB_COLI_CLT_PBLS CLT
                , (SELECT TRNP_MEAN_CD, TRSN_DTTM, HBL_NO, BL_NO, A.MRN, B.CAG_MGMT_NO
                      FROM TB_CARI_CAG_DCSH A, TB_CARI_CAG_DCSH_BL B
                    WHERE A.MRN = B.MRN
                      AND A.DEL_YN = 'N') DCSH
        WHERE  CLT.DEL_YN = 'N'
        AND   CLT.CAG_MGMT_NO	= DCSH.CAG_MGMT_NO(+)
        <if test="cltNo != null and cltNo != ''">
            AND  CLT.CLT_NO = #{cltNo}
        </if>
        <if test="uprOrgnCd != null and uprOrgnCd != ''">
            AND  CLT.CSTM_CD = #{uprOrgnCd}
        </if>
        <if test="orgnCd != null and orgnCd != ''">
            AND  CLT.DEPT_CD = #{orgnCd}
        </if>
        <if test='cstmCd != null and cstmCd !="" '>
            AND    CLT.CSTM_CD = #{cstmCd}
        </if>
        <if test='reffNoPtCd != null and reffNoPtCd !="" '>
            AND    CLT.REFF_NO_PT_CD = #{reffNoPtCd}
        </if>
        <if test='reffNo != null and reffNo !="" '>
            AND    CLT.REFF_NO = #{reffNo}
        </if>
        <if test='dcerCd != null and dcerCd !="" '>
            AND    CLT.DCER_CD = #{dcerCd}
        </if>
        <if test='ntfcNo != null and ntfcNo !="" '>
            AND    CLT.NTFC_NO = #{ntfcNo}
        </if>
        <if test='reffNoDtFrom != null and reffNoDtFrom !="" and reffNoDtTo != null and reffNoDtTo !="" '>
            AND  CLT.REFF_NO_DT  BETWEEN TO_CHAR(TO_DATE(#{reffNoDtFrom},'DD/MM/YYYY'),'YYYYMMDD') AND TO_CHAR(TO_DATE(#{reffNoDtTo},'DD/MM/YYYY'),'YYYYMMDD')
        </if>
        ORDER BY CLT.RCVE_DT desc, CLT.RGSR_DT desc, CLT.CLT_NO ASC
        <include refid="pagination.footer" />
    </select>

    <!--
    Modifier le nombre d'impressions du bon à enlever !==반출증 인쇄 횟수 수정==!
    -->
    <update id="updateColNtshReport" parameterType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo">
        /** colNtshCltInqtMapper.updateColNtshReport **/
        UPDATE TB_COLI_CLT_PBLS SET
        <choose>
            <when test="rsodPrntNcnt == 0">
                RSOD_PRNT_NCNT = 1
            </when>
            <otherwise>
                RSOD_PRNT_NCNT = RSOD_PRNT_NCNT + 1
            </otherwise>
        </choose>
        , LAST_CHPR_ID = #{lastChprId}
        , LAST_CHG_DTTM = SYSTIMESTAMP
        WHERE DEL_YN = 'N'
        AND NTFC_NO = #{ntfcNo}
    </update>

    <!--
    Vérification des clés redondantes !==중복키 검사==!
    -->
    <select id="checkDuplicatePblsReffNo" parameterType="alpass.ipt.col.ntsh.vo.ColNtshCltInqtVo" resultType="int">
        SELECT COUNT(*)
        FROM TB_COLI_CLT_PBLS
        WHERE REFF_NO = #{reffNo}
          AND REFF_NO_PT_CD = #{reffNoPtCd}
          AND DEL_YN = 'N'
        <if test="cltNo != null and cltNo != ''">
            AND CLT_NO != #{cltNo}
        </if>
    </select>

</mapper>